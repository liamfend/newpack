{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******************","webpack:///global/helpers/currency.js","webpack:///webpack/bootstrap 7475bff11b25f6b898b5?9bc4******************","webpack:///./~/global/document.js?cc96***********","webpack:///./src/global/js/helpers/enum.js?5755**************","webpack:///./src/global/js/helpers/locale.js?0187*********","webpack:///./src/global/js/helpers/currency.js?bd24","webpack:///./~/accounting/accounting.js?502a","webpack:///./src/global/variables/currency.json?251b"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","0","12","global","doccy","topLevel","window","minDoc","document","13","42","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Enum","_this","_len","arguments","length","values","Array","_key","forEach","Error","writable","enumerable","configurable","default","NamespacedEnum","namespace","_this2","isArray","43","_interopRequireDefault","obj","__esModule","getLocale","format","undefined","domLocale","documentElement","lang","defaultLocale","parts","split","formats","lower_UPPER","toUpperCase","join","clearCache","_document","_document2","_enum","_enum2","174","getSymbolFromCurrency","currencyCode","currencySymbolMap","getDefaultCurrencyCode","locale","localeToCurrencyMapping","defaultCurrencyCode","getDefaultPaymentFrequency","formatCurrency","i18n","amount","precision","_locale","thousandSymbol","t","accounting","formatMoney","symbol","thousand","decimal","interpolation","prefix","suffix","currencies","_accounting","_accounting2","_currency","_currency2","code","label","en-gb","en-us","zh-cn","zh-tw","zh-hk","ko-kr","ja-jp","de-de","el-gr","el-cy","es-es","es-la","fr-fr","it-it","175","isString","charCodeAt","substr","nativeIsArray","toString","isObject","defaults","object","defs","key","hasOwnProperty","map","iterator","context","i","j","results","nativeMap","checkPrecision","val","base","Math","round","abs","isNaN","checkCurrencyFormat","lib","settings","currency","match","pos","neg","replace","zero","version","grouping","number","prototype","unformat","parse","regex","RegExp","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","negative","parseInt","mod","useFormat","formatColumn","list","padAfterSymbol","indexOf","maxLength","formatted","fVal","176","ALL","AFN","ARS","AWG","AUD","AZN","BSD","BBD","BYR","BZD","BMD","BOB","BAM","BWP","BGN","BRL","BND","KHR","CAD","KYD","CLP","CNY","COP","CRC","HRK","CUP","CZK","DKK","DOP","XCD","EGP","SVC","EEK","EUR","FKP","FJD","GHC","GIP","GTQ","GGP","GYD","HNL","HKD","HUF","ISK","INR","IDR","IRR","IMP","ILS","JMD","JPY","JEP","KES","KZT","KPW","KRW","KGS","LAK","LVL","LBP","LRD","LTL","MKD","MYR","MUR","MXN","MNT","MZN","NAD","NPR","ANG","NZD","NIO","NGN","NOK","OMR","PKR","PAB","PYG","PEN","PHP","PLN","QAR","RON","RUB","RMB","SHP","SAR","RSD","SCR","SGD","SBD","SOS","ZAR","LKR","SEK","CHF","SRD","SYP","TZS","TWD","THB","TTD","TRY","TRL","TVD","UGX","UAH","GBP","USD","UYU","UZS","VEF","VND","YER","ZWD","GEL"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,0BAAAD,IAEAD,EAAA,0BAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBMS,EACA,SAAUd,EAAQD,EAASM,GAEhCL,EAAOD,QAAUM,EAAoB,MAKhCU,GACA,SAAUf,EAAQD,EAASM,IAEJ,SAASW,GAAS,YEjE/C,IAIIC,GAJAC,EAA6B,mBAAXF,GAAyBA,EACzB,mBAAXG,QAAyBA,UAChCC,EAASf,EAAQ,GAIG,oBAAbgB,UACPJ,EAAQI,UAERJ,EAAQC,EAAS,6BAEZD,IACDA,EAAQC,EAAS,6BAA+BE,IAIxDpB,EAAOD,QAAUkB,IFmEaP,KAAKX,EAAU,WAAa,MAAOI,WAI3DmB,GACA,SAAUtB,EAAQD,KAMlBwB,GACA,SAAUvB,EAAQD,GAEvB,YAMA,SAASyB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHC,OAAOC,eAAe9B,EAAS,cAC7B+B,OAAO,GAWT,IGzGoBC,GACnB,QAAAA,KAAuB,GAAAC,GAAA7B,IAAAqB,GAAArB,KAAA4B,EAAA,QAAAE,GAAAC,UAAAC,OAARC,EAAQC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAARF,EAAQE,GAAAJ,UAAAI,EACrBF,GAAOG,QAAQ,SAACT,GACd,GAAqB,gBAAVA,GACT,KAAM,IAAIU,OAAJ,gBAA0BV,EAA1B,mBAGRF,QAAOC,eAAeG,EAAMF,GAC1BA,QACAW,UAAU,EACVC,YAAY,EACZC,cAAc,MHgIrB5C,GAAQ6C,QG3IYb,CH6IChC,GGnHT8C,eACX,QAAAA,GAAYC,EAAWV,GAAQ,GAAAW,GAAA5C,IAC7B,IAD6BqB,EAAArB,KAAA0C,GACJ,gBAAdC,GACT,KAAM,IAAIN,OAAM,mDAGlB,KAAKH,MAAMW,QAAQZ,GACjB,KAAM,IAAII,OAAM,mDAGlBJ,GAAOG,QAAQ,SAACT,GACd,GAAqB,gBAAVA,GACT,KAAM,IAAIU,OAAJ,0BAAoCV,EAApC,mBAGRF,QAAOC,eAAekB,EAAMjB,GAC1BA,MAAUgB,EAAV,IAAuBhB,EACvBW,UAAU,EACVC,YAAY,EACZC,cAAc,QH6HhBM,GACA,SAAUjD,EAAQD,EAASM,GAEhC,YAiBA,SAAS6C,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQP,QAASO,GI3LjF,QAASE,KAAkC,GAAxBC,GAAwBpB,UAAAC,OAAA,GAAAoB,SAAArB,UAAA,GAAAA,UAAA,GAAf,aAC5BsB,KACHA,EAAYnC,UAASoC,iBAAmBpC,UAASoC,gBAAgBC,KAC7DrC,UAASoC,gBAAgBC,KAAOC,EAGtC,IAAMC,GAAQJ,EAAUK,MAAM,IAE9B,QAAQP,GACN,IAAKQ,GAAQC,YAEX,MADAH,GAAM,GAAKA,EAAM,GAAGI,cACbJ,EAAMK,KAAK,IACpB,SACE,MAAOT,IAIN,QAASU,KACdV,EAAY,KJ0Jb5B,OAAOC,eAAe9B,EAAS,cAC7B+B,OAAO,IAET/B,EAAQ+D,QAAU/D,EAAQ4D,cAAgBJ,OAC1CxD,EIhLesD,YJiLftD,EIhKemE,YA1BhB,IAAAC,GAAA9D,EAAA,IJ8LK+D,EAAalB,EAAuBiB,GAEpCE,EAAQhE,EAAoB,IAE5BiE,EAASpB,EAAuBmB,GI/LjCb,SAESG,kBAAgB,QAEhBG,YAAU,GAAI/B,WAAK,cAAe,gBJ6NzCwC,IACA,SAAUvE,EAAQD,EAASM,GAEhC,YAqBA,SAAS6C,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQP,QAASO,GKnNjF,QAASqB,GAAsBC,GACpC,MAA4B,gBAAjBA,GACF,KAGFC,UAAkBD,EAAaT,gBAAkB,KAGnD,QAASW,GAAuBC,GACrC,MAAIC,GAAwBD,GACnBC,EAAwBD,GAG1BE,EAGF,QAASC,KACd,MAAO,QAGF,QAASC,GAAeC,EAAMC,EAAQT,GAA6B,GAAfU,GAAejD,UAAAC,OAAA,GAAAoB,SAAArB,UAAA,GAAAA,UAAA,GAAH,CACrE,KAAKgD,EACH,MAAO,KAGT,IAAMN,IAAS,EAAAQ,EAAA/B,aACXgC,EAAiBJ,EAAKK,EAAE,8CAM5B,QAJgB,UAAXV,GAAiC,UAAXA,IAAuBM,EAAS,MACzDG,EAAiB,IAGZE,UAAWC,YAChBN,GAEEO,OAAQjB,EAAsBC,GAC9BU,YACAO,SAAUL,EACVM,QAASV,EAAKK,EAAE,6CAChBhC,OAAQ2B,EAAKK,EAAE,sCACbM,eACEC,OAAQ,KACRC,OAAQ,ULsJjBlE,OAAOC,eAAe9B,EAAS,cAC7B+B,OAAO,IAET/B,EAAQ8E,wBAA0B9E,EAAQgG,WAAahG,EAAQ+E,oBAAsBvB,OACrFxD,EKpMeyE,wBLqMfzE,EK7Le4E,yBL8Lf5E,EKtLegF,6BLuLfhF,EKnLeiF,gBA7DhB,IAAAgB,GAAA3F,EAAA,KLoPK4F,EAAe/C,EAAuB8C,GAEtCZ,EAAU/E,EAAoB,IAE9B6F,EAAY7F,EAAoB,KAEhC8F,EAAajD,EAAuBgD,GKtP5BpB,wBAAsB,MAoBtBD,GAlBAkB,eACTK,KAAM,MAAOC,MAAO,cACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,aACpBD,KAAM,MAAOC,MAAO,YACpBD,KAAM,MAAOC,MAAO,YAGXxB,2BACXyB,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,MACTC,QAAS,SL+RLC,IACA,SAAUpH,EAAQD,EAASM,GAEhC,cM7TA,SAASR,EAAM0D,GA4Cf,QAAS8D,GAASlE,GACjB,SAAkB,KAARA,GAAeA,GAAOA,EAAImE,YAAcnE,EAAIoE,QAOvD,QAASvE,GAAQG,GAChB,MAAOqE,GAAgBA,EAAcrE,GAA8B,mBAAvBsE,EAAS/G,KAAKyC,GAM3D,QAASuE,GAASvE,GACjB,MAAOA,IAA8B,oBAAvBsE,EAAS/G,KAAKyC,GAQ7B,QAASwE,GAASC,EAAQC,GACzB,GAAIC,EACJF,GAASA,MACTC,EAAOA,KAEP,KAAKC,IAAOD,GACPA,EAAKE,eAAeD,IAEJ,MAAfF,EAAOE,KAAcF,EAAOE,GAAOD,EAAKC,GAG9C,OAAOF,GASR,QAASI,GAAI7E,EAAK8E,EAAUC,GAC3B,GAAkBC,GAAGC,EAAjBC,IAEJ,KAAKlF,EAAK,MAAOkF,EAGjB,IAAIC,GAAanF,EAAI6E,MAAQM,EAAW,MAAOnF,GAAI6E,IAAIC,EAAUC,EAGjE,KAAKC,EAAI,EAAGC,EAAIjF,EAAIhB,OAAQgG,EAAIC,EAAGD,IAClCE,EAAQF,GAAKF,EAASvH,KAAKwH,EAAS/E,EAAIgF,GAAIA,EAAGhF,EAEhD,OAAOkF,GAMR,QAASE,GAAeC,EAAKC,GAE5B,MADAD,GAAME,KAAKC,MAAMD,KAAKE,IAAIJ,IACnBK,MAAML,GAAMC,EAAOD,EAa3B,QAASM,GAAoBxF,GAC5B,GAAIqE,GAAWoB,EAAIC,SAASC,SAAS3F,MAMrC,OAHuB,kBAAXA,KAAwBA,EAASA,KAGxC+D,EAAU/D,IAAYA,EAAO4F,MAAM,OAItCC,IAAM7F,EACN8F,IAAM9F,EAAO+F,QAAQ,IAAK,IAAIA,QAAQ,KAAM,OAC5CC,KAAOhG,GAIIA,GAAWA,EAAO6F,KAAQ7F,EAAO6F,IAAID,MAAM,MAWjD5F,EARI+D,EAAUM,GAA0BoB,EAAIC,SAASC,SAAS3F,QACnE6F,IAAMxB,EACNyB,IAAMzB,EAAS0B,QAAQ,KAAM,OAC7BC,KAAO3B,GAH2BA,EAxIrC,GAAIoB,KAGJA,GAAIQ,QAAU,QAOdR,EAAIC,UACHC,UACCxD,OAAS,IACTnC,OAAS,OACTqC,QAAU,IACVD,SAAW,IACXP,UAAY,EACZqE,SAAW,GAEZC,QACCtE,UAAY,EACZqE,SAAW,EACX9D,SAAW,IACXC,QAAU,KAQZ,IAAI2C,GAAYjG,MAAMqH,UAAU1B,IAC/BR,EAAgBnF,MAAMW,QACtByE,EAAW7F,OAAO8H,UAAUjC,SAiIzBkC,EAAWZ,EAAIY,SAAWZ,EAAIa,MAAQ,SAAS9H,EAAO6D,GAEzD,GAAI3C,EAAQlB,GACX,MAAOkG,GAAIlG,EAAO,SAAS0G,GAC1B,MAAOmB,GAASnB,EAAK7C,IAQvB,IAHA7D,EAAQA,GAAS,EAGI,gBAAVA,GAAoB,MAAOA,EAGtC6D,GAAUA,GAAWoD,EAAIC,SAASS,OAAO9D,OAGzC,IAAIkE,GAAQ,GAAIC,QAAO,SAAWnE,EAAU,KAAM,MACjDoE,EAAcC,YACZ,GAAKlI,GACLuH,QAAQ,WAAY,OACpBA,QAAQQ,EAAO,IACfR,QAAQ1D,EAAS,KAIpB,OAAQkD,OAAMkB,GAA6B,EAAdA,GAU1BE,EAAUlB,EAAIkB,QAAU,SAASnI,EAAOqD,GAC3CA,EAAYoD,EAAepD,EAAW4D,EAAIC,SAASS,OAAOtE,UAC1D,IAAI+E,GAAQxB,KAAKyB,IAAI,GAAIhF,EAGzB,QAAQuD,KAAKC,MAAMI,EAAIY,SAAS7H,GAASoI,GAASA,GAAOD,QAAQ9E,IAW9DiF,EAAerB,EAAIqB,aAAerB,EAAIzF,OAAS,SAASmG,EAAQtE,EAAWO,EAAUC,GAExF,GAAI3C,EAAQyG,GACX,MAAOzB,GAAIyB,EAAQ,SAASjB,GAC3B,MAAO4B,GAAa5B,EAAKrD,EAAWO,EAAUC,IAKhD8D,GAASE,EAASF,EAGlB,IAAIY,GAAO1C,EACRD,EAASvC,GAAaA,GACtBA,UAAYA,EACZO,SAAWA,EACXC,QAAUA,GAEXoD,EAAIC,SAASS,QAIda,EAAe/B,EAAe8B,EAAKlF,WAGnCoF,EAAWd,EAAS,EAAI,IAAM,GAC9BhB,EAAO+B,SAASP,EAAQvB,KAAKE,IAAIa,GAAU,GAAIa,GAAe,IAAM,GACpEG,EAAMhC,EAAKtG,OAAS,EAAIsG,EAAKtG,OAAS,EAAI,CAG3C,OAAOoI,IAAYE,EAAMhC,EAAKlB,OAAO,EAAGkD,GAAOJ,EAAK3E,SAAW,IAAM+C,EAAKlB,OAAOkD,GAAKpB,QAAQ,iBAAkB,KAAOgB,EAAK3E,WAAa4E,EAAeD,EAAK1E,QAAUsE,EAAQvB,KAAKE,IAAIa,GAASa,GAAczG,MAAM,KAAK,GAAK,KAe5N2B,EAAcuD,EAAIvD,YAAc,SAASiE,EAAQhE,EAAQN,EAAWO,EAAUC,EAASrC,GAE1F,GAAIN,EAAQyG,GACX,MAAOzB,GAAIyB,EAAQ,SAASjB,GAC3B,MAAOhD,GAAYgD,EAAK/C,EAAQN,EAAWO,EAAUC,EAASrC,IAKhEmG,GAASE,EAASF,EAGlB,IAAIY,GAAO1C,EACRD,EAASjC,GAAUA,GACnBA,OAASA,EACTN,UAAYA,EACZO,SAAWA,EACXC,QAAUA,EACVrC,OAASA,GAEVyF,EAAIC,SAASC,UAIdnF,EAAUgF,EAAoBuB,EAAK/G,QAGnCoH,EAAYjB,EAAS,EAAI3F,EAAQqF,IAAMM,EAAS,EAAI3F,EAAQsF,IAAMtF,EAAQwF,IAG3E,OAAOoB,GAAUrB,QAAQ,KAAMgB,EAAK5E,QAAQ4D,QAAQ,KAAMe,EAAa1B,KAAKE,IAAIa,GAASlB,EAAe8B,EAAKlF,WAAYkF,EAAK3E,SAAU2E,EAAK1E,UAgB9IoD,GAAI4B,aAAe,SAASC,EAAMnF,EAAQN,EAAWO,EAAUC,EAASrC,GACvE,IAAKsH,EAAM,QAGX,IAAIP,GAAO1C,EACRD,EAASjC,GAAUA,GACnBA,OAASA,EACTN,UAAYA,EACZO,SAAWA,EACXC,QAAUA,EACVrC,OAASA,GAEVyF,EAAIC,SAASC,UAIdnF,EAAUgF,EAAoBuB,EAAK/G,QAGnCuH,EAAiB/G,EAAQqF,IAAI2B,QAAQ,MAAQhH,EAAQqF,IAAI2B,QAAQ,MAGjEC,EAAY,EAGZC,EAAYhD,EAAI4C,EAAM,SAASpC,EAAKL,GACnC,GAAInF,EAAQwF,GAEX,MAAOO,GAAI4B,aAAanC,EAAK6B,EAG7B7B,GAAMmB,EAASnB,EAGf,IAAIkC,GAAYlC,EAAM,EAAI1E,EAAQqF,IAAMX,EAAM,EAAI1E,EAAQsF,IAAMtF,EAAQwF,KAGvE2B,EAAOP,EAAUrB,QAAQ,KAAMgB,EAAK5E,QAAQ4D,QAAQ,KAAMe,EAAa1B,KAAKE,IAAIJ,GAAMD,EAAe8B,EAAKlF,WAAYkF,EAAK3E,SAAU2E,EAAK1E,SAG3I,OADIsF,GAAK9I,OAAS4I,IAAWA,EAAYE,EAAK9I,QACvC8I,GAKV,OAAOjD,GAAIgD,EAAW,SAASxC,EAAKL,GAEnC,MAAId,GAASmB,IAAQA,EAAIrG,OAAS4I,EAE1BF,EAAiBrC,EAAIa,QAAQgB,EAAK5E,OAAQ4E,EAAK5E,OAAQ,GAAIpD,OAAM0I,EAAYvC,EAAIrG,OAAS,GAAG8B,KAAK,MAAU,GAAI5B,OAAM0I,EAAYvC,EAAIrG,OAAS,GAAG8B,KAAK,KAAQuE,EAEhKA,KAUc,mBAAXxI,IAA0BA,EAAOD,UAC3CA,EAAUC,EAAOD,QAAUgJ,GAE5BhJ,EAAQwF,WAAawD,GAvXtBxF,SNqtBK2H,IACA,SAAUlL,EAAQD,GOjuBxBC,EAAAD,SAAkBofile":"global/helpers/currency.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microapp-frontend-base\"] = factory();\n\telse\n\t\troot[\"microapp-frontend-base\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microapp-frontend-base\"] = factory();\n\telse\n\t\troot[\"microapp-frontend-base\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(174);\n\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\tvar minDoc = __webpack_require__(13);\n\t\n\tvar doccy;\n\t\n\tif (typeof document !== 'undefined') {\n\t    doccy = document;\n\t} else {\n\t    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\t\n\t    if (!doccy) {\n\t        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n\t    }\n\t}\n\t\n\tmodule.exports = doccy;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 13:\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n\n/***/ 42:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Builds an Enum from a list of strings.\n\t * Properties are not editable.\n\t *\n\t * Usage: new Enum('ONE', 'TWO', 'THREE')\n\t */\n\tvar Enum = function Enum() {\n\t  var _this = this;\n\t\n\t  _classCallCheck(this, Enum);\n\t\n\t  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n\t    values[_key] = arguments[_key];\n\t  }\n\t\n\t  values.forEach(function (value) {\n\t    if (typeof value !== 'string') {\n\t      throw new Error('Enum helper: ' + value + ' is not a string');\n\t    }\n\t\n\t    Object.defineProperty(_this, value, {\n\t      value: value,\n\t      writable: false,\n\t      enumerable: true,\n\t      configurable: false\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Builds an Enum from a list of strings.\n\t * Properties are not editable.\n\t *\n\t * Usage: new NamespacedEnum(\n\t *  'USER_INFO',\n\t *  ['ONE', 'TWO', 'THREE']\n\t * )\n\t */\n\t\n\t\n\texports.default = Enum;\n\t\n\tvar NamespacedEnum = exports.NamespacedEnum = function NamespacedEnum(namespace, values) {\n\t  var _this2 = this;\n\t\n\t  _classCallCheck(this, NamespacedEnum);\n\t\n\t  if (typeof namespace !== 'string') {\n\t    throw new Error('NamespacedEnum helper: namespace is not a string');\n\t  }\n\t\n\t  if (!Array.isArray(values)) {\n\t    throw new Error('NamespacedEnum helper: \"values\" must be an array');\n\t  }\n\t\n\t  values.forEach(function (value) {\n\t    if (typeof value !== 'string') {\n\t      throw new Error('NamespacedEnum helper: ' + value + ' is not a string');\n\t    }\n\t\n\t    Object.defineProperty(_this2, value, {\n\t      value: namespace + ':' + value,\n\t      writable: false,\n\t      enumerable: true,\n\t      configurable: false\n\t    });\n\t  });\n\t};\n\n/***/ }),\n\n/***/ 43:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.formats = exports.defaultLocale = undefined;\n\texports.getLocale = getLocale;\n\texports.clearCache = clearCache;\n\t\n\tvar _document = __webpack_require__(12);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _enum = __webpack_require__(42);\n\t\n\tvar _enum2 = _interopRequireDefault(_enum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar domLocale = void 0;\n\t\n\tvar defaultLocale = exports.defaultLocale = 'en-us';\n\t\n\tvar formats = exports.formats = new _enum2.default('lower-lower', 'lower_UPPER');\n\t\n\tfunction getLocale() {\n\t  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'lower-lower';\n\t\n\t  if (!domLocale) {\n\t    domLocale = _document2.default.documentElement && _document2.default.documentElement.lang ? _document2.default.documentElement.lang : defaultLocale;\n\t  }\n\t\n\t  var parts = domLocale.split('-');\n\t\n\t  switch (format) {\n\t    case formats.lower_UPPER:\n\t      parts[1] = parts[1].toUpperCase();\n\t      return parts.join('_');\n\t    default:\n\t      return domLocale;\n\t  }\n\t}\n\t\n\tfunction clearCache() {\n\t  domLocale = null;\n\t}\n\n/***/ }),\n\n/***/ 174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.localeToCurrencyMapping = exports.currencies = exports.defaultCurrencyCode = undefined;\n\texports.getSymbolFromCurrency = getSymbolFromCurrency;\n\texports.getDefaultCurrencyCode = getDefaultCurrencyCode;\n\texports.getDefaultPaymentFrequency = getDefaultPaymentFrequency;\n\texports.formatCurrency = formatCurrency;\n\t\n\tvar _accounting = __webpack_require__(175);\n\t\n\tvar _accounting2 = _interopRequireDefault(_accounting);\n\t\n\tvar _locale = __webpack_require__(43);\n\t\n\tvar _currency = __webpack_require__(176);\n\t\n\tvar _currency2 = _interopRequireDefault(_currency);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar defaultCurrencyCode = exports.defaultCurrencyCode = 'USD';\n\t\n\tvar currencies = exports.currencies = [{ code: 'AED', label: 'AED (د.إ)' }, { code: 'AFN', label: 'AFN (؋)' }, { code: 'AUD', label: 'AUD ($)' }, { code: 'CAD', label: 'CAD ($)' }, { code: 'CNY', label: 'CNY (¥)' }, { code: 'EUR', label: 'EUR (€)' }, { code: 'GBP', label: 'GBP (£)' }, { code: 'HKD', label: 'HKD ($)' }, { code: 'JPY', label: 'JPY (¥)' }, { code: 'KRW', label: 'KRW (₩)' }, { code: 'MXN', label: 'MXN ($)' }, { code: 'NZD', label: 'NZD ($)' }, { code: 'PLN', label: 'PLN (zł)' }, { code: 'USD', label: 'USD ($)' }, { code: 'ZAR', label: 'ZAR (R)' }];\n\t\n\tvar localeToCurrencyMapping = exports.localeToCurrencyMapping = {\n\t  'en-gb': 'GBP',\n\t  'en-us': 'USD',\n\t  'zh-cn': 'CNY',\n\t  'zh-tw': 'USD',\n\t  'zh-hk': 'HKD',\n\t  'ko-kr': 'KRW',\n\t  'ja-jp': 'JPY',\n\t  'de-de': 'EUR',\n\t  'el-gr': 'EUR',\n\t  'el-cy': 'EUR',\n\t  'es-es': 'EUR',\n\t  'es-la': 'MXN',\n\t  'fr-fr': 'EUR',\n\t  'it-it': 'EUR'\n\t};\n\t\n\tfunction getSymbolFromCurrency(currencyCode) {\n\t  if (typeof currencyCode !== 'string') {\n\t    return null;\n\t  }\n\t\n\t  return _currency2.default[currencyCode.toUpperCase()] || null;\n\t}\n\t\n\tfunction getDefaultCurrencyCode(locale) {\n\t  if (localeToCurrencyMapping[locale]) {\n\t    return localeToCurrencyMapping[locale];\n\t  }\n\t\n\t  return defaultCurrencyCode;\n\t}\n\t\n\tfunction getDefaultPaymentFrequency() {\n\t  return 'month'; // TODO should this come from platform as needs to be same format they use\n\t}\n\t\n\tfunction formatCurrency(i18n, amount, currencyCode) {\n\t  var precision = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\t\n\t  if (!amount) {\n\t    return null;\n\t  }\n\t\n\t  var locale = (0, _locale.getLocale)();\n\t  var thousandSymbol = i18n.t('thousand_separator.currency.thousand_symbol');\n\t\n\t  if ((locale === 'es-es' || locale === 'es-la') && amount < 10000) {\n\t    thousandSymbol = '';\n\t  }\n\t\n\t  return _accounting2.default.formatMoney(amount, {\n\t    symbol: getSymbolFromCurrency(currencyCode),\n\t    precision: precision,\n\t    thousand: thousandSymbol,\n\t    decimal: i18n.t('decimal_separator.currency.decimal_symbol'),\n\t    format: i18n.t('global.currency.symbol_value_order', {\n\t      interpolation: {\n\t        prefix: '{{',\n\t        suffix: '}}'\n\t      }\n\t    })\n\t  });\n\t}\n\n/***/ }),\n\n/***/ 175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t/*!\n\t * accounting.js v0.4.1\n\t * Copyright 2014 Open Exchange Rates\n\t *\n\t * Freely distributable under the MIT license.\n\t * Portions of accounting.js are inspired or borrowed from underscore.js\n\t *\n\t * Full details and documentation:\n\t * http://openexchangerates.github.io/accounting.js/\n\t */\n\t\n\t(function (root, undefined) {\n\t\n\t\t/* --- Setup --- */\n\t\n\t\t// Create the local library object, to be exported or referenced globally later\n\t\tvar lib = {};\n\t\n\t\t// Current version\n\t\tlib.version = '0.4.1';\n\t\n\t\t/* --- Exposed settings --- */\n\t\n\t\t// The library's settings configuration object. Contains default parameters for\n\t\t// currency and number formatting\n\t\tlib.settings = {\n\t\t\tcurrency: {\n\t\t\t\tsymbol: \"$\", // default currency symbol is '$'\n\t\t\t\tformat: \"%s%v\", // controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\t\tdecimal: \".\", // decimal point separator\n\t\t\t\tthousand: \",\", // thousands separator\n\t\t\t\tprecision: 2, // decimal places\n\t\t\t\tgrouping: 3 // digit grouping (not implemented yet)\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tprecision: 0, // default precision on numbers is 0\n\t\t\t\tgrouping: 3, // digit grouping (not implemented yet)\n\t\t\t\tthousand: \",\",\n\t\t\t\tdecimal: \".\"\n\t\t\t}\n\t\t};\n\t\n\t\t/* --- Internal Helper Methods --- */\n\t\n\t\t// Store reference to possibly-available ECMAScript 5 methods for later\n\t\tvar nativeMap = Array.prototype.map,\n\t\t    nativeIsArray = Array.isArray,\n\t\t    toString = Object.prototype.toString;\n\t\n\t\t/**\n\t  * Tests whether supplied parameter is a string\n\t  * from underscore.js\n\t  */\n\t\tfunction isString(obj) {\n\t\t\treturn !!(obj === '' || obj && obj.charCodeAt && obj.substr);\n\t\t}\n\t\n\t\t/**\n\t  * Tests whether supplied parameter is a string\n\t  * from underscore.js, delegates to ECMA5's native Array.isArray\n\t  */\n\t\tfunction isArray(obj) {\n\t\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t\t}\n\t\n\t\t/**\n\t  * Tests whether supplied parameter is a true object\n\t  */\n\t\tfunction isObject(obj) {\n\t\t\treturn obj && toString.call(obj) === '[object Object]';\n\t\t}\n\t\n\t\t/**\n\t  * Extends an object with a defaults object, similar to underscore's _.defaults\n\t  *\n\t  * Used for abstracting parameter handling from API methods\n\t  */\n\t\tfunction defaults(object, defs) {\n\t\t\tvar key;\n\t\t\tobject = object || {};\n\t\t\tdefs = defs || {};\n\t\t\t// Iterate over object non-prototype properties:\n\t\t\tfor (key in defs) {\n\t\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\t\n\t\t/**\n\t  * Implementation of `Array.map()` for iteration loops\n\t  *\n\t  * Returns a new Array as a result of calling `iterator` on each array value.\n\t  * Defers to native Array.map if available\n\t  */\n\t\tfunction map(obj, iterator, context) {\n\t\t\tvar results = [],\n\t\t\t    i,\n\t\t\t    j;\n\t\n\t\t\tif (!obj) return results;\n\t\n\t\t\t// Use native .map method if it exists:\n\t\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\t\n\t\t\t// Fallback for native .map:\n\t\t\tfor (i = 0, j = obj.length; i < j; i++) {\n\t\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\t\n\t\t/**\n\t  * Check and normalise the value of precision (must be positive integer)\n\t  */\n\t\tfunction checkPrecision(val, base) {\n\t\t\tval = Math.round(Math.abs(val));\n\t\t\treturn isNaN(val) ? base : val;\n\t\t}\n\t\n\t\t/**\n\t  * Parses a format string or object and returns format obj for use in rendering\n\t  *\n\t  * `format` is either a string with the default (positive) format, or object\n\t  * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t  * either a string or object)\n\t  *\n\t  * Either string or format.pos must contain \"%v\" (value) to be valid\n\t  */\n\t\tfunction checkCurrencyFormat(format) {\n\t\t\tvar defaults = lib.settings.currency.format;\n\t\n\t\t\t// Allow function as format parameter (should return string or object):\n\t\t\tif (typeof format === \"function\") format = format();\n\t\n\t\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\t\tif (isString(format) && format.match(\"%v\")) {\n\t\n\t\t\t\t// Create and return positive, negative and zero formats:\n\t\t\t\treturn {\n\t\t\t\t\tpos: format,\n\t\t\t\t\tneg: format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero: format\n\t\t\t\t};\n\t\n\t\t\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t\t} else if (!format || !format.pos || !format.pos.match(\"%v\")) {\n\t\n\t\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\t\treturn !isString(defaults) ? defaults : lib.settings.currency.format = {\n\t\t\t\t\tpos: defaults,\n\t\t\t\t\tneg: defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero: defaults\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Otherwise, assume format was fine:\n\t\t\treturn format;\n\t\t}\n\t\n\t\t/* --- API Methods --- */\n\t\n\t\t/**\n\t  * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t  * Alias: `accounting.parse(string)`\n\t  *\n\t  * Decimal must be included in the regular expression to match floats (defaults to\n\t  * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t  * separator, provide it as the second argument.\n\t  *\n\t  * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t  *\n\t  * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t  */\n\t\tvar unformat = lib.unformat = lib.parse = function (value, decimal) {\n\t\t\t// Recursively unformat arrays:\n\t\t\tif (isArray(value)) {\n\t\t\t\treturn map(value, function (val) {\n\t\t\t\t\treturn unformat(val, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Fails silently (need decent errors):\n\t\t\tvalue = value || 0;\n\t\n\t\t\t// Return the value as-is if it's already a number:\n\t\t\tif (typeof value === \"number\") return value;\n\t\n\t\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\t\tdecimal = decimal || lib.settings.number.decimal;\n\t\n\t\t\t// Build regex to strip out everything except digits, decimal point and minus sign:\n\t\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\t    unformatted = parseFloat((\"\" + value).replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t.replace(regex, '') // strip out any cruft\n\t\t\t.replace(decimal, '.') // make sure decimal point is standard\n\t\t\t);\n\t\n\t\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t\t};\n\t\n\t\t/**\n\t  * Implementation of toFixed() that treats floats more like decimals\n\t  *\n\t  * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t  * problems for accounting- and finance-related software.\n\t  */\n\t\tvar toFixed = lib.toFixed = function (value, precision) {\n\t\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\t\tvar power = Math.pow(10, precision);\n\t\n\t\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t\t};\n\t\n\t\t/**\n\t  * Format a number, with comma-separated thousands and custom precision/decimal places\n\t  * Alias: `accounting.format()`\n\t  *\n\t  * Localise by overriding the precision and thousand / decimal separators\n\t  * 2nd parameter `precision` can be an object matching `settings.number`\n\t  */\n\t\tvar formatNumber = lib.formatNumber = lib.format = function (number, precision, thousand, decimal) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function (val) {\n\t\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(isObject(precision) ? precision : {\n\t\t\t\tprecision: precision,\n\t\t\t\tthousand: thousand,\n\t\t\t\tdecimal: decimal\n\t\t\t}, lib.settings.number),\n\t\n\t\n\t\t\t// Clean up precision\n\t\t\tusePrecision = checkPrecision(opts.precision),\n\t\n\t\n\t\t\t// Do some calc:\n\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\t    base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\t    mod = base.length > 3 ? base.length % 3 : 0;\n\t\n\t\t\t// Format the number:\n\t\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t\t};\n\t\n\t\t/**\n\t  * Format a number into currency\n\t  *\n\t  * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t  * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t  *\n\t  * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t  * Second param can be an object matching `settings.currency` which is the easiest way.\n\t  *\n\t  * To do: tidy up the parameters\n\t  */\n\t\tvar formatMoney = lib.formatMoney = function (number, symbol, precision, thousand, decimal, format) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function (val) {\n\t\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(isObject(symbol) ? symbol : {\n\t\t\t\tsymbol: symbol,\n\t\t\t\tprecision: precision,\n\t\t\t\tthousand: thousand,\n\t\t\t\tdecimal: decimal,\n\t\t\t\tformat: format\n\t\t\t}, lib.settings.currency),\n\t\n\t\n\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\n\t\t\t// Choose which format to use for this value:\n\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\t\n\t\t\t// Return with currency symbol added:\n\t\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\t};\n\t\n\t\t/**\n\t  * Format a list of numbers into an accounting column, padding with whitespace\n\t  * to line up currency symbols, thousand separators and decimals places\n\t  *\n\t  * List should be an array of numbers\n\t  * Second parameter can be an object containing keys that match the params\n\t  *\n\t  * Returns array of accouting-formatted number strings of same length\n\t  *\n\t  * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t  * browsers from collapsing the whitespace in the output strings.\n\t  */\n\t\tlib.formatColumn = function (list, symbol, precision, thousand, decimal, format) {\n\t\t\tif (!list) return [];\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(isObject(symbol) ? symbol : {\n\t\t\t\tsymbol: symbol,\n\t\t\t\tprecision: precision,\n\t\t\t\tthousand: thousand,\n\t\t\t\tdecimal: decimal,\n\t\t\t\tformat: format\n\t\t\t}, lib.settings.currency),\n\t\n\t\n\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\n\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\t\n\t\n\t\t\t// Store value for the length of the longest string in the column:\n\t\t\tmaxLength = 0,\n\t\n\t\n\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\tformatted = map(list, function (val, i) {\n\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// Clean up the value\n\t\t\t\t\tval = unformat(val);\n\t\n\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\t\n\t\n\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\n\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\treturn fVal;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t// Pad each number in the list and send back the column of numbers:\n\t\t\treturn map(formatted, function (val, i) {\n\t\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol + new Array(maxLength - val.length + 1).join(\" \")) : new Array(maxLength - val.length + 1).join(\" \") + val;\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t});\n\t\t};\n\t\n\t\t/* --- Module Definition --- */\n\t\n\t\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t\t// Otherwise, just add `accounting` to the global object\n\t\tif (true) {\n\t\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\t\texports = module.exports = lib;\n\t\t\t}\n\t\t\texports.accounting = lib;\n\t\t} else if (typeof define === 'function' && define.amd) {\n\t\t\t// Return the library as an AMD module:\n\t\t\tdefine([], function () {\n\t\t\t\treturn lib;\n\t\t\t});\n\t\t} else {\n\t\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t\t// Returns a reference to the library's `accounting` object;\n\t\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\t\tlib.noConflict = function (oldAccounting) {\n\t\t\t\treturn function () {\n\t\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t\t// Delete the noConflict method:\n\t\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\t\treturn lib;\n\t\t\t\t};\n\t\t\t}(root.accounting);\n\t\n\t\t\t// Declare `fx` on the root (global/window) object:\n\t\t\troot['accounting'] = lib;\n\t\t}\n\t\n\t\t// Root will be `window` in browser or `global` on the server:\n\t})(undefined);\n\n/***/ }),\n\n/***/ 176:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"ALL\":\"ALL\",\"AFN\":\"AFN\",\"ARS\":\"ARS\",\"AWG\":\"AWG\",\"AUD\":\"A$\",\"AZN\":\"AZN\",\"BSD\":\"BSD\",\"BBD\":\"BBD\",\"BYR\":\"BYR\",\"BZD\":\"BZD\",\"BMD\":\"BMD\",\"BOB\":\"BOB\",\"BAM\":\"BAM\",\"BWP\":\"BWP\",\"BGN\":\"BGN\",\"BRL\":\"R$\",\"BND\":\"BND\",\"KHR\":\"KHR\",\"CAD\":\"CA$\",\"KYD\":\"KYD\",\"CLP\":\"CLP\",\"CNY\":\"CN¥\",\"COP\":\"COP\",\"CRC\":\"CRC\",\"HRK\":\"HRK\",\"CUP\":\"CUP\",\"CZK\":\"CZK\",\"DKK\":\"DKK\",\"DOP\":\"DOP\",\"XCD\":\"EC$\",\"EGP\":\"EGP\",\"SVC\":\"SVC\",\"EEK\":\"EEK\",\"EUR\":\"€\",\"FKP\":\"FKP\",\"FJD\":\"FJD\",\"GHC\":\"GHC\",\"GIP\":\"GIP\",\"GTQ\":\"GTQ\",\"GGP\":\"GGP\",\"GYD\":\"GYD\",\"HNL\":\"HNL\",\"HKD\":\"HK$\",\"HUF\":\"HUF\",\"ISK\":\"ISK\",\"INR\":\"₹\",\"IDR\":\"IDR\",\"IRR\":\"IRR\",\"IMP\":\"IMP\",\"ILS\":\"₪\",\"JMD\":\"JMD\",\"JPY\":\"JP¥\",\"JEP\":\"JEP\",\"KES\":\"KES\",\"KZT\":\"KZT\",\"KPW\":\"KPW\",\"KRW\":\"₩\",\"KGS\":\"KGS\",\"LAK\":\"LAK\",\"LVL\":\"LVL\",\"LBP\":\"LBP\",\"LRD\":\"LRD\",\"LTL\":\"LTL\",\"MKD\":\"MKD\",\"MYR\":\"MYR\",\"MUR\":\"MUR\",\"MXN\":\"MX$\",\"MNT\":\"MNT\",\"MZN\":\"MZN\",\"NAD\":\"NAD\",\"NPR\":\"NPR\",\"ANG\":\"ANG\",\"NZD\":\"NZ$\",\"NIO\":\"NIO\",\"NGN\":\"NGN\",\"NOK\":\"NOK\",\"OMR\":\"OMR\",\"PKR\":\"PKR\",\"PAB\":\"PAB\",\"PYG\":\"PYG\",\"PEN\":\"PEN\",\"PHP\":\"PHP\",\"PLN\":\"PLN\",\"QAR\":\"QAR\",\"RON\":\"RON\",\"RUB\":\"RUB\",\"RMB\":\"RMB\",\"SHP\":\"SHP\",\"SAR\":\"SAR\",\"RSD\":\"RSD\",\"SCR\":\"SCR\",\"SGD\":\"SGD\",\"SBD\":\"SBD\",\"SOS\":\"SOS\",\"ZAR\":\"ZAR\",\"LKR\":\"LKR\",\"SEK\":\"SEK\",\"CHF\":\"CHF\",\"SRD\":\"SRD\",\"SYP\":\"SYP\",\"TZS\":\"TZS\",\"TWD\":\"NT$\",\"THB\":\"฿\",\"TTD\":\"TTD\",\"TRY\":\"TRY\",\"TRL\":\"TRL\",\"TVD\":\"TVD\",\"UGX\":\"UGX\",\"UAH\":\"UAH\",\"GBP\":\"£\",\"USD\":\"$\",\"UYU\":\"UYU\",\"UZS\":\"UZS\",\"VEF\":\"VEF\",\"VND\":\"₫\",\"YER\":\"YER\",\"ZWD\":\"ZWD\",\"GEL\":\"GEL\"}\n\n/***/ })\n\n/******/ })\n});\n;\n\n\n// WEBPACK FOOTER //\n// global/helpers/currency.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7475bff11b25f6b898b5","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n// WEBPACK FOOTER //\n// ./~/global/document.js","/**\n * Builds an Enum from a list of strings.\n * Properties are not editable.\n *\n * Usage: new Enum('ONE', 'TWO', 'THREE')\n */\nexport default class Enum {\n  constructor(...values) {\n    values.forEach((value) => {\n      if (typeof value !== 'string') {\n        throw new Error(`Enum helper: ${value} is not a string`);\n      }\n\n      Object.defineProperty(this, value, {\n        value,\n        writable: false,\n        enumerable: true,\n        configurable: false,\n      });\n    });\n  }\n}\n\n/**\n * Builds an Enum from a list of strings.\n * Properties are not editable.\n *\n * Usage: new NamespacedEnum(\n *  'USER_INFO',\n *  ['ONE', 'TWO', 'THREE']\n * )\n */\nexport class NamespacedEnum {\n  constructor(namespace, values) {\n    if (typeof namespace !== 'string') {\n      throw new Error('NamespacedEnum helper: namespace is not a string');\n    }\n\n    if (!Array.isArray(values)) {\n      throw new Error('NamespacedEnum helper: \"values\" must be an array');\n    }\n\n    values.forEach((value) => {\n      if (typeof value !== 'string') {\n        throw new Error(`NamespacedEnum helper: ${value} is not a string`);\n      }\n\n      Object.defineProperty(this, value, {\n        value: `${namespace}:${value}`,\n        writable: false,\n        enumerable: true,\n        configurable: false,\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/global/js/helpers/enum.js","import document from 'global/document';\nimport Enum from '~global-js/helpers/enum';\n\nlet domLocale;\n\nexport const defaultLocale = 'en-us';\n\nexport const formats = new Enum('lower-lower', 'lower_UPPER');\n\nexport function getLocale(format = 'lower-lower') {\n  if (!domLocale) {\n    domLocale = document.documentElement && document.documentElement.lang\n      ? document.documentElement.lang : defaultLocale;\n  }\n\n  const parts = domLocale.split('-');\n\n  switch (format) {\n    case formats.lower_UPPER:\n      parts[1] = parts[1].toUpperCase();\n      return parts.join('_');\n    default:\n      return domLocale;\n  }\n}\n\nexport function clearCache() {\n  domLocale = null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/global/js/helpers/locale.js","import accounting from 'accounting';\nimport { getLocale } from '~global-js/helpers/locale';\nimport currencySymbolMap from '~global/variables/currency.json';\n\nexport const defaultCurrencyCode = 'USD';\n\nexport const currencies = [\n  { code: 'AED', label: 'AED (د.إ)' },\n  { code: 'AFN', label: 'AFN (؋)' },\n  { code: 'AUD', label: 'AUD ($)' },\n  { code: 'CAD', label: 'CAD ($)' },\n  { code: 'CNY', label: 'CNY (¥)' },\n  { code: 'EUR', label: 'EUR (€)' },\n  { code: 'GBP', label: 'GBP (£)' },\n  { code: 'HKD', label: 'HKD ($)' },\n  { code: 'JPY', label: 'JPY (¥)' },\n  { code: 'KRW', label: 'KRW (₩)' },\n  { code: 'MXN', label: 'MXN ($)' },\n  { code: 'NZD', label: 'NZD ($)' },\n  { code: 'PLN', label: 'PLN (zł)' },\n  { code: 'USD', label: 'USD ($)' },\n  { code: 'ZAR', label: 'ZAR (R)' },\n];\n\nexport const localeToCurrencyMapping = {\n  'en-gb': 'GBP',\n  'en-us': 'USD',\n  'zh-cn': 'CNY',\n  'zh-tw': 'USD',\n  'zh-hk': 'HKD',\n  'ko-kr': 'KRW',\n  'ja-jp': 'JPY',\n  'de-de': 'EUR',\n  'el-gr': 'EUR',\n  'el-cy': 'EUR',\n  'es-es': 'EUR',\n  'es-la': 'MXN',\n  'fr-fr': 'EUR',\n  'it-it': 'EUR',\n};\n\nexport function getSymbolFromCurrency(currencyCode) {\n  if (typeof currencyCode !== 'string') {\n    return null;\n  }\n\n  return currencySymbolMap[currencyCode.toUpperCase()] || null;\n}\n\nexport function getDefaultCurrencyCode(locale) {\n  if (localeToCurrencyMapping[locale]) {\n    return localeToCurrencyMapping[locale];\n  }\n\n  return defaultCurrencyCode;\n}\n\nexport function getDefaultPaymentFrequency() {\n  return 'month'; // TODO should this come from platform as needs to be same format they use\n}\n\nexport function formatCurrency(i18n, amount, currencyCode, precision = 0) {\n  if (!amount) {\n    return null;\n  }\n\n  const locale = getLocale();\n  let thousandSymbol = i18n.t('thousand_separator.currency.thousand_symbol');\n\n  if ((locale === 'es-es' || locale === 'es-la') && amount < 10000) {\n    thousandSymbol = '';\n  }\n\n  return accounting.formatMoney(\n    amount,\n    {\n      symbol: getSymbolFromCurrency(currencyCode),\n      precision,\n      thousand: thousandSymbol,\n      decimal: i18n.t('decimal_separator.currency.decimal_symbol'),\n      format: i18n.t('global.currency.symbol_value_order', {\n        interpolation: {\n          prefix: '{{',\n          suffix: '}}',\n        },\n      }),\n    }\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/global/js/helpers/currency.js","/*!\n * accounting.js v0.4.1\n * Copyright 2014 Open Exchange Rates\n *\n * Freely distributable under the MIT license.\n * Portions of accounting.js are inspired or borrowed from underscore.js\n *\n * Full details and documentation:\n * http://openexchangerates.github.io/accounting.js/\n */\n\n(function(root, undefined) {\n\n\t/* --- Setup --- */\n\n\t// Create the local library object, to be exported or referenced globally later\n\tvar lib = {};\n\n\t// Current version\n\tlib.version = '0.4.1';\n\n\n\t/* --- Exposed settings --- */\n\n\t// The library's settings configuration object. Contains default parameters for\n\t// currency and number formatting\n\tlib.settings = {\n\t\tcurrency: {\n\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\tprecision : 2,\t\t// decimal places\n\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t},\n\t\tnumber: {\n\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\tthousand : \",\",\n\t\t\tdecimal : \".\"\n\t\t}\n\t};\n\n\n\t/* --- Internal Helper Methods --- */\n\n\t// Store reference to possibly-available ECMAScript 5 methods for later\n\tvar nativeMap = Array.prototype.map,\n\t\tnativeIsArray = Array.isArray,\n\t\ttoString = Object.prototype.toString;\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js\n\t */\n\tfunction isString(obj) {\n\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t */\n\tfunction isArray(obj) {\n\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a true object\n\t */\n\tfunction isObject(obj) {\n\t\treturn obj && toString.call(obj) === '[object Object]';\n\t}\n\n\t/**\n\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t *\n\t * Used for abstracting parameter handling from API methods\n\t */\n\tfunction defaults(object, defs) {\n\t\tvar key;\n\t\tobject = object || {};\n\t\tdefs = defs || {};\n\t\t// Iterate over object non-prototype properties:\n\t\tfor (key in defs) {\n\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\t/**\n\t * Implementation of `Array.map()` for iteration loops\n\t *\n\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t * Defers to native Array.map if available\n\t */\n\tfunction map(obj, iterator, context) {\n\t\tvar results = [], i, j;\n\n\t\tif (!obj) return results;\n\n\t\t// Use native .map method if it exists:\n\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\n\t\t// Fallback for native .map:\n\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Check and normalise the value of precision (must be positive integer)\n\t */\n\tfunction checkPrecision(val, base) {\n\t\tval = Math.round(Math.abs(val));\n\t\treturn isNaN(val)? base : val;\n\t}\n\n\n\t/**\n\t * Parses a format string or object and returns format obj for use in rendering\n\t *\n\t * `format` is either a string with the default (positive) format, or object\n\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t * either a string or object)\n\t *\n\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t */\n\tfunction checkCurrencyFormat(format) {\n\t\tvar defaults = lib.settings.currency.format;\n\n\t\t// Allow function as format parameter (should return string or object):\n\t\tif ( typeof format === \"function\" ) format = format();\n\n\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\n\t\t\t// Create and return positive, negative and zero formats:\n\t\t\treturn {\n\t\t\t\tpos : format,\n\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : format\n\t\t\t};\n\n\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\n\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\tpos : defaults,\n\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : defaults\n\t\t\t};\n\n\t\t}\n\t\t// Otherwise, assume format was fine:\n\t\treturn format;\n\t}\n\n\n\t/* --- API Methods --- */\n\n\t/**\n\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t * Alias: `accounting.parse(string)`\n\t *\n\t * Decimal must be included in the regular expression to match floats (defaults to\n\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t * separator, provide it as the second argument.\n\t *\n\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t *\n\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t */\n\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t// Recursively unformat arrays:\n\t\tif (isArray(value)) {\n\t\t\treturn map(value, function(val) {\n\t\t\t\treturn unformat(val, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Fails silently (need decent errors):\n\t\tvalue = value || 0;\n\n\t\t// Return the value as-is if it's already a number:\n\t\tif (typeof value === \"number\") return value;\n\n\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\tdecimal = decimal || lib.settings.number.decimal;\n\n\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\tunformatted = parseFloat(\n\t\t\t\t(\"\" + value)\n\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t);\n\n\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t};\n\n\n\t/**\n\t * Implementation of toFixed() that treats floats more like decimals\n\t *\n\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t * problems for accounting- and finance-related software.\n\t */\n\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\tvar power = Math.pow(10, precision);\n\n\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t};\n\n\n\t/**\n\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t * Alias: `accounting.format()`\n\t *\n\t * Localise by overriding the precision and thousand / decimal separators\n\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t */\n\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val) {\n\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal\n\t\t\t\t}),\n\t\t\t\tlib.settings.number\n\t\t\t),\n\n\t\t\t// Clean up precision\n\t\t\tusePrecision = checkPrecision(opts.precision),\n\n\t\t\t// Do some calc:\n\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\n\t\t// Format the number:\n\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t};\n\n\n\t/**\n\t * Format a number into currency\n\t *\n\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t *\n\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t *\n\t * To do: tidy up the parameters\n\t */\n\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val){\n\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Choose which format to use for this value:\n\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\n\t\t// Return with currency symbol added:\n\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t};\n\n\n\t/**\n\t * Format a list of numbers into an accounting column, padding with whitespace\n\t * to line up currency symbols, thousand separators and decimals places\n\t *\n\t * List should be an array of numbers\n\t * Second parameter can be an object containing keys that match the params\n\t *\n\t * Returns array of accouting-formatted number strings of same length\n\t *\n\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t * browsers from collapsing the whitespace in the output strings.\n\t */\n\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\tif (!list) return [];\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\n\t\t\t// Store value for the length of the longest string in the column:\n\t\t\tmaxLength = 0,\n\n\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// Clean up the value\n\t\t\t\t\tval = unformat(val);\n\n\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\n\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\n\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\treturn fVal;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Pad each number in the list and send back the column of numbers:\n\t\treturn map(formatted, function(val, i) {\n\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t};\n\n\n\t/* --- Module Definition --- */\n\n\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `accounting` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = lib;\n\t\t}\n\t\texports.accounting = lib;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn lib;\n\t\t});\n\t} else {\n\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t// Returns a reference to the library's `accounting` object;\n\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t// Delete the noConflict method:\n\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn lib;\n\t\t\t};\n\t\t})(root.accounting);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['accounting'] = lib;\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n\n\n\n// WEBPACK FOOTER //\n// ./~/accounting/accounting.js","module.exports = {\"ALL\":\"ALL\",\"AFN\":\"AFN\",\"ARS\":\"ARS\",\"AWG\":\"AWG\",\"AUD\":\"A$\",\"AZN\":\"AZN\",\"BSD\":\"BSD\",\"BBD\":\"BBD\",\"BYR\":\"BYR\",\"BZD\":\"BZD\",\"BMD\":\"BMD\",\"BOB\":\"BOB\",\"BAM\":\"BAM\",\"BWP\":\"BWP\",\"BGN\":\"BGN\",\"BRL\":\"R$\",\"BND\":\"BND\",\"KHR\":\"KHR\",\"CAD\":\"CA$\",\"KYD\":\"KYD\",\"CLP\":\"CLP\",\"CNY\":\"CN¥\",\"COP\":\"COP\",\"CRC\":\"CRC\",\"HRK\":\"HRK\",\"CUP\":\"CUP\",\"CZK\":\"CZK\",\"DKK\":\"DKK\",\"DOP\":\"DOP\",\"XCD\":\"EC$\",\"EGP\":\"EGP\",\"SVC\":\"SVC\",\"EEK\":\"EEK\",\"EUR\":\"€\",\"FKP\":\"FKP\",\"FJD\":\"FJD\",\"GHC\":\"GHC\",\"GIP\":\"GIP\",\"GTQ\":\"GTQ\",\"GGP\":\"GGP\",\"GYD\":\"GYD\",\"HNL\":\"HNL\",\"HKD\":\"HK$\",\"HUF\":\"HUF\",\"ISK\":\"ISK\",\"INR\":\"₹\",\"IDR\":\"IDR\",\"IRR\":\"IRR\",\"IMP\":\"IMP\",\"ILS\":\"₪\",\"JMD\":\"JMD\",\"JPY\":\"JP¥\",\"JEP\":\"JEP\",\"KES\":\"KES\",\"KZT\":\"KZT\",\"KPW\":\"KPW\",\"KRW\":\"₩\",\"KGS\":\"KGS\",\"LAK\":\"LAK\",\"LVL\":\"LVL\",\"LBP\":\"LBP\",\"LRD\":\"LRD\",\"LTL\":\"LTL\",\"MKD\":\"MKD\",\"MYR\":\"MYR\",\"MUR\":\"MUR\",\"MXN\":\"MX$\",\"MNT\":\"MNT\",\"MZN\":\"MZN\",\"NAD\":\"NAD\",\"NPR\":\"NPR\",\"ANG\":\"ANG\",\"NZD\":\"NZ$\",\"NIO\":\"NIO\",\"NGN\":\"NGN\",\"NOK\":\"NOK\",\"OMR\":\"OMR\",\"PKR\":\"PKR\",\"PAB\":\"PAB\",\"PYG\":\"PYG\",\"PEN\":\"PEN\",\"PHP\":\"PHP\",\"PLN\":\"PLN\",\"QAR\":\"QAR\",\"RON\":\"RON\",\"RUB\":\"RUB\",\"RMB\":\"RMB\",\"SHP\":\"SHP\",\"SAR\":\"SAR\",\"RSD\":\"RSD\",\"SCR\":\"SCR\",\"SGD\":\"SGD\",\"SBD\":\"SBD\",\"SOS\":\"SOS\",\"ZAR\":\"ZAR\",\"LKR\":\"LKR\",\"SEK\":\"SEK\",\"CHF\":\"CHF\",\"SRD\":\"SRD\",\"SYP\":\"SYP\",\"TZS\":\"TZS\",\"TWD\":\"NT$\",\"THB\":\"฿\",\"TTD\":\"TTD\",\"TRY\":\"TRY\",\"TRL\":\"TRL\",\"TVD\":\"TVD\",\"UGX\":\"UGX\",\"UAH\":\"UAH\",\"GBP\":\"£\",\"USD\":\"$\",\"UYU\":\"UYU\",\"UZS\":\"UZS\",\"VEF\":\"VEF\",\"VND\":\"₫\",\"YER\":\"YER\",\"ZWD\":\"ZWD\",\"GEL\":\"GEL\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/global/variables/currency.json\n// module id = 176\n// module chunks = 7 18 43 44 47"],"sourceRoot":""}