{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***********************************************","webpack:///svg4everybody/svg4everybody.js","webpack:///webpack/bootstrap 7475bff11b25f6b898b5?9bc4***********************************************","webpack:///./src/components/svg4everybody/index.js","webpack:///./~/es6-promise/dist/es6-promise.js?c993","webpack:///./~/node-libs-browser/~/process/browser.js?494c**********************","webpack:///./~/rsvp/dist/rsvp.js?85a4************","webpack:///./~/timers-browserify/main.js?b088************","webpack:///./~/setimmediate/setImmediate.js?4a80************","webpack:///./~/global/document.js?cc96************************","webpack:///./src/global/js/helpers/axios.js?8bf4******************","webpack:///./~/axios/index.js?4307*******************","webpack:///./~/axios/lib/axios.js?061f*******************","webpack:///./~/axios/lib/utils.js?eda1*******************","webpack:///./~/axios/lib/helpers/bind.js?5cdd*******************","webpack:///./~/axios/lib/core/Axios.js?483c*******************","webpack:///./~/axios/lib/defaults.js?12cb*******************","webpack:///./~/axios/lib/helpers/normalizeHeaderName.js?40b2*******************","webpack:///./~/axios/lib/adapters/xhr.js?14ed*******************","webpack:///./~/axios/lib/core/settle.js?199f*******************","webpack:///./~/axios/lib/core/createError.js?f777*******************","webpack:///./~/axios/lib/core/enhanceError.js?288c*******************","webpack:///./~/axios/lib/helpers/buildURL.js?9a6a*******************","webpack:///./~/axios/lib/helpers/parseHeaders.js?15ca*******************","webpack:///./~/axios/lib/helpers/isURLSameOrigin.js?142d*******************","webpack:///./~/axios/lib/helpers/btoa.js?7d44*******************","webpack:///./~/axios/lib/helpers/cookies.js?0450*******************","webpack:///./~/axios/lib/core/InterceptorManager.js?5892*******************","webpack:///./~/axios/lib/core/dispatchRequest.js?91bc*******************","webpack:///./~/axios/lib/core/transformData.js?0ea6*******************","webpack:///./~/axios/lib/cancel/isCancel.js?f270*******************","webpack:///./~/axios/lib/helpers/isAbsoluteURL.js?3809*******************","webpack:///./~/axios/lib/helpers/combineURLs.js?7eb7*******************","webpack:///./~/axios/lib/cancel/Cancel.js?3ada*******************","webpack:///./~/axios/lib/cancel/CancelToken.js?4765*******************","webpack:///./~/axios/lib/helpers/spread.js?3c41*******************","webpack:///./~/js-cookie/src/js.cookie.js?648a*********************","webpack:///./src/components/svg4everybody/js/svg4everybody.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","concat","0","_interopRequireDefault","obj","__esModule","default","_svg4everybody","_svg4everybody2","svg4everybody","Svg4everybody","init","3","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","process","global","_typeof","Symbol","iterator","constructor","undefined","objectOrFunction","x","type","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","len","callback","queue","arg","attemptVertx","vertx","Function","require","runOnLoop","runOnContext","e","then","onFulfillment","onRejection","parent","child","noop","PROMISE_ID","makePromise","_state","arguments","invokeCallback","_result","subscribe","resolve$1","object","Constructor","promise","resolve","selfFulfillment","TypeError","cannotReturnOwn","getThen","error","TRY_CATCH_ERROR","tryThen","then$$1","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","PENDING","_subscribers","length","subscribers","settled","detail","tryCatch","hasCallback","succeeded","failed","initializePromise","resolver","nextId","validationError","Error","all","entries","Enumerator","race","isArray","_","reject$1","needsResolver","needsNew","polyfill","local","self","P","Promise","promiseToString","toString","cast","Promise$1","_isArray","Array","scheduleFlush","browserWindow","window","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","substring","input","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","_settledAt","_willSettleAt","state","enumerator","catch","finally","_setScheduler","_setAsap","_asap","4","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","array","push","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","7","__WEBPACK_AMD_DEFINE_ARRAY__","setImmediate","indexOf","callbacks","l","callbacksFor","_promiseCallbacks","configure","config","isObject","isMaybeThenable","payload","guid","key","childGuid","childId","stack","instrument","eventName","_guidKey","_id","label","timeStamp","now","withOwnPromise","GET_THEN_ERROR","async","_onError","isOwnThenable","result","ErrorObject","resolved","makeSettledResult","position","Result","getThen$1","ERROR","tryApply","f","s","makeObject","argumentNames","arrayResult","wrapThenable","onFulFillment","denodeify","nodeFunc","options","promiseInput","needsPromiseInput","GET_THEN_ERROR$1","err","val","handlePromiseInput","handleValueInput","__proto__","all$1","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","allSettled","AllSettled","race$1","_possibleConstructorReturn$1","_inherits$1","hash","PromiseHash","_possibleConstructorReturn$2","_inherits$2","hashSettled","HashSettled","rethrow","defer","deferred","map","promises","mapFn","values","results","resolve$2","reject$2","resolveAll","resolveSingle","filter","filterFn","filtered","newLength","_i","queue$1","scheduleFlush$1","match","attemptVertex","_defineProperty","defineProperty","EventTarget","mixin","allCallbacks","index","splice","trigger","Date","getTime","abortOnReject","_abortOnReject","_init","_settleMaybeThenable","_makeResult","guidKey","counter","_this","after","_Enumerator","_PromiseHash","platform","_asap$cast$Promise$Ev","cb","rsvp","8","Timeout","clearFn","_clearFn","scope","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","9","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessageIsAsynchronous","oldOnMessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","event","source","addEventListener","attachEvent","installMessageChannelImplementation","installReadyStateChangeImplementation","html","doc","documentElement","script","createElement","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","getPrototypeOf","10","12","doccy","topLevel","minDoc","13","15","axiosConfig","callId","cookies","get","axios","defaults","headers","common","_axios","_axios2","_jsCookie","_jsCookie2","16","17","createInstance","defaultConfig","context","Axios","instance","bind","request","utils","extend","instanceConfig","merge","Cancel","CancelToken","isCancel","spread","18","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","trim","str","replace","isStandardBrowserEnv","forEach","assignValue","thisArg","19","20","interceptors","InterceptorManager","response","dispatchRequest","isAbsoluteURL","combineURLs","url","method","baseURL","chain","interceptor","unshift","fulfilled","rejected","shift","21","setContentTypeIfUnset","getDefaultAdapter","adapter","XMLHttpRequest","normalizeHeaderName","PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","Content-Type","transformRequest","JSON","stringify","transformResponse","parse","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","Accept","22","normalizedName","toUpperCase","23","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","auth","username","password","Authorization","open","params","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onerror","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","cancel","abort","send","24","25","enhanceError","message","code","26","27","encode","encodeURIComponent","serializedParams","parts","v","toISOString","join","28","parsed","split","line","substr","29","resolveURL","href","msie","urlParsingNode","setAttribute","protocol","host","search","hostname","port","pathname","charAt","originURL","test","navigator","userAgent","location","requestURL","30","E","block","charCode","String","output","idx","chars","charCodeAt","31","write","expires","path","domain","secure","cookie","toGMTString","RegExp","decodeURIComponent","remove","32","handlers","use","eject","h","33","throwIfCancellationRequested","throwIfRequested","transformData","34","fns","35","__CANCEL__","36","37","relativeURL","38","39","executor","resolvePromise","token","40","arr","41","registeredInModuleLoader","OldCookies","Cookies","api","noConflict","attributes","converter","setMilliseconds","getMilliseconds","toUTCString","escape","stringifiedAttributes","attributeName","rdecode","json","set","getJSON","withConverter","281","_classCallCheck","_document","_document2","_rsvp","_es6Promise","_es6Promise2","Svg4EveryBody","es6Promise","polyDetect","polyFill","olderIEUA","newerIeua","webkitUa","olderEdgeUa","edgeUa","inIFrame","top","huaWeiBrowser","files","querySelectorAll","file","fullPosition","getAttribute","svgName","keys","list","updating","updateState","fileNames","svgLoad","svg","container","implementation","createHTMLDocument","body","innerHTML","element","getElementById","updateDom","nodes","embed","parentNode","target","fragment","createDocumentFragment","viewBox","hasAttribute","clone","cloneNode","childNodes","firstChild"],"mappings":"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","file":"svg4everybody/svg4everybody.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microapp-frontend-base\"] = factory();\n\telse\n\t\troot[\"microapp-frontend-base\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microapp-frontend-base\"] = factory();\n\telse\n\t\troot[\"microapp-frontend-base\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _svg4everybody = __webpack_require__(281);\n\t\n\tvar _svg4everybody2 = _interopRequireDefault(_svg4everybody);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar svg4everybody = new _svg4everybody2.default();\n\tsvg4everybody.init();\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t * @overview es6-promise - a tiny implementation of Promises/A+.\n\t * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n\t * @license   Licensed under MIT license\n\t *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n\t * @version   v4.2.6+9869a4bc\n\t */\n\t\n\t(function (global, factory) {\n\t  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.ES6Promise = factory();\n\t})(undefined, function () {\n\t  'use strict';\n\t\n\t  function objectOrFunction(x) {\n\t    var type = typeof x === 'undefined' ? 'undefined' : _typeof(x);\n\t    return x !== null && (type === 'object' || type === 'function');\n\t  }\n\t\n\t  function isFunction(x) {\n\t    return typeof x === 'function';\n\t  }\n\t\n\t  var _isArray = void 0;\n\t  if (Array.isArray) {\n\t    _isArray = Array.isArray;\n\t  } else {\n\t    _isArray = function _isArray(x) {\n\t      return Object.prototype.toString.call(x) === '[object Array]';\n\t    };\n\t  }\n\t\n\t  var isArray = _isArray;\n\t\n\t  var len = 0;\n\t  var vertxNext = void 0;\n\t  var customSchedulerFn = void 0;\n\t\n\t  var asap = function asap(callback, arg) {\n\t    queue[len] = callback;\n\t    queue[len + 1] = arg;\n\t    len += 2;\n\t    if (len === 2) {\n\t      // If len is 2, that means that we need to schedule an async flush.\n\t      // If additional callbacks are queued before the queue is flushed, they\n\t      // will be processed by this flush that we are scheduling.\n\t      if (customSchedulerFn) {\n\t        customSchedulerFn(flush);\n\t      } else {\n\t        scheduleFlush();\n\t      }\n\t    }\n\t  };\n\t\n\t  function setScheduler(scheduleFn) {\n\t    customSchedulerFn = scheduleFn;\n\t  }\n\t\n\t  function setAsap(asapFn) {\n\t    asap = asapFn;\n\t  }\n\t\n\t  var browserWindow = typeof window !== 'undefined' ? window : undefined;\n\t  var browserGlobal = browserWindow || {};\n\t  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n\t  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\t\n\t  // test for web worker but not in IE10\n\t  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\t\n\t  // node\n\t  function useNextTick() {\n\t    // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n\t    // see https://github.com/cujojs/when/issues/410 for details\n\t    return function () {\n\t      return process.nextTick(flush);\n\t    };\n\t  }\n\t\n\t  // vertx\n\t  function useVertxTimer() {\n\t    if (typeof vertxNext !== 'undefined') {\n\t      return function () {\n\t        vertxNext(flush);\n\t      };\n\t    }\n\t\n\t    return useSetTimeout();\n\t  }\n\t\n\t  function useMutationObserver() {\n\t    var iterations = 0;\n\t    var observer = new BrowserMutationObserver(flush);\n\t    var node = document.createTextNode('');\n\t    observer.observe(node, { characterData: true });\n\t\n\t    return function () {\n\t      node.data = iterations = ++iterations % 2;\n\t    };\n\t  }\n\t\n\t  // web worker\n\t  function useMessageChannel() {\n\t    var channel = new MessageChannel();\n\t    channel.port1.onmessage = flush;\n\t    return function () {\n\t      return channel.port2.postMessage(0);\n\t    };\n\t  }\n\t\n\t  function useSetTimeout() {\n\t    // Store setTimeout reference so es6-promise will be unaffected by\n\t    // other code modifying setTimeout (like sinon.useFakeTimers())\n\t    var globalSetTimeout = setTimeout;\n\t    return function () {\n\t      return globalSetTimeout(flush, 1);\n\t    };\n\t  }\n\t\n\t  var queue = new Array(1000);\n\t  function flush() {\n\t    for (var i = 0; i < len; i += 2) {\n\t      var callback = queue[i];\n\t      var arg = queue[i + 1];\n\t\n\t      callback(arg);\n\t\n\t      queue[i] = undefined;\n\t      queue[i + 1] = undefined;\n\t    }\n\t\n\t    len = 0;\n\t  }\n\t\n\t  function attemptVertx() {\n\t    try {\n\t      var vertx = Function('return this')().require('vertx');\n\t      vertxNext = vertx.runOnLoop || vertx.runOnContext;\n\t      return useVertxTimer();\n\t    } catch (e) {\n\t      return useSetTimeout();\n\t    }\n\t  }\n\t\n\t  var scheduleFlush = void 0;\n\t  // Decide what async method to use to triggering processing of queued callbacks:\n\t  if (isNode) {\n\t    scheduleFlush = useNextTick();\n\t  } else if (BrowserMutationObserver) {\n\t    scheduleFlush = useMutationObserver();\n\t  } else if (isWorker) {\n\t    scheduleFlush = useMessageChannel();\n\t  } else if (browserWindow === undefined && \"function\" === 'function') {\n\t    scheduleFlush = attemptVertx();\n\t  } else {\n\t    scheduleFlush = useSetTimeout();\n\t  }\n\t\n\t  function then(onFulfillment, onRejection) {\n\t    var parent = this;\n\t\n\t    var child = new this.constructor(noop);\n\t\n\t    if (child[PROMISE_ID] === undefined) {\n\t      makePromise(child);\n\t    }\n\t\n\t    var _state = parent._state;\n\t\n\t    if (_state) {\n\t      var callback = arguments[_state - 1];\n\t      asap(function () {\n\t        return invokeCallback(_state, child, callback, parent._result);\n\t      });\n\t    } else {\n\t      subscribe(parent, child, onFulfillment, onRejection);\n\t    }\n\t\n\t    return child;\n\t  }\n\t\n\t  /**\n\t    `Promise.resolve` returns a promise that will become resolved with the\n\t    passed `value`. It is shorthand for the following:\n\t  \n\t    ```javascript\n\t    let promise = new Promise(function(resolve, reject){\n\t      resolve(1);\n\t    });\n\t  \n\t    promise.then(function(value){\n\t      // value === 1\n\t    });\n\t    ```\n\t  \n\t    Instead of writing the above, your code now simply becomes the following:\n\t  \n\t    ```javascript\n\t    let promise = Promise.resolve(1);\n\t  \n\t    promise.then(function(value){\n\t      // value === 1\n\t    });\n\t    ```\n\t  \n\t    @method resolve\n\t    @static\n\t    @param {Any} value value that the returned promise will be resolved with\n\t    Useful for tooling.\n\t    @return {Promise} a promise that will become fulfilled with the given\n\t    `value`\n\t  */\n\t  function resolve$1(object) {\n\t    /*jshint validthis:true */\n\t    var Constructor = this;\n\t\n\t    if (object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.constructor === Constructor) {\n\t      return object;\n\t    }\n\t\n\t    var promise = new Constructor(noop);\n\t    resolve(promise, object);\n\t    return promise;\n\t  }\n\t\n\t  var PROMISE_ID = Math.random().toString(36).substring(2);\n\t\n\t  function noop() {}\n\t\n\t  var PENDING = void 0;\n\t  var FULFILLED = 1;\n\t  var REJECTED = 2;\n\t\n\t  var TRY_CATCH_ERROR = { error: null };\n\t\n\t  function selfFulfillment() {\n\t    return new TypeError(\"You cannot resolve a promise with itself\");\n\t  }\n\t\n\t  function cannotReturnOwn() {\n\t    return new TypeError('A promises callback cannot return that same promise.');\n\t  }\n\t\n\t  function getThen(promise) {\n\t    try {\n\t      return promise.then;\n\t    } catch (error) {\n\t      TRY_CATCH_ERROR.error = error;\n\t      return TRY_CATCH_ERROR;\n\t    }\n\t  }\n\t\n\t  function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n\t    try {\n\t      then$$1.call(value, fulfillmentHandler, rejectionHandler);\n\t    } catch (e) {\n\t      return e;\n\t    }\n\t  }\n\t\n\t  function handleForeignThenable(promise, thenable, then$$1) {\n\t    asap(function (promise) {\n\t      var sealed = false;\n\t      var error = tryThen(then$$1, thenable, function (value) {\n\t        if (sealed) {\n\t          return;\n\t        }\n\t        sealed = true;\n\t        if (thenable !== value) {\n\t          resolve(promise, value);\n\t        } else {\n\t          fulfill(promise, value);\n\t        }\n\t      }, function (reason) {\n\t        if (sealed) {\n\t          return;\n\t        }\n\t        sealed = true;\n\t\n\t        reject(promise, reason);\n\t      }, 'Settle: ' + (promise._label || ' unknown promise'));\n\t\n\t      if (!sealed && error) {\n\t        sealed = true;\n\t        reject(promise, error);\n\t      }\n\t    }, promise);\n\t  }\n\t\n\t  function handleOwnThenable(promise, thenable) {\n\t    if (thenable._state === FULFILLED) {\n\t      fulfill(promise, thenable._result);\n\t    } else if (thenable._state === REJECTED) {\n\t      reject(promise, thenable._result);\n\t    } else {\n\t      subscribe(thenable, undefined, function (value) {\n\t        return resolve(promise, value);\n\t      }, function (reason) {\n\t        return reject(promise, reason);\n\t      });\n\t    }\n\t  }\n\t\n\t  function handleMaybeThenable(promise, maybeThenable, then$$1) {\n\t    if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n\t      handleOwnThenable(promise, maybeThenable);\n\t    } else {\n\t      if (then$$1 === TRY_CATCH_ERROR) {\n\t        reject(promise, TRY_CATCH_ERROR.error);\n\t        TRY_CATCH_ERROR.error = null;\n\t      } else if (then$$1 === undefined) {\n\t        fulfill(promise, maybeThenable);\n\t      } else if (isFunction(then$$1)) {\n\t        handleForeignThenable(promise, maybeThenable, then$$1);\n\t      } else {\n\t        fulfill(promise, maybeThenable);\n\t      }\n\t    }\n\t  }\n\t\n\t  function resolve(promise, value) {\n\t    if (promise === value) {\n\t      reject(promise, selfFulfillment());\n\t    } else if (objectOrFunction(value)) {\n\t      handleMaybeThenable(promise, value, getThen(value));\n\t    } else {\n\t      fulfill(promise, value);\n\t    }\n\t  }\n\t\n\t  function publishRejection(promise) {\n\t    if (promise._onerror) {\n\t      promise._onerror(promise._result);\n\t    }\n\t\n\t    publish(promise);\n\t  }\n\t\n\t  function fulfill(promise, value) {\n\t    if (promise._state !== PENDING) {\n\t      return;\n\t    }\n\t\n\t    promise._result = value;\n\t    promise._state = FULFILLED;\n\t\n\t    if (promise._subscribers.length !== 0) {\n\t      asap(publish, promise);\n\t    }\n\t  }\n\t\n\t  function reject(promise, reason) {\n\t    if (promise._state !== PENDING) {\n\t      return;\n\t    }\n\t    promise._state = REJECTED;\n\t    promise._result = reason;\n\t\n\t    asap(publishRejection, promise);\n\t  }\n\t\n\t  function subscribe(parent, child, onFulfillment, onRejection) {\n\t    var _subscribers = parent._subscribers;\n\t    var length = _subscribers.length;\n\t\n\t    parent._onerror = null;\n\t\n\t    _subscribers[length] = child;\n\t    _subscribers[length + FULFILLED] = onFulfillment;\n\t    _subscribers[length + REJECTED] = onRejection;\n\t\n\t    if (length === 0 && parent._state) {\n\t      asap(publish, parent);\n\t    }\n\t  }\n\t\n\t  function publish(promise) {\n\t    var subscribers = promise._subscribers;\n\t    var settled = promise._state;\n\t\n\t    if (subscribers.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var child = void 0,\n\t        callback = void 0,\n\t        detail = promise._result;\n\t\n\t    for (var i = 0; i < subscribers.length; i += 3) {\n\t      child = subscribers[i];\n\t      callback = subscribers[i + settled];\n\t\n\t      if (child) {\n\t        invokeCallback(settled, child, callback, detail);\n\t      } else {\n\t        callback(detail);\n\t      }\n\t    }\n\t\n\t    promise._subscribers.length = 0;\n\t  }\n\t\n\t  function tryCatch(callback, detail) {\n\t    try {\n\t      return callback(detail);\n\t    } catch (e) {\n\t      TRY_CATCH_ERROR.error = e;\n\t      return TRY_CATCH_ERROR;\n\t    }\n\t  }\n\t\n\t  function invokeCallback(settled, promise, callback, detail) {\n\t    var hasCallback = isFunction(callback),\n\t        value = void 0,\n\t        error = void 0,\n\t        succeeded = void 0,\n\t        failed = void 0;\n\t\n\t    if (hasCallback) {\n\t      value = tryCatch(callback, detail);\n\t\n\t      if (value === TRY_CATCH_ERROR) {\n\t        failed = true;\n\t        error = value.error;\n\t        value.error = null;\n\t      } else {\n\t        succeeded = true;\n\t      }\n\t\n\t      if (promise === value) {\n\t        reject(promise, cannotReturnOwn());\n\t        return;\n\t      }\n\t    } else {\n\t      value = detail;\n\t      succeeded = true;\n\t    }\n\t\n\t    if (promise._state !== PENDING) {\n\t      // noop\n\t    } else if (hasCallback && succeeded) {\n\t      resolve(promise, value);\n\t    } else if (failed) {\n\t      reject(promise, error);\n\t    } else if (settled === FULFILLED) {\n\t      fulfill(promise, value);\n\t    } else if (settled === REJECTED) {\n\t      reject(promise, value);\n\t    }\n\t  }\n\t\n\t  function initializePromise(promise, resolver) {\n\t    try {\n\t      resolver(function resolvePromise(value) {\n\t        resolve(promise, value);\n\t      }, function rejectPromise(reason) {\n\t        reject(promise, reason);\n\t      });\n\t    } catch (e) {\n\t      reject(promise, e);\n\t    }\n\t  }\n\t\n\t  var id = 0;\n\t  function nextId() {\n\t    return id++;\n\t  }\n\t\n\t  function makePromise(promise) {\n\t    promise[PROMISE_ID] = id++;\n\t    promise._state = undefined;\n\t    promise._result = undefined;\n\t    promise._subscribers = [];\n\t  }\n\t\n\t  function validationError() {\n\t    return new Error('Array Methods must be provided an Array');\n\t  }\n\t\n\t  var Enumerator = function () {\n\t    function Enumerator(Constructor, input) {\n\t      this._instanceConstructor = Constructor;\n\t      this.promise = new Constructor(noop);\n\t\n\t      if (!this.promise[PROMISE_ID]) {\n\t        makePromise(this.promise);\n\t      }\n\t\n\t      if (isArray(input)) {\n\t        this.length = input.length;\n\t        this._remaining = input.length;\n\t\n\t        this._result = new Array(this.length);\n\t\n\t        if (this.length === 0) {\n\t          fulfill(this.promise, this._result);\n\t        } else {\n\t          this.length = this.length || 0;\n\t          this._enumerate(input);\n\t          if (this._remaining === 0) {\n\t            fulfill(this.promise, this._result);\n\t          }\n\t        }\n\t      } else {\n\t        reject(this.promise, validationError());\n\t      }\n\t    }\n\t\n\t    Enumerator.prototype._enumerate = function _enumerate(input) {\n\t      for (var i = 0; this._state === PENDING && i < input.length; i++) {\n\t        this._eachEntry(input[i], i);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n\t      var c = this._instanceConstructor;\n\t      var resolve$$1 = c.resolve;\n\t\n\t      if (resolve$$1 === resolve$1) {\n\t        var _then = getThen(entry);\n\t\n\t        if (_then === then && entry._state !== PENDING) {\n\t          this._settledAt(entry._state, i, entry._result);\n\t        } else if (typeof _then !== 'function') {\n\t          this._remaining--;\n\t          this._result[i] = entry;\n\t        } else if (c === Promise$1) {\n\t          var promise = new c(noop);\n\t          handleMaybeThenable(promise, entry, _then);\n\t          this._willSettleAt(promise, i);\n\t        } else {\n\t          this._willSettleAt(new c(function (resolve$$1) {\n\t            return resolve$$1(entry);\n\t          }), i);\n\t        }\n\t      } else {\n\t        this._willSettleAt(resolve$$1(entry), i);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n\t      var promise = this.promise;\n\t\n\t      if (promise._state === PENDING) {\n\t        this._remaining--;\n\t\n\t        if (state === REJECTED) {\n\t          reject(promise, value);\n\t        } else {\n\t          this._result[i] = value;\n\t        }\n\t      }\n\t\n\t      if (this._remaining === 0) {\n\t        fulfill(promise, this._result);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n\t      var enumerator = this;\n\t\n\t      subscribe(promise, undefined, function (value) {\n\t        return enumerator._settledAt(FULFILLED, i, value);\n\t      }, function (reason) {\n\t        return enumerator._settledAt(REJECTED, i, reason);\n\t      });\n\t    };\n\t\n\t    return Enumerator;\n\t  }();\n\t\n\t  /**\n\t    `Promise.all` accepts an array of promises, and returns a new promise which\n\t    is fulfilled with an array of fulfillment values for the passed promises, or\n\t    rejected with the reason of the first passed promise to be rejected. It casts all\n\t    elements of the passed iterable to promises as it runs this algorithm.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promise1 = resolve(1);\n\t    let promise2 = resolve(2);\n\t    let promise3 = resolve(3);\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    Promise.all(promises).then(function(array){\n\t      // The array here would be [ 1, 2, 3 ];\n\t    });\n\t    ```\n\t  \n\t    If any of the `promises` given to `all` are rejected, the first promise\n\t    that is rejected will be given as an argument to the returned promises's\n\t    rejection handler. For example:\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promise1 = resolve(1);\n\t    let promise2 = reject(new Error(\"2\"));\n\t    let promise3 = reject(new Error(\"3\"));\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    Promise.all(promises).then(function(array){\n\t      // Code here never runs because there are rejected promises!\n\t    }, function(error) {\n\t      // error.message === \"2\"\n\t    });\n\t    ```\n\t  \n\t    @method all\n\t    @static\n\t    @param {Array} entries array of promises\n\t    @param {String} label optional string for labeling the promise.\n\t    Useful for tooling.\n\t    @return {Promise} promise that is fulfilled when all `promises` have been\n\t    fulfilled, or rejected if any of them become rejected.\n\t    @static\n\t  */\n\t  function all(entries) {\n\t    return new Enumerator(this, entries).promise;\n\t  }\n\t\n\t  /**\n\t    `Promise.race` returns a new promise which is settled in the same way as the\n\t    first passed promise to settle.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promise1 = new Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        resolve('promise 1');\n\t      }, 200);\n\t    });\n\t  \n\t    let promise2 = new Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        resolve('promise 2');\n\t      }, 100);\n\t    });\n\t  \n\t    Promise.race([promise1, promise2]).then(function(result){\n\t      // result === 'promise 2' because it was resolved before promise1\n\t      // was resolved.\n\t    });\n\t    ```\n\t  \n\t    `Promise.race` is deterministic in that only the state of the first\n\t    settled promise matters. For example, even if other promises given to the\n\t    `promises` array argument are resolved, but the first settled promise has\n\t    become rejected before the other promises became fulfilled, the returned\n\t    promise will become rejected:\n\t  \n\t    ```javascript\n\t    let promise1 = new Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        resolve('promise 1');\n\t      }, 200);\n\t    });\n\t  \n\t    let promise2 = new Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        reject(new Error('promise 2'));\n\t      }, 100);\n\t    });\n\t  \n\t    Promise.race([promise1, promise2]).then(function(result){\n\t      // Code here never runs\n\t    }, function(reason){\n\t      // reason.message === 'promise 2' because promise 2 became rejected before\n\t      // promise 1 became fulfilled\n\t    });\n\t    ```\n\t  \n\t    An example real-world use case is implementing timeouts:\n\t  \n\t    ```javascript\n\t    Promise.race([ajax('foo.json'), timeout(5000)])\n\t    ```\n\t  \n\t    @method race\n\t    @static\n\t    @param {Array} promises array of promises to observe\n\t    Useful for tooling.\n\t    @return {Promise} a promise which settles in the same way as the first passed\n\t    promise to settle.\n\t  */\n\t  function race(entries) {\n\t    /*jshint validthis:true */\n\t    var Constructor = this;\n\t\n\t    if (!isArray(entries)) {\n\t      return new Constructor(function (_, reject) {\n\t        return reject(new TypeError('You must pass an array to race.'));\n\t      });\n\t    } else {\n\t      return new Constructor(function (resolve, reject) {\n\t        var length = entries.length;\n\t        for (var i = 0; i < length; i++) {\n\t          Constructor.resolve(entries[i]).then(resolve, reject);\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t    `Promise.reject` returns a promise rejected with the passed `reason`.\n\t    It is shorthand for the following:\n\t  \n\t    ```javascript\n\t    let promise = new Promise(function(resolve, reject){\n\t      reject(new Error('WHOOPS'));\n\t    });\n\t  \n\t    promise.then(function(value){\n\t      // Code here doesn't run because the promise is rejected!\n\t    }, function(reason){\n\t      // reason.message === 'WHOOPS'\n\t    });\n\t    ```\n\t  \n\t    Instead of writing the above, your code now simply becomes the following:\n\t  \n\t    ```javascript\n\t    let promise = Promise.reject(new Error('WHOOPS'));\n\t  \n\t    promise.then(function(value){\n\t      // Code here doesn't run because the promise is rejected!\n\t    }, function(reason){\n\t      // reason.message === 'WHOOPS'\n\t    });\n\t    ```\n\t  \n\t    @method reject\n\t    @static\n\t    @param {Any} reason value that the returned promise will be rejected with.\n\t    Useful for tooling.\n\t    @return {Promise} a promise rejected with the given `reason`.\n\t  */\n\t  function reject$1(reason) {\n\t    /*jshint validthis:true */\n\t    var Constructor = this;\n\t    var promise = new Constructor(noop);\n\t    reject(promise, reason);\n\t    return promise;\n\t  }\n\t\n\t  function needsResolver() {\n\t    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t  }\n\t\n\t  function needsNew() {\n\t    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t  }\n\t\n\t  /**\n\t    Promise objects represent the eventual result of an asynchronous operation. The\n\t    primary way of interacting with a promise is through its `then` method, which\n\t    registers callbacks to receive either a promise's eventual value or the reason\n\t    why the promise cannot be fulfilled.\n\t  \n\t    Terminology\n\t    -----------\n\t  \n\t    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n\t    - `thenable` is an object or function that defines a `then` method.\n\t    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n\t    - `exception` is a value that is thrown using the throw statement.\n\t    - `reason` is a value that indicates why a promise was rejected.\n\t    - `settled` the final resting state of a promise, fulfilled or rejected.\n\t  \n\t    A promise can be in one of three states: pending, fulfilled, or rejected.\n\t  \n\t    Promises that are fulfilled have a fulfillment value and are in the fulfilled\n\t    state.  Promises that are rejected have a rejection reason and are in the\n\t    rejected state.  A fulfillment value is never a thenable.\n\t  \n\t    Promises can also be said to *resolve* a value.  If this value is also a\n\t    promise, then the original promise's settled state will match the value's\n\t    settled state.  So a promise that *resolves* a promise that rejects will\n\t    itself reject, and a promise that *resolves* a promise that fulfills will\n\t    itself fulfill.\n\t  \n\t  \n\t    Basic Usage:\n\t    ------------\n\t  \n\t    ```js\n\t    let promise = new Promise(function(resolve, reject) {\n\t      // on success\n\t      resolve(value);\n\t  \n\t      // on failure\n\t      reject(reason);\n\t    });\n\t  \n\t    promise.then(function(value) {\n\t      // on fulfillment\n\t    }, function(reason) {\n\t      // on rejection\n\t    });\n\t    ```\n\t  \n\t    Advanced Usage:\n\t    ---------------\n\t  \n\t    Promises shine when abstracting away asynchronous interactions such as\n\t    `XMLHttpRequest`s.\n\t  \n\t    ```js\n\t    function getJSON(url) {\n\t      return new Promise(function(resolve, reject){\n\t        let xhr = new XMLHttpRequest();\n\t  \n\t        xhr.open('GET', url);\n\t        xhr.onreadystatechange = handler;\n\t        xhr.responseType = 'json';\n\t        xhr.setRequestHeader('Accept', 'application/json');\n\t        xhr.send();\n\t  \n\t        function handler() {\n\t          if (this.readyState === this.DONE) {\n\t            if (this.status === 200) {\n\t              resolve(this.response);\n\t            } else {\n\t              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n\t            }\n\t          }\n\t        };\n\t      });\n\t    }\n\t  \n\t    getJSON('/posts.json').then(function(json) {\n\t      // on fulfillment\n\t    }, function(reason) {\n\t      // on rejection\n\t    });\n\t    ```\n\t  \n\t    Unlike callbacks, promises are great composable primitives.\n\t  \n\t    ```js\n\t    Promise.all([\n\t      getJSON('/posts'),\n\t      getJSON('/comments')\n\t    ]).then(function(values){\n\t      values[0] // => postsJSON\n\t      values[1] // => commentsJSON\n\t  \n\t      return values;\n\t    });\n\t    ```\n\t  \n\t    @class Promise\n\t    @param {Function} resolver\n\t    Useful for tooling.\n\t    @constructor\n\t  */\n\t\n\t  var Promise$1 = function () {\n\t    function Promise(resolver) {\n\t      this[PROMISE_ID] = nextId();\n\t      this._result = this._state = undefined;\n\t      this._subscribers = [];\n\t\n\t      if (noop !== resolver) {\n\t        typeof resolver !== 'function' && needsResolver();\n\t        this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n\t      }\n\t    }\n\t\n\t    /**\n\t    The primary way of interacting with a promise is through its `then` method,\n\t    which registers callbacks to receive either a promise's eventual value or the\n\t    reason why the promise cannot be fulfilled.\n\t     ```js\n\t    findUser().then(function(user){\n\t      // user is available\n\t    }, function(reason){\n\t      // user is unavailable, and you are given the reason why\n\t    });\n\t    ```\n\t     Chaining\n\t    --------\n\t     The return value of `then` is itself a promise.  This second, 'downstream'\n\t    promise is resolved with the return value of the first promise's fulfillment\n\t    or rejection handler, or rejected if the handler throws an exception.\n\t     ```js\n\t    findUser().then(function (user) {\n\t      return user.name;\n\t    }, function (reason) {\n\t      return 'default name';\n\t    }).then(function (userName) {\n\t      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n\t      // will be `'default name'`\n\t    });\n\t     findUser().then(function (user) {\n\t      throw new Error('Found user, but still unhappy');\n\t    }, function (reason) {\n\t      throw new Error('`findUser` rejected and we're unhappy');\n\t    }).then(function (value) {\n\t      // never reached\n\t    }, function (reason) {\n\t      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n\t      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n\t    });\n\t    ```\n\t    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\t     ```js\n\t    findUser().then(function (user) {\n\t      throw new PedagogicalException('Upstream error');\n\t    }).then(function (value) {\n\t      // never reached\n\t    }).then(function (value) {\n\t      // never reached\n\t    }, function (reason) {\n\t      // The `PedgagocialException` is propagated all the way down to here\n\t    });\n\t    ```\n\t     Assimilation\n\t    ------------\n\t     Sometimes the value you want to propagate to a downstream promise can only be\n\t    retrieved asynchronously. This can be achieved by returning a promise in the\n\t    fulfillment or rejection handler. The downstream promise will then be pending\n\t    until the returned promise is settled. This is called *assimilation*.\n\t     ```js\n\t    findUser().then(function (user) {\n\t      return findCommentsByAuthor(user);\n\t    }).then(function (comments) {\n\t      // The user's comments are now available\n\t    });\n\t    ```\n\t     If the assimliated promise rejects, then the downstream promise will also reject.\n\t     ```js\n\t    findUser().then(function (user) {\n\t      return findCommentsByAuthor(user);\n\t    }).then(function (comments) {\n\t      // If `findCommentsByAuthor` fulfills, we'll have the value here\n\t    }, function (reason) {\n\t      // If `findCommentsByAuthor` rejects, we'll have the reason here\n\t    });\n\t    ```\n\t     Simple Example\n\t    --------------\n\t     Synchronous Example\n\t     ```javascript\n\t    let result;\n\t     try {\n\t      result = findResult();\n\t      // success\n\t    } catch(reason) {\n\t      // failure\n\t    }\n\t    ```\n\t     Errback Example\n\t     ```js\n\t    findResult(function(result, err){\n\t      if (err) {\n\t        // failure\n\t      } else {\n\t        // success\n\t      }\n\t    });\n\t    ```\n\t     Promise Example;\n\t     ```javascript\n\t    findResult().then(function(result){\n\t      // success\n\t    }, function(reason){\n\t      // failure\n\t    });\n\t    ```\n\t     Advanced Example\n\t    --------------\n\t     Synchronous Example\n\t     ```javascript\n\t    let author, books;\n\t     try {\n\t      author = findAuthor();\n\t      books  = findBooksByAuthor(author);\n\t      // success\n\t    } catch(reason) {\n\t      // failure\n\t    }\n\t    ```\n\t     Errback Example\n\t     ```js\n\t     function foundBooks(books) {\n\t     }\n\t     function failure(reason) {\n\t     }\n\t     findAuthor(function(author, err){\n\t      if (err) {\n\t        failure(err);\n\t        // failure\n\t      } else {\n\t        try {\n\t          findBoooksByAuthor(author, function(books, err) {\n\t            if (err) {\n\t              failure(err);\n\t            } else {\n\t              try {\n\t                foundBooks(books);\n\t              } catch(reason) {\n\t                failure(reason);\n\t              }\n\t            }\n\t          });\n\t        } catch(error) {\n\t          failure(err);\n\t        }\n\t        // success\n\t      }\n\t    });\n\t    ```\n\t     Promise Example;\n\t     ```javascript\n\t    findAuthor().\n\t      then(findBooksByAuthor).\n\t      then(function(books){\n\t        // found books\n\t    }).catch(function(reason){\n\t      // something went wrong\n\t    });\n\t    ```\n\t     @method then\n\t    @param {Function} onFulfilled\n\t    @param {Function} onRejected\n\t    Useful for tooling.\n\t    @return {Promise}\n\t    */\n\t\n\t    /**\n\t    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n\t    as the catch block of a try/catch statement.\n\t    ```js\n\t    function findAuthor(){\n\t    throw new Error('couldn't find that author');\n\t    }\n\t    // synchronous\n\t    try {\n\t    findAuthor();\n\t    } catch(reason) {\n\t    // something went wrong\n\t    }\n\t    // async with promises\n\t    findAuthor().catch(function(reason){\n\t    // something went wrong\n\t    });\n\t    ```\n\t    @method catch\n\t    @param {Function} onRejection\n\t    Useful for tooling.\n\t    @return {Promise}\n\t    */\n\t\n\t    Promise.prototype.catch = function _catch(onRejection) {\n\t      return this.then(null, onRejection);\n\t    };\n\t\n\t    /**\n\t      `finally` will be invoked regardless of the promise's fate just as native\n\t      try/catch/finally behaves\n\t    \n\t      Synchronous example:\n\t    \n\t      ```js\n\t      findAuthor() {\n\t        if (Math.random() > 0.5) {\n\t          throw new Error();\n\t        }\n\t        return new Author();\n\t      }\n\t    \n\t      try {\n\t        return findAuthor(); // succeed or fail\n\t      } catch(error) {\n\t        return findOtherAuther();\n\t      } finally {\n\t        // always runs\n\t        // doesn't affect the return value\n\t      }\n\t      ```\n\t    \n\t      Asynchronous example:\n\t    \n\t      ```js\n\t      findAuthor().catch(function(reason){\n\t        return findOtherAuther();\n\t      }).finally(function(){\n\t        // author was either found, or not\n\t      });\n\t      ```\n\t    \n\t      @method finally\n\t      @param {Function} callback\n\t      @return {Promise}\n\t    */\n\t\n\t    Promise.prototype.finally = function _finally(callback) {\n\t      var promise = this;\n\t      var constructor = promise.constructor;\n\t\n\t      if (isFunction(callback)) {\n\t        return promise.then(function (value) {\n\t          return constructor.resolve(callback()).then(function () {\n\t            return value;\n\t          });\n\t        }, function (reason) {\n\t          return constructor.resolve(callback()).then(function () {\n\t            throw reason;\n\t          });\n\t        });\n\t      }\n\t\n\t      return promise.then(callback, callback);\n\t    };\n\t\n\t    return Promise;\n\t  }();\n\t\n\t  Promise$1.prototype.then = then;\n\t  Promise$1.all = all;\n\t  Promise$1.race = race;\n\t  Promise$1.resolve = resolve$1;\n\t  Promise$1.reject = reject$1;\n\t  Promise$1._setScheduler = setScheduler;\n\t  Promise$1._setAsap = setAsap;\n\t  Promise$1._asap = asap;\n\t\n\t  /*global self*/\n\t  function polyfill() {\n\t    var local = void 0;\n\t\n\t    if (typeof global !== 'undefined') {\n\t      local = global;\n\t    } else if (typeof self !== 'undefined') {\n\t      local = self;\n\t    } else {\n\t      try {\n\t        local = Function('return this')();\n\t      } catch (e) {\n\t        throw new Error('polyfill failed because global object is unavailable in this environment');\n\t      }\n\t    }\n\t\n\t    var P = local.Promise;\n\t\n\t    if (P) {\n\t      var promiseToString = null;\n\t      try {\n\t        promiseToString = Object.prototype.toString.call(P.resolve());\n\t      } catch (e) {\n\t        // silently ignored\n\t      }\n\t\n\t      if (promiseToString === '[object Promise]' && !P.cast) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    local.Promise = Promise$1;\n\t  }\n\t\n\t  // Strange compat..\n\t  Promise$1.polyfill = polyfill;\n\t  Promise$1.Promise = Promise$1;\n\t\n\t  return Promise$1;\n\t});\n\t\n\t//# sourceMappingURL=es6-promise.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), (function() { return this; }())))\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout() {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t})();\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch (e) {\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch (e) {\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e) {\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e) {\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while (len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) {\n\t    return [];\n\t};\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () {\n\t    return '/';\n\t};\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function () {\n\t    return 0;\n\t};\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar require;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t * @overview RSVP - a tiny implementation of Promises/A+.\n\t * @copyright Copyright (c) 2016 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n\t * @license   Licensed under MIT license\n\t *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n\t * @version   3.6.2\n\t */\n\t\n\t(function (global, factory) {\n\t  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(global.RSVP = global.RSVP || {});\n\t})(undefined, function (exports) {\n\t  'use strict';\n\t\n\t  function indexOf(callbacks, callback) {\n\t    for (var i = 0, l = callbacks.length; i < l; i++) {\n\t      if (callbacks[i] === callback) {\n\t        return i;\n\t      }\n\t    }\n\t\n\t    return -1;\n\t  }\n\t\n\t  function callbacksFor(object) {\n\t    var callbacks = object._promiseCallbacks;\n\t\n\t    if (!callbacks) {\n\t      callbacks = object._promiseCallbacks = {};\n\t    }\n\t\n\t    return callbacks;\n\t  }\n\t\n\t  /**\n\t    @class RSVP.EventTarget\n\t  */\n\t  var EventTarget = {\n\t\n\t    /**\n\t      `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n\t      Example:\n\t       ```javascript\n\t      let object = {};\n\t       RSVP.EventTarget.mixin(object);\n\t       object.on('finished', function(event) {\n\t        // handle event\n\t      });\n\t       object.trigger('finished', { detail: value });\n\t      ```\n\t       `EventTarget.mixin` also works with prototypes:\n\t       ```javascript\n\t      let Person = function() {};\n\t      RSVP.EventTarget.mixin(Person.prototype);\n\t       let yehuda = new Person();\n\t      let tom = new Person();\n\t       yehuda.on('poke', function(event) {\n\t       });\n\t       tom.on('poke', function(event) {\n\t       });\n\t       yehuda.trigger('poke');\n\t      tom.trigger('poke');\n\t      ```\n\t       @method mixin\n\t      @for RSVP.EventTarget\n\t      @private\n\t      @param {Object} object object to extend with EventTarget methods\n\t    */\n\t    mixin: function mixin(object) {\n\t      object['on'] = this['on'];\n\t      object['off'] = this['off'];\n\t      object['trigger'] = this['trigger'];\n\t      object._promiseCallbacks = undefined;\n\t      return object;\n\t    },\n\t\n\t    /**\n\t      Registers a callback to be executed when `eventName` is triggered\n\t       ```javascript\n\t      object.on('event', function(eventInfo){\n\t        // handle the event\n\t      });\n\t       object.trigger('event');\n\t      ```\n\t       @method on\n\t      @for RSVP.EventTarget\n\t      @private\n\t      @param {String} eventName name of the event to listen for\n\t      @param {Function} callback function to be called when the event is triggered.\n\t    */\n\t    on: function on(eventName, callback) {\n\t      if (typeof callback !== 'function') {\n\t        throw new TypeError('Callback must be a function');\n\t      }\n\t\n\t      var allCallbacks = callbacksFor(this),\n\t          callbacks = void 0;\n\t\n\t      callbacks = allCallbacks[eventName];\n\t\n\t      if (!callbacks) {\n\t        callbacks = allCallbacks[eventName] = [];\n\t      }\n\t\n\t      if (indexOf(callbacks, callback) === -1) {\n\t        callbacks.push(callback);\n\t      }\n\t    },\n\t\n\t    /**\n\t      You can use `off` to stop firing a particular callback for an event:\n\t       ```javascript\n\t      function doStuff() { // do stuff! }\n\t      object.on('stuff', doStuff);\n\t       object.trigger('stuff'); // doStuff will be called\n\t       // Unregister ONLY the doStuff callback\n\t      object.off('stuff', doStuff);\n\t      object.trigger('stuff'); // doStuff will NOT be called\n\t      ```\n\t       If you don't pass a `callback` argument to `off`, ALL callbacks for the\n\t      event will not be executed when the event fires. For example:\n\t       ```javascript\n\t      let callback1 = function(){};\n\t      let callback2 = function(){};\n\t       object.on('stuff', callback1);\n\t      object.on('stuff', callback2);\n\t       object.trigger('stuff'); // callback1 and callback2 will be executed.\n\t       object.off('stuff');\n\t      object.trigger('stuff'); // callback1 and callback2 will not be executed!\n\t      ```\n\t       @method off\n\t      @for RSVP.EventTarget\n\t      @private\n\t      @param {String} eventName event to stop listening to\n\t      @param {Function} callback optional argument. If given, only the function\n\t      given will be removed from the event's callback queue. If no `callback`\n\t      argument is given, all callbacks will be removed from the event's callback\n\t      queue.\n\t    */\n\t    off: function off(eventName, callback) {\n\t      var allCallbacks = callbacksFor(this),\n\t          callbacks = void 0,\n\t          index = void 0;\n\t\n\t      if (!callback) {\n\t        allCallbacks[eventName] = [];\n\t        return;\n\t      }\n\t\n\t      callbacks = allCallbacks[eventName];\n\t\n\t      index = indexOf(callbacks, callback);\n\t\n\t      if (index !== -1) {\n\t        callbacks.splice(index, 1);\n\t      }\n\t    },\n\t\n\t    /**\n\t      Use `trigger` to fire custom events. For example:\n\t       ```javascript\n\t      object.on('foo', function(){\n\t       });\n\t      object.trigger('foo');\n\t      // 'foo event happened!' logged to the console\n\t      ```\n\t       You can also pass a value as a second argument to `trigger` that will be\n\t      passed as an argument to all event listeners for the event:\n\t       ```javascript\n\t      object.on('foo', function(value){\n\t       });\n\t       object.trigger('foo', { name: 'bar' });\n\t      // 'bar' logged to the console\n\t      ```\n\t       @method trigger\n\t      @for RSVP.EventTarget\n\t      @private\n\t      @param {String} eventName name of the event to be triggered\n\t      @param {*} options optional value to be passed to any event handlers for\n\t      the given `eventName`\n\t    */\n\t    trigger: function trigger(eventName, options, label) {\n\t      var allCallbacks = callbacksFor(this),\n\t          callbacks = void 0,\n\t          callback = void 0;\n\t\n\t      if (callbacks = allCallbacks[eventName]) {\n\t        // Don't cache the callbacks.length since it may grow\n\t        for (var i = 0; i < callbacks.length; i++) {\n\t          callback = callbacks[i];\n\t\n\t          callback(options, label);\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  var config = {\n\t    instrument: false\n\t  };\n\t\n\t  EventTarget['mixin'](config);\n\t\n\t  function configure(name, value) {\n\t    if (arguments.length === 2) {\n\t      config[name] = value;\n\t    } else {\n\t      return config[name];\n\t    }\n\t  }\n\t\n\t  function objectOrFunction(x) {\n\t    var type = typeof x === 'undefined' ? 'undefined' : _typeof(x);\n\t    return x !== null && (type === 'object' || type === 'function');\n\t  }\n\t\n\t  function isFunction(x) {\n\t    return typeof x === 'function';\n\t  }\n\t\n\t  function isObject(x) {\n\t    return x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object';\n\t  }\n\t\n\t  function isMaybeThenable(x) {\n\t    return x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object';\n\t  }\n\t\n\t  var _isArray = void 0;\n\t  if (Array.isArray) {\n\t    _isArray = Array.isArray;\n\t  } else {\n\t    _isArray = function _isArray(x) {\n\t      return Object.prototype.toString.call(x) === '[object Array]';\n\t    };\n\t  }\n\t\n\t  var isArray = _isArray;\n\t\n\t  // Date.now is not available in browsers < IE9\n\t  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\n\t  var now = Date.now || function () {\n\t    return new Date().getTime();\n\t  };\n\t\n\t  var queue = [];\n\t\n\t  function scheduleFlush() {\n\t    setTimeout(function () {\n\t      for (var i = 0; i < queue.length; i++) {\n\t        var entry = queue[i];\n\t\n\t        var payload = entry.payload;\n\t\n\t        payload.guid = payload.key + payload.id;\n\t        payload.childGuid = payload.key + payload.childId;\n\t        if (payload.error) {\n\t          payload.stack = payload.error.stack;\n\t        }\n\t\n\t        config['trigger'](entry.name, entry.payload);\n\t      }\n\t      queue.length = 0;\n\t    }, 50);\n\t  }\n\t\n\t  function instrument(eventName, promise, child) {\n\t    if (1 === queue.push({\n\t      name: eventName,\n\t      payload: {\n\t        key: promise._guidKey,\n\t        id: promise._id,\n\t        eventName: eventName,\n\t        detail: promise._result,\n\t        childId: child && child._id,\n\t        label: promise._label,\n\t        timeStamp: now(),\n\t        error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n\t      } })) {\n\t      scheduleFlush();\n\t    }\n\t  }\n\t\n\t  /**\n\t    `RSVP.Promise.resolve` returns a promise that will become resolved with the\n\t    passed `value`. It is shorthand for the following:\n\t  \n\t    ```javascript\n\t    let promise = new RSVP.Promise(function(resolve, reject){\n\t      resolve(1);\n\t    });\n\t  \n\t    promise.then(function(value){\n\t      // value === 1\n\t    });\n\t    ```\n\t  \n\t    Instead of writing the above, your code now simply becomes the following:\n\t  \n\t    ```javascript\n\t    let promise = RSVP.Promise.resolve(1);\n\t  \n\t    promise.then(function(value){\n\t      // value === 1\n\t    });\n\t    ```\n\t  \n\t    @method resolve\n\t    @static\n\t    @param {*} object value that the returned promise will be resolved with\n\t    @param {String} label optional string for identifying the returned promise.\n\t    Useful for tooling.\n\t    @return {Promise} a promise that will become fulfilled with the given\n\t    `value`\n\t  */\n\t  function resolve$1(object, label) {\n\t    /*jshint validthis:true */\n\t    var Constructor = this;\n\t\n\t    if (object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.constructor === Constructor) {\n\t      return object;\n\t    }\n\t\n\t    var promise = new Constructor(noop, label);\n\t    resolve(promise, object);\n\t    return promise;\n\t  }\n\t\n\t  function withOwnPromise() {\n\t    return new TypeError('A promises callback cannot return that same promise.');\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  var PENDING = void 0;\n\t  var FULFILLED = 1;\n\t  var REJECTED = 2;\n\t\n\t  var GET_THEN_ERROR = new ErrorObject();\n\t\n\t  function getThen(promise) {\n\t    try {\n\t      return promise.then;\n\t    } catch (error) {\n\t      GET_THEN_ERROR.error = error;\n\t      return GET_THEN_ERROR;\n\t    }\n\t  }\n\t\n\t  function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n\t    try {\n\t      then$$1.call(value, fulfillmentHandler, rejectionHandler);\n\t    } catch (e) {\n\t      return e;\n\t    }\n\t  }\n\t\n\t  function handleForeignThenable(promise, thenable, then$$1) {\n\t    config.async(function (promise) {\n\t      var sealed = false;\n\t      var error = tryThen(then$$1, thenable, function (value) {\n\t        if (sealed) {\n\t          return;\n\t        }\n\t        sealed = true;\n\t        if (thenable !== value) {\n\t          resolve(promise, value, undefined);\n\t        } else {\n\t          fulfill(promise, value);\n\t        }\n\t      }, function (reason) {\n\t        if (sealed) {\n\t          return;\n\t        }\n\t        sealed = true;\n\t\n\t        reject(promise, reason);\n\t      }, 'Settle: ' + (promise._label || ' unknown promise'));\n\t\n\t      if (!sealed && error) {\n\t        sealed = true;\n\t        reject(promise, error);\n\t      }\n\t    }, promise);\n\t  }\n\t\n\t  function handleOwnThenable(promise, thenable) {\n\t    if (thenable._state === FULFILLED) {\n\t      fulfill(promise, thenable._result);\n\t    } else if (thenable._state === REJECTED) {\n\t      thenable._onError = null;\n\t      reject(promise, thenable._result);\n\t    } else {\n\t      subscribe(thenable, undefined, function (value) {\n\t        if (thenable !== value) {\n\t          resolve(promise, value, undefined);\n\t        } else {\n\t          fulfill(promise, value);\n\t        }\n\t      }, function (reason) {\n\t        return reject(promise, reason);\n\t      });\n\t    }\n\t  }\n\t\n\t  function handleMaybeThenable(promise, maybeThenable, then$$1) {\n\t    var isOwnThenable = maybeThenable.constructor === promise.constructor && then$$1 === then && promise.constructor.resolve === resolve$1;\n\t\n\t    if (isOwnThenable) {\n\t      handleOwnThenable(promise, maybeThenable);\n\t    } else if (then$$1 === GET_THEN_ERROR) {\n\t      reject(promise, GET_THEN_ERROR.error);\n\t      GET_THEN_ERROR.error = null;\n\t    } else if (isFunction(then$$1)) {\n\t      handleForeignThenable(promise, maybeThenable, then$$1);\n\t    } else {\n\t      fulfill(promise, maybeThenable);\n\t    }\n\t  }\n\t\n\t  function resolve(promise, value) {\n\t    if (promise === value) {\n\t      fulfill(promise, value);\n\t    } else if (objectOrFunction(value)) {\n\t      handleMaybeThenable(promise, value, getThen(value));\n\t    } else {\n\t      fulfill(promise, value);\n\t    }\n\t  }\n\t\n\t  function publishRejection(promise) {\n\t    if (promise._onError) {\n\t      promise._onError(promise._result);\n\t    }\n\t\n\t    publish(promise);\n\t  }\n\t\n\t  function fulfill(promise, value) {\n\t    if (promise._state !== PENDING) {\n\t      return;\n\t    }\n\t\n\t    promise._result = value;\n\t    promise._state = FULFILLED;\n\t\n\t    if (promise._subscribers.length === 0) {\n\t      if (config.instrument) {\n\t        instrument('fulfilled', promise);\n\t      }\n\t    } else {\n\t      config.async(publish, promise);\n\t    }\n\t  }\n\t\n\t  function reject(promise, reason) {\n\t    if (promise._state !== PENDING) {\n\t      return;\n\t    }\n\t    promise._state = REJECTED;\n\t    promise._result = reason;\n\t    config.async(publishRejection, promise);\n\t  }\n\t\n\t  function subscribe(parent, child, onFulfillment, onRejection) {\n\t    var subscribers = parent._subscribers;\n\t    var length = subscribers.length;\n\t\n\t    parent._onError = null;\n\t\n\t    subscribers[length] = child;\n\t    subscribers[length + FULFILLED] = onFulfillment;\n\t    subscribers[length + REJECTED] = onRejection;\n\t\n\t    if (length === 0 && parent._state) {\n\t      config.async(publish, parent);\n\t    }\n\t  }\n\t\n\t  function publish(promise) {\n\t    var subscribers = promise._subscribers;\n\t    var settled = promise._state;\n\t\n\t    if (config.instrument) {\n\t      instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);\n\t    }\n\t\n\t    if (subscribers.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var child = void 0,\n\t        callback = void 0,\n\t        result = promise._result;\n\t\n\t    for (var i = 0; i < subscribers.length; i += 3) {\n\t      child = subscribers[i];\n\t      callback = subscribers[i + settled];\n\t\n\t      if (child) {\n\t        invokeCallback(settled, child, callback, result);\n\t      } else {\n\t        callback(result);\n\t      }\n\t    }\n\t\n\t    promise._subscribers.length = 0;\n\t  }\n\t\n\t  function ErrorObject() {\n\t    this.error = null;\n\t  }\n\t\n\t  var TRY_CATCH_ERROR = new ErrorObject();\n\t\n\t  function tryCatch(callback, result) {\n\t    try {\n\t      return callback(result);\n\t    } catch (e) {\n\t      TRY_CATCH_ERROR.error = e;\n\t      return TRY_CATCH_ERROR;\n\t    }\n\t  }\n\t\n\t  function invokeCallback(state, promise, callback, result) {\n\t    var hasCallback = isFunction(callback);\n\t    var value = void 0,\n\t        error = void 0;\n\t\n\t    if (hasCallback) {\n\t      value = tryCatch(callback, result);\n\t\n\t      if (value === TRY_CATCH_ERROR) {\n\t        error = value.error;\n\t        value.error = null; // release\n\t      } else if (value === promise) {\n\t        reject(promise, withOwnPromise());\n\t        return;\n\t      }\n\t    } else {\n\t      value = result;\n\t    }\n\t\n\t    if (promise._state !== PENDING) {\n\t      // noop\n\t    } else if (hasCallback && error === undefined) {\n\t      resolve(promise, value);\n\t    } else if (error !== undefined) {\n\t      reject(promise, error);\n\t    } else if (state === FULFILLED) {\n\t      fulfill(promise, value);\n\t    } else if (state === REJECTED) {\n\t      reject(promise, value);\n\t    }\n\t  }\n\t\n\t  function initializePromise(promise, resolver) {\n\t    var resolved = false;\n\t    try {\n\t      resolver(function (value) {\n\t        if (resolved) {\n\t          return;\n\t        }\n\t        resolved = true;\n\t        resolve(promise, value);\n\t      }, function (reason) {\n\t        if (resolved) {\n\t          return;\n\t        }\n\t        resolved = true;\n\t        reject(promise, reason);\n\t      });\n\t    } catch (e) {\n\t      reject(promise, e);\n\t    }\n\t  }\n\t\n\t  function then(onFulfillment, onRejection, label) {\n\t    var parent = this;\n\t    var state = parent._state;\n\t\n\t    if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {\n\t      config.instrument && instrument('chained', parent, parent);\n\t      return parent;\n\t    }\n\t\n\t    parent._onError = null;\n\t\n\t    var child = new parent.constructor(noop, label);\n\t    var result = parent._result;\n\t\n\t    config.instrument && instrument('chained', parent, child);\n\t\n\t    if (state === PENDING) {\n\t      subscribe(parent, child, onFulfillment, onRejection);\n\t    } else {\n\t      var callback = state === FULFILLED ? onFulfillment : onRejection;\n\t      config.async(function () {\n\t        return invokeCallback(state, child, callback, result);\n\t      });\n\t    }\n\t\n\t    return child;\n\t  }\n\t\n\t  var Enumerator = function () {\n\t    function Enumerator(Constructor, input, abortOnReject, label) {\n\t      this._instanceConstructor = Constructor;\n\t      this.promise = new Constructor(noop, label);\n\t      this._abortOnReject = abortOnReject;\n\t\n\t      this._init.apply(this, arguments);\n\t    }\n\t\n\t    Enumerator.prototype._init = function _init(Constructor, input) {\n\t      var len = input.length || 0;\n\t      this.length = len;\n\t      this._remaining = len;\n\t      this._result = new Array(len);\n\t\n\t      this._enumerate(input);\n\t      if (this._remaining === 0) {\n\t        fulfill(this.promise, this._result);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._enumerate = function _enumerate(input) {\n\t      var length = this.length;\n\t      var promise = this.promise;\n\t\n\t      for (var i = 0; promise._state === PENDING && i < length; i++) {\n\t        this._eachEntry(input[i], i);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._settleMaybeThenable = function _settleMaybeThenable(entry, i) {\n\t      var c = this._instanceConstructor;\n\t      var resolve$$1 = c.resolve;\n\t\n\t      if (resolve$$1 === resolve$1) {\n\t        var then$$1 = getThen(entry);\n\t\n\t        if (then$$1 === then && entry._state !== PENDING) {\n\t          entry._onError = null;\n\t          this._settledAt(entry._state, i, entry._result);\n\t        } else if (typeof then$$1 !== 'function') {\n\t          this._remaining--;\n\t          this._result[i] = this._makeResult(FULFILLED, i, entry);\n\t        } else if (c === Promise) {\n\t          var promise = new c(noop);\n\t          handleMaybeThenable(promise, entry, then$$1);\n\t          this._willSettleAt(promise, i);\n\t        } else {\n\t          this._willSettleAt(new c(function (resolve$$1) {\n\t            return resolve$$1(entry);\n\t          }), i);\n\t        }\n\t      } else {\n\t        this._willSettleAt(resolve$$1(entry), i);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n\t      if (isMaybeThenable(entry)) {\n\t        this._settleMaybeThenable(entry, i);\n\t      } else {\n\t        this._remaining--;\n\t        this._result[i] = this._makeResult(FULFILLED, i, entry);\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n\t      var promise = this.promise;\n\t\n\t      if (promise._state === PENDING) {\n\t        if (this._abortOnReject && state === REJECTED) {\n\t          reject(promise, value);\n\t        } else {\n\t          this._remaining--;\n\t          this._result[i] = this._makeResult(state, i, value);\n\t          if (this._remaining === 0) {\n\t            fulfill(promise, this._result);\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    Enumerator.prototype._makeResult = function _makeResult(state, i, value) {\n\t      return value;\n\t    };\n\t\n\t    Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n\t      var enumerator = this;\n\t\n\t      subscribe(promise, undefined, function (value) {\n\t        return enumerator._settledAt(FULFILLED, i, value);\n\t      }, function (reason) {\n\t        return enumerator._settledAt(REJECTED, i, reason);\n\t      });\n\t    };\n\t\n\t    return Enumerator;\n\t  }();\n\t\n\t  function makeSettledResult(state, position, value) {\n\t    if (state === FULFILLED) {\n\t      return {\n\t        state: 'fulfilled',\n\t        value: value\n\t      };\n\t    } else {\n\t      return {\n\t        state: 'rejected',\n\t        reason: value\n\t      };\n\t    }\n\t  }\n\t\n\t  /**\n\t    `RSVP.Promise.all` accepts an array of promises, and returns a new promise which\n\t    is fulfilled with an array of fulfillment values for the passed promises, or\n\t    rejected with the reason of the first passed promise to be rejected. It casts all\n\t    elements of the passed iterable to promises as it runs this algorithm.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promise1 = RSVP.resolve(1);\n\t    let promise2 = RSVP.resolve(2);\n\t    let promise3 = RSVP.resolve(3);\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    RSVP.Promise.all(promises).then(function(array){\n\t      // The array here would be [ 1, 2, 3 ];\n\t    });\n\t    ```\n\t  \n\t    If any of the `promises` given to `RSVP.all` are rejected, the first promise\n\t    that is rejected will be given as an argument to the returned promises's\n\t    rejection handler. For example:\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promise1 = RSVP.resolve(1);\n\t    let promise2 = RSVP.reject(new Error(\"2\"));\n\t    let promise3 = RSVP.reject(new Error(\"3\"));\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    RSVP.Promise.all(promises).then(function(array){\n\t      // Code here never runs because there are rejected promises!\n\t    }, function(error) {\n\t      // error.message === \"2\"\n\t    });\n\t    ```\n\t  \n\t    @method all\n\t    @static\n\t    @param {Array} entries array of promises\n\t    @param {String} label optional string for labeling the promise.\n\t    Useful for tooling.\n\t    @return {Promise} promise that is fulfilled when all `promises` have been\n\t    fulfilled, or rejected if any of them become rejected.\n\t    @static\n\t  */\n\t  function all(entries, label) {\n\t    if (!isArray(entries)) {\n\t      return this.reject(new TypeError(\"Promise.all must be called with an array\"), label);\n\t    }\n\t    return new Enumerator(this, entries, true /* abort on reject */, label).promise;\n\t  }\n\t\n\t  /**\n\t    `RSVP.Promise.race` returns a new promise which is settled in the same way as the\n\t    first passed promise to settle.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promise1 = new RSVP.Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        resolve('promise 1');\n\t      }, 200);\n\t    });\n\t  \n\t    let promise2 = new RSVP.Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        resolve('promise 2');\n\t      }, 100);\n\t    });\n\t  \n\t    RSVP.Promise.race([promise1, promise2]).then(function(result){\n\t      // result === 'promise 2' because it was resolved before promise1\n\t      // was resolved.\n\t    });\n\t    ```\n\t  \n\t    `RSVP.Promise.race` is deterministic in that only the state of the first\n\t    settled promise matters. For example, even if other promises given to the\n\t    `promises` array argument are resolved, but the first settled promise has\n\t    become rejected before the other promises became fulfilled, the returned\n\t    promise will become rejected:\n\t  \n\t    ```javascript\n\t    let promise1 = new RSVP.Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        resolve('promise 1');\n\t      }, 200);\n\t    });\n\t  \n\t    let promise2 = new RSVP.Promise(function(resolve, reject){\n\t      setTimeout(function(){\n\t        reject(new Error('promise 2'));\n\t      }, 100);\n\t    });\n\t  \n\t    RSVP.Promise.race([promise1, promise2]).then(function(result){\n\t      // Code here never runs\n\t    }, function(reason){\n\t      // reason.message === 'promise 2' because promise 2 became rejected before\n\t      // promise 1 became fulfilled\n\t    });\n\t    ```\n\t  \n\t    An example real-world use case is implementing timeouts:\n\t  \n\t    ```javascript\n\t    RSVP.Promise.race([ajax('foo.json'), timeout(5000)])\n\t    ```\n\t  \n\t    @method race\n\t    @static\n\t    @param {Array} entries array of promises to observe\n\t    @param {String} label optional string for describing the promise returned.\n\t    Useful for tooling.\n\t    @return {Promise} a promise which settles in the same way as the first passed\n\t    promise to settle.\n\t  */\n\t  function race(entries, label) {\n\t    /*jshint validthis:true */\n\t    var Constructor = this;\n\t\n\t    var promise = new Constructor(noop, label);\n\t\n\t    if (!isArray(entries)) {\n\t      reject(promise, new TypeError('Promise.race must be called with an array'));\n\t      return promise;\n\t    }\n\t\n\t    for (var i = 0; promise._state === PENDING && i < entries.length; i++) {\n\t      subscribe(Constructor.resolve(entries[i]), undefined, function (value) {\n\t        return resolve(promise, value);\n\t      }, function (reason) {\n\t        return reject(promise, reason);\n\t      });\n\t    }\n\t\n\t    return promise;\n\t  }\n\t\n\t  /**\n\t    `RSVP.Promise.reject` returns a promise rejected with the passed `reason`.\n\t    It is shorthand for the following:\n\t  \n\t    ```javascript\n\t    let promise = new RSVP.Promise(function(resolve, reject){\n\t      reject(new Error('WHOOPS'));\n\t    });\n\t  \n\t    promise.then(function(value){\n\t      // Code here doesn't run because the promise is rejected!\n\t    }, function(reason){\n\t      // reason.message === 'WHOOPS'\n\t    });\n\t    ```\n\t  \n\t    Instead of writing the above, your code now simply becomes the following:\n\t  \n\t    ```javascript\n\t    let promise = RSVP.Promise.reject(new Error('WHOOPS'));\n\t  \n\t    promise.then(function(value){\n\t      // Code here doesn't run because the promise is rejected!\n\t    }, function(reason){\n\t      // reason.message === 'WHOOPS'\n\t    });\n\t    ```\n\t  \n\t    @method reject\n\t    @static\n\t    @param {*} reason value that the returned promise will be rejected with.\n\t    @param {String} label optional string for identifying the returned promise.\n\t    Useful for tooling.\n\t    @return {Promise} a promise rejected with the given `reason`.\n\t  */\n\t  function reject$1(reason, label) {\n\t    /*jshint validthis:true */\n\t    var Constructor = this;\n\t    var promise = new Constructor(noop, label);\n\t    reject(promise, reason);\n\t    return promise;\n\t  }\n\t\n\t  var guidKey = 'rsvp_' + now() + '-';\n\t  var counter = 0;\n\t\n\t  function needsResolver() {\n\t    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t  }\n\t\n\t  function needsNew() {\n\t    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t  }\n\t\n\t  /**\n\t    Promise objects represent the eventual result of an asynchronous operation. The\n\t    primary way of interacting with a promise is through its `then` method, which\n\t    registers callbacks to receive either a promise’s eventual value or the reason\n\t    why the promise cannot be fulfilled.\n\t  \n\t    Terminology\n\t    -----------\n\t  \n\t    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n\t    - `thenable` is an object or function that defines a `then` method.\n\t    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n\t    - `exception` is a value that is thrown using the throw statement.\n\t    - `reason` is a value that indicates why a promise was rejected.\n\t    - `settled` the final resting state of a promise, fulfilled or rejected.\n\t  \n\t    A promise can be in one of three states: pending, fulfilled, or rejected.\n\t  \n\t    Promises that are fulfilled have a fulfillment value and are in the fulfilled\n\t    state.  Promises that are rejected have a rejection reason and are in the\n\t    rejected state.  A fulfillment value is never a thenable.\n\t  \n\t    Promises can also be said to *resolve* a value.  If this value is also a\n\t    promise, then the original promise's settled state will match the value's\n\t    settled state.  So a promise that *resolves* a promise that rejects will\n\t    itself reject, and a promise that *resolves* a promise that fulfills will\n\t    itself fulfill.\n\t  \n\t  \n\t    Basic Usage:\n\t    ------------\n\t  \n\t    ```js\n\t    let promise = new Promise(function(resolve, reject) {\n\t      // on success\n\t      resolve(value);\n\t  \n\t      // on failure\n\t      reject(reason);\n\t    });\n\t  \n\t    promise.then(function(value) {\n\t      // on fulfillment\n\t    }, function(reason) {\n\t      // on rejection\n\t    });\n\t    ```\n\t  \n\t    Advanced Usage:\n\t    ---------------\n\t  \n\t    Promises shine when abstracting away asynchronous interactions such as\n\t    `XMLHttpRequest`s.\n\t  \n\t    ```js\n\t    function getJSON(url) {\n\t      return new Promise(function(resolve, reject){\n\t        let xhr = new XMLHttpRequest();\n\t  \n\t        xhr.open('GET', url);\n\t        xhr.onreadystatechange = handler;\n\t        xhr.responseType = 'json';\n\t        xhr.setRequestHeader('Accept', 'application/json');\n\t        xhr.send();\n\t  \n\t        function handler() {\n\t          if (this.readyState === this.DONE) {\n\t            if (this.status === 200) {\n\t              resolve(this.response);\n\t            } else {\n\t              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n\t            }\n\t          }\n\t        };\n\t      });\n\t    }\n\t  \n\t    getJSON('/posts.json').then(function(json) {\n\t      // on fulfillment\n\t    }, function(reason) {\n\t      // on rejection\n\t    });\n\t    ```\n\t  \n\t    Unlike callbacks, promises are great composable primitives.\n\t  \n\t    ```js\n\t    Promise.all([\n\t      getJSON('/posts'),\n\t      getJSON('/comments')\n\t    ]).then(function(values){\n\t      values[0] // => postsJSON\n\t      values[1] // => commentsJSON\n\t  \n\t      return values;\n\t    });\n\t    ```\n\t  \n\t    @class RSVP.Promise\n\t    @param {function} resolver\n\t    @param {String} label optional string for labeling the promise.\n\t    Useful for tooling.\n\t    @constructor\n\t  */\n\t\n\t  var Promise = function () {\n\t    function Promise(resolver, label) {\n\t      this._id = counter++;\n\t      this._label = label;\n\t      this._state = undefined;\n\t      this._result = undefined;\n\t      this._subscribers = [];\n\t\n\t      config.instrument && instrument('created', this);\n\t\n\t      if (noop !== resolver) {\n\t        typeof resolver !== 'function' && needsResolver();\n\t        this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n\t      }\n\t    }\n\t\n\t    Promise.prototype._onError = function _onError(reason) {\n\t      var _this = this;\n\t\n\t      config.after(function () {\n\t        if (_this._onError) {\n\t          config.trigger('error', reason, _this._label);\n\t        }\n\t      });\n\t    };\n\t\n\t    /**\n\t      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n\t      as the catch block of a try/catch statement.\n\t    \n\t      ```js\n\t      function findAuthor(){\n\t        throw new Error('couldn\\'t find that author');\n\t      }\n\t    \n\t      // synchronous\n\t      try {\n\t        findAuthor();\n\t      } catch(reason) {\n\t        // something went wrong\n\t      }\n\t    \n\t      // async with promises\n\t      findAuthor().catch(function(reason){\n\t        // something went wrong\n\t      });\n\t      ```\n\t    \n\t      @method catch\n\t      @param {Function} onRejection\n\t      @param {String} label optional string for labeling the promise.\n\t      Useful for tooling.\n\t      @return {Promise}\n\t    */\n\t\n\t    Promise.prototype.catch = function _catch(onRejection, label) {\n\t      return this.then(undefined, onRejection, label);\n\t    };\n\t\n\t    /**\n\t      `finally` will be invoked regardless of the promise's fate just as native\n\t      try/catch/finally behaves\n\t    \n\t      Synchronous example:\n\t    \n\t      ```js\n\t      findAuthor() {\n\t        if (Math.random() > 0.5) {\n\t          throw new Error();\n\t        }\n\t        return new Author();\n\t      }\n\t    \n\t      try {\n\t        return findAuthor(); // succeed or fail\n\t      } catch(error) {\n\t        return findOtherAuthor();\n\t      } finally {\n\t        // always runs\n\t        // doesn't affect the return value\n\t      }\n\t      ```\n\t    \n\t      Asynchronous example:\n\t    \n\t      ```js\n\t      findAuthor().catch(function(reason){\n\t        return findOtherAuthor();\n\t      }).finally(function(){\n\t        // author was either found, or not\n\t      });\n\t      ```\n\t    \n\t      @method finally\n\t      @param {Function} callback\n\t      @param {String} label optional string for labeling the promise.\n\t      Useful for tooling.\n\t      @return {Promise}\n\t    */\n\t\n\t    Promise.prototype.finally = function _finally(callback, label) {\n\t      var promise = this;\n\t      var constructor = promise.constructor;\n\t\n\t      return promise.then(function (value) {\n\t        return constructor.resolve(callback()).then(function () {\n\t          return value;\n\t        });\n\t      }, function (reason) {\n\t        return constructor.resolve(callback()).then(function () {\n\t          throw reason;\n\t        });\n\t      }, label);\n\t    };\n\t\n\t    return Promise;\n\t  }();\n\t\n\t  Promise.cast = resolve$1; // deprecated\n\t  Promise.all = all;\n\t  Promise.race = race;\n\t  Promise.resolve = resolve$1;\n\t  Promise.reject = reject$1;\n\t\n\t  Promise.prototype._guidKey = guidKey;\n\t\n\t  /**\n\t    The primary way of interacting with a promise is through its `then` method,\n\t    which registers callbacks to receive either a promise's eventual value or the\n\t    reason why the promise cannot be fulfilled.\n\t  \n\t    ```js\n\t    findUser().then(function(user){\n\t      // user is available\n\t    }, function(reason){\n\t      // user is unavailable, and you are given the reason why\n\t    });\n\t    ```\n\t  \n\t    Chaining\n\t    --------\n\t  \n\t    The return value of `then` is itself a promise.  This second, 'downstream'\n\t    promise is resolved with the return value of the first promise's fulfillment\n\t    or rejection handler, or rejected if the handler throws an exception.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      return user.name;\n\t    }, function (reason) {\n\t      return 'default name';\n\t    }).then(function (userName) {\n\t      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n\t      // will be `'default name'`\n\t    });\n\t  \n\t    findUser().then(function (user) {\n\t      throw new Error('Found user, but still unhappy');\n\t    }, function (reason) {\n\t      throw new Error('`findUser` rejected and we\\'re unhappy');\n\t    }).then(function (value) {\n\t      // never reached\n\t    }, function (reason) {\n\t      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n\t      // If `findUser` rejected, `reason` will be '`findUser` rejected and we\\'re unhappy'.\n\t    });\n\t    ```\n\t    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      throw new PedagogicalException('Upstream error');\n\t    }).then(function (value) {\n\t      // never reached\n\t    }).then(function (value) {\n\t      // never reached\n\t    }, function (reason) {\n\t      // The `PedgagocialException` is propagated all the way down to here\n\t    });\n\t    ```\n\t  \n\t    Assimilation\n\t    ------------\n\t  \n\t    Sometimes the value you want to propagate to a downstream promise can only be\n\t    retrieved asynchronously. This can be achieved by returning a promise in the\n\t    fulfillment or rejection handler. The downstream promise will then be pending\n\t    until the returned promise is settled. This is called *assimilation*.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      return findCommentsByAuthor(user);\n\t    }).then(function (comments) {\n\t      // The user's comments are now available\n\t    });\n\t    ```\n\t  \n\t    If the assimliated promise rejects, then the downstream promise will also reject.\n\t  \n\t    ```js\n\t    findUser().then(function (user) {\n\t      return findCommentsByAuthor(user);\n\t    }).then(function (comments) {\n\t      // If `findCommentsByAuthor` fulfills, we'll have the value here\n\t    }, function (reason) {\n\t      // If `findCommentsByAuthor` rejects, we'll have the reason here\n\t    });\n\t    ```\n\t  \n\t    Simple Example\n\t    --------------\n\t  \n\t    Synchronous Example\n\t  \n\t    ```javascript\n\t    let result;\n\t  \n\t    try {\n\t      result = findResult();\n\t      // success\n\t    } catch(reason) {\n\t      // failure\n\t    }\n\t    ```\n\t  \n\t    Errback Example\n\t  \n\t    ```js\n\t    findResult(function(result, err){\n\t      if (err) {\n\t        // failure\n\t      } else {\n\t        // success\n\t      }\n\t    });\n\t    ```\n\t  \n\t    Promise Example;\n\t  \n\t    ```javascript\n\t    findResult().then(function(result){\n\t      // success\n\t    }, function(reason){\n\t      // failure\n\t    });\n\t    ```\n\t  \n\t    Advanced Example\n\t    --------------\n\t  \n\t    Synchronous Example\n\t  \n\t    ```javascript\n\t    let author, books;\n\t  \n\t    try {\n\t      author = findAuthor();\n\t      books  = findBooksByAuthor(author);\n\t      // success\n\t    } catch(reason) {\n\t      // failure\n\t    }\n\t    ```\n\t  \n\t    Errback Example\n\t  \n\t    ```js\n\t  \n\t    function foundBooks(books) {\n\t  \n\t    }\n\t  \n\t    function failure(reason) {\n\t  \n\t    }\n\t  \n\t    findAuthor(function(author, err){\n\t      if (err) {\n\t        failure(err);\n\t        // failure\n\t      } else {\n\t        try {\n\t          findBoooksByAuthor(author, function(books, err) {\n\t            if (err) {\n\t              failure(err);\n\t            } else {\n\t              try {\n\t                foundBooks(books);\n\t              } catch(reason) {\n\t                failure(reason);\n\t              }\n\t            }\n\t          });\n\t        } catch(error) {\n\t          failure(err);\n\t        }\n\t        // success\n\t      }\n\t    });\n\t    ```\n\t  \n\t    Promise Example;\n\t  \n\t    ```javascript\n\t    findAuthor().\n\t      then(findBooksByAuthor).\n\t      then(function(books){\n\t        // found books\n\t    }).catch(function(reason){\n\t      // something went wrong\n\t    });\n\t    ```\n\t  \n\t    @method then\n\t    @param {Function} onFulfillment\n\t    @param {Function} onRejection\n\t    @param {String} label optional string for labeling the promise.\n\t    Useful for tooling.\n\t    @return {Promise}\n\t  */\n\t  Promise.prototype.then = then;\n\t\n\t  function Result() {\n\t    this.value = undefined;\n\t  }\n\t\n\t  var ERROR = new Result();\n\t  var GET_THEN_ERROR$1 = new Result();\n\t\n\t  function getThen$1(obj) {\n\t    try {\n\t      return obj.then;\n\t    } catch (error) {\n\t      ERROR.value = error;\n\t      return ERROR;\n\t    }\n\t  }\n\t\n\t  function tryApply(f, s, a) {\n\t    try {\n\t      f.apply(s, a);\n\t    } catch (error) {\n\t      ERROR.value = error;\n\t      return ERROR;\n\t    }\n\t  }\n\t\n\t  function makeObject(_, argumentNames) {\n\t    var obj = {};\n\t    var length = _.length;\n\t    var args = new Array(length);\n\t\n\t    for (var x = 0; x < length; x++) {\n\t      args[x] = _[x];\n\t    }\n\t\n\t    for (var i = 0; i < argumentNames.length; i++) {\n\t      var name = argumentNames[i];\n\t      obj[name] = args[i + 1];\n\t    }\n\t\n\t    return obj;\n\t  }\n\t\n\t  function arrayResult(_) {\n\t    var length = _.length;\n\t    var args = new Array(length - 1);\n\t\n\t    for (var i = 1; i < length; i++) {\n\t      args[i - 1] = _[i];\n\t    }\n\t\n\t    return args;\n\t  }\n\t\n\t  function wrapThenable(_then, promise) {\n\t    return {\n\t      then: function then(onFulFillment, onRejection) {\n\t        return _then.call(promise, onFulFillment, onRejection);\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t    `RSVP.denodeify` takes a 'node-style' function and returns a function that\n\t    will return an `RSVP.Promise`. You can use `denodeify` in Node.js or the\n\t    browser when you'd prefer to use promises over using callbacks. For example,\n\t    `denodeify` transforms the following:\n\t  \n\t    ```javascript\n\t    let fs = require('fs');\n\t  \n\t    fs.readFile('myfile.txt', function(err, data){\n\t      if (err) return handleError(err);\n\t      handleData(data);\n\t    });\n\t    ```\n\t  \n\t    into:\n\t  \n\t    ```javascript\n\t    let fs = require('fs');\n\t    let readFile = RSVP.denodeify(fs.readFile);\n\t  \n\t    readFile('myfile.txt').then(handleData, handleError);\n\t    ```\n\t  \n\t    If the node function has multiple success parameters, then `denodeify`\n\t    just returns the first one:\n\t  \n\t    ```javascript\n\t    let request = RSVP.denodeify(require('request'));\n\t  \n\t    request('http://example.com').then(function(res) {\n\t      // ...\n\t    });\n\t    ```\n\t  \n\t    However, if you need all success parameters, setting `denodeify`'s\n\t    second parameter to `true` causes it to return all success parameters\n\t    as an array:\n\t  \n\t    ```javascript\n\t    let request = RSVP.denodeify(require('request'), true);\n\t  \n\t    request('http://example.com').then(function(result) {\n\t      // result[0] -> res\n\t      // result[1] -> body\n\t    });\n\t    ```\n\t  \n\t    Or if you pass it an array with names it returns the parameters as a hash:\n\t  \n\t    ```javascript\n\t    let request = RSVP.denodeify(require('request'), ['res', 'body']);\n\t  \n\t    request('http://example.com').then(function(result) {\n\t      // result.res\n\t      // result.body\n\t    });\n\t    ```\n\t  \n\t    Sometimes you need to retain the `this`:\n\t  \n\t    ```javascript\n\t    let app = require('express')();\n\t    let render = RSVP.denodeify(app.render.bind(app));\n\t    ```\n\t  \n\t    The denodified function inherits from the original function. It works in all\n\t    environments, except IE 10 and below. Consequently all properties of the original\n\t    function are available to you. However, any properties you change on the\n\t    denodeified function won't be changed on the original function. Example:\n\t  \n\t    ```javascript\n\t    let request = RSVP.denodeify(require('request')),\n\t        cookieJar = request.jar(); // <- Inheritance is used here\n\t  \n\t    request('http://example.com', {jar: cookieJar}).then(function(res) {\n\t      // cookieJar.cookies holds now the cookies returned by example.com\n\t    });\n\t    ```\n\t  \n\t    Using `denodeify` makes it easier to compose asynchronous operations instead\n\t    of using callbacks. For example, instead of:\n\t  \n\t    ```javascript\n\t    let fs = require('fs');\n\t  \n\t    fs.readFile('myfile.txt', function(err, data){\n\t      if (err) { ... } // Handle error\n\t      fs.writeFile('myfile2.txt', data, function(err){\n\t        if (err) { ... } // Handle error\n\t      });\n\t    });\n\t    ```\n\t  \n\t    you can chain the operations together using `then` from the returned promise:\n\t  \n\t    ```javascript\n\t    let fs = require('fs');\n\t    let readFile = RSVP.denodeify(fs.readFile);\n\t    let writeFile = RSVP.denodeify(fs.writeFile);\n\t  \n\t    readFile('myfile.txt').then(function(data){\n\t      return writeFile('myfile2.txt', data);\n\t    }).then(function(){\n\t    }).catch(function(error){\n\t      // Handle error\n\t    });\n\t    ```\n\t  \n\t    @method denodeify\n\t    @static\n\t    @for RSVP\n\t    @param {Function} nodeFunc a 'node-style' function that takes a callback as\n\t    its last argument. The callback expects an error to be passed as its first\n\t    argument (if an error occurred, otherwise null), and the value from the\n\t    operation as its second argument ('function(err, value){ }').\n\t    @param {Boolean|Array} [options] An optional paramter that if set\n\t    to `true` causes the promise to fulfill with the callback's success arguments\n\t    as an array. This is useful if the node function has multiple success\n\t    paramters. If you set this paramter to an array with names, the promise will\n\t    fulfill with a hash with these names as keys and the success parameters as\n\t    values.\n\t    @return {Function} a function that wraps `nodeFunc` to return an\n\t    `RSVP.Promise`\n\t    @static\n\t  */\n\t  function denodeify(nodeFunc, options) {\n\t    var fn = function fn() {\n\t      var self = this;\n\t      var l = arguments.length;\n\t      var args = new Array(l + 1);\n\t      var promiseInput = false;\n\t\n\t      for (var i = 0; i < l; ++i) {\n\t        var arg = arguments[i];\n\t\n\t        if (!promiseInput) {\n\t          // TODO: clean this up\n\t          promiseInput = needsPromiseInput(arg);\n\t          if (promiseInput === GET_THEN_ERROR$1) {\n\t            var p = new Promise(noop);\n\t            reject(p, GET_THEN_ERROR$1.value);\n\t            return p;\n\t          } else if (promiseInput && promiseInput !== true) {\n\t            arg = wrapThenable(promiseInput, arg);\n\t          }\n\t        }\n\t        args[i] = arg;\n\t      }\n\t\n\t      var promise = new Promise(noop);\n\t\n\t      args[l] = function (err, val) {\n\t        if (err) reject(promise, err);else if (options === undefined) resolve(promise, val);else if (options === true) resolve(promise, arrayResult(arguments));else if (isArray(options)) resolve(promise, makeObject(arguments, options));else resolve(promise, val);\n\t      };\n\t\n\t      if (promiseInput) {\n\t        return handlePromiseInput(promise, args, nodeFunc, self);\n\t      } else {\n\t        return handleValueInput(promise, args, nodeFunc, self);\n\t      }\n\t    };\n\t\n\t    fn.__proto__ = nodeFunc;\n\t\n\t    return fn;\n\t  }\n\t\n\t  function handleValueInput(promise, args, nodeFunc, self) {\n\t    var result = tryApply(nodeFunc, self, args);\n\t    if (result === ERROR) {\n\t      reject(promise, result.value);\n\t    }\n\t    return promise;\n\t  }\n\t\n\t  function handlePromiseInput(promise, args, nodeFunc, self) {\n\t    return Promise.all(args).then(function (args) {\n\t      var result = tryApply(nodeFunc, self, args);\n\t      if (result === ERROR) {\n\t        reject(promise, result.value);\n\t      }\n\t      return promise;\n\t    });\n\t  }\n\t\n\t  function needsPromiseInput(arg) {\n\t    if (arg && (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {\n\t      if (arg.constructor === Promise) {\n\t        return true;\n\t      } else {\n\t        return getThen$1(arg);\n\t      }\n\t    } else {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  /**\n\t    This is a convenient alias for `RSVP.Promise.all`.\n\t  \n\t    @method all\n\t    @static\n\t    @for RSVP\n\t    @param {Array} array Array of promises.\n\t    @param {String} label An optional label. This is useful\n\t    for tooling.\n\t  */\n\t  function all$1(array, label) {\n\t    return Promise.all(array, label);\n\t  }\n\t\n\t  function _possibleConstructorReturn(self, call) {\n\t    if (!self) {\n\t      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t  }\n\t\n\t  function _inherits(subClass, superClass) {\n\t    if (typeof superClass !== \"function\" && superClass !== null) {\n\t      throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n\t    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t  }\n\t\n\t  var AllSettled = function (_Enumerator) {\n\t    _inherits(AllSettled, _Enumerator);\n\t\n\t    function AllSettled(Constructor, entries, label) {\n\t      return _possibleConstructorReturn(this, _Enumerator.call(this, Constructor, entries, false /* don't abort on reject */, label));\n\t    }\n\t\n\t    return AllSettled;\n\t  }(Enumerator);\n\t\n\t  AllSettled.prototype._makeResult = makeSettledResult;\n\t\n\t  /**\n\t  `RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\n\t  a fail-fast method, it waits until all the promises have returned and\n\t  shows you all the results. This is useful if you want to handle multiple\n\t  promises' failure states together as a set.\n\t   Returns a promise that is fulfilled when all the given promises have been\n\t  settled. The return promise is fulfilled with an array of the states of\n\t  the promises passed into the `promises` array argument.\n\t   Each state object will either indicate fulfillment or rejection, and\n\t  provide the corresponding value or reason. The states will take one of\n\t  the following formats:\n\t   ```javascript\n\t  { state: 'fulfilled', value: value }\n\t    or\n\t  { state: 'rejected', reason: reason }\n\t  ```\n\t   Example:\n\t   ```javascript\n\t  let promise1 = RSVP.Promise.resolve(1);\n\t  let promise2 = RSVP.Promise.reject(new Error('2'));\n\t  let promise3 = RSVP.Promise.reject(new Error('3'));\n\t  let promises = [ promise1, promise2, promise3 ];\n\t   RSVP.allSettled(promises).then(function(array){\n\t    // array == [\n\t    //   { state: 'fulfilled', value: 1 },\n\t    //   { state: 'rejected', reason: Error },\n\t    //   { state: 'rejected', reason: Error }\n\t    // ]\n\t    // Note that for the second item, reason.message will be '2', and for the\n\t    // third item, reason.message will be '3'.\n\t  }, function(error) {\n\t    // Not run. (This block would only be called if allSettled had failed,\n\t    // for instance if passed an incorrect argument type.)\n\t  });\n\t  ```\n\t   @method allSettled\n\t  @static\n\t  @for RSVP\n\t  @param {Array} entries\n\t  @param {String} label - optional string that describes the promise.\n\t  Useful for tooling.\n\t  @return {Promise} promise that is fulfilled with an array of the settled\n\t  states of the constituent promises.\n\t  */\n\t\n\t  function allSettled(entries, label) {\n\t    if (!isArray(entries)) {\n\t      return Promise.reject(new TypeError(\"Promise.allSettled must be called with an array\"), label);\n\t    }\n\t\n\t    return new AllSettled(Promise, entries, label).promise;\n\t  }\n\t\n\t  /**\n\t    This is a convenient alias for `RSVP.Promise.race`.\n\t  \n\t    @method race\n\t    @static\n\t    @for RSVP\n\t    @param {Array} array Array of promises.\n\t    @param {String} label An optional label. This is useful\n\t    for tooling.\n\t   */\n\t  function race$1(array, label) {\n\t    return Promise.race(array, label);\n\t  }\n\t\n\t  function _possibleConstructorReturn$1(self, call) {\n\t    if (!self) {\n\t      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t  }\n\t\n\t  function _inherits$1(subClass, superClass) {\n\t    if (typeof superClass !== \"function\" && superClass !== null) {\n\t      throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n\t    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t  }\n\t\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  var PromiseHash = function (_Enumerator) {\n\t    _inherits$1(PromiseHash, _Enumerator);\n\t\n\t    function PromiseHash(Constructor, object) {\n\t      var abortOnReject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t      var label = arguments[3];\n\t      return _possibleConstructorReturn$1(this, _Enumerator.call(this, Constructor, object, abortOnReject, label));\n\t    }\n\t\n\t    PromiseHash.prototype._init = function _init(Constructor, object) {\n\t      this._result = {};\n\t\n\t      this._enumerate(object);\n\t      if (this._remaining === 0) {\n\t        fulfill(this.promise, this._result);\n\t      }\n\t    };\n\t\n\t    PromiseHash.prototype._enumerate = function _enumerate(input) {\n\t      var promise = this.promise;\n\t      var results = [];\n\t\n\t      for (var key in input) {\n\t        if (hasOwnProperty.call(input, key)) {\n\t          results.push({\n\t            position: key,\n\t            entry: input[key]\n\t          });\n\t        }\n\t      }\n\t\n\t      var length = results.length;\n\t      this._remaining = length;\n\t      var result = void 0;\n\t\n\t      for (var i = 0; promise._state === PENDING && i < length; i++) {\n\t        result = results[i];\n\t        this._eachEntry(result.entry, result.position);\n\t      }\n\t    };\n\t\n\t    return PromiseHash;\n\t  }(Enumerator);\n\t\n\t  /**\n\t    `RSVP.hash` is similar to `RSVP.all`, but takes an object instead of an array\n\t    for its `promises` argument.\n\t  \n\t    Returns a promise that is fulfilled when all the given promises have been\n\t    fulfilled, or rejected if any of them become rejected. The returned promise\n\t    is fulfilled with a hash that has the same key names as the `promises` object\n\t    argument. If any of the values in the object are not promises, they will\n\t    simply be copied over to the fulfilled object.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promises = {\n\t      myPromise: RSVP.resolve(1),\n\t      yourPromise: RSVP.resolve(2),\n\t      theirPromise: RSVP.resolve(3),\n\t      notAPromise: 4\n\t    };\n\t  \n\t    RSVP.hash(promises).then(function(hash){\n\t      // hash here is an object that looks like:\n\t      // {\n\t      //   myPromise: 1,\n\t      //   yourPromise: 2,\n\t      //   theirPromise: 3,\n\t      //   notAPromise: 4\n\t      // }\n\t    });\n\t    ````\n\t  \n\t    If any of the `promises` given to `RSVP.hash` are rejected, the first promise\n\t    that is rejected will be given as the reason to the rejection handler.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promises = {\n\t      myPromise: RSVP.resolve(1),\n\t      rejectedPromise: RSVP.reject(new Error('rejectedPromise')),\n\t      anotherRejectedPromise: RSVP.reject(new Error('anotherRejectedPromise')),\n\t    };\n\t  \n\t    RSVP.hash(promises).then(function(hash){\n\t      // Code here never runs because there are rejected promises!\n\t    }, function(reason) {\n\t      // reason.message === 'rejectedPromise'\n\t    });\n\t    ```\n\t  \n\t    An important note: `RSVP.hash` is intended for plain JavaScript objects that\n\t    are just a set of keys and values. `RSVP.hash` will NOT preserve prototype\n\t    chains.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    function MyConstructor(){\n\t      this.example = RSVP.resolve('Example');\n\t    }\n\t  \n\t    MyConstructor.prototype = {\n\t      protoProperty: RSVP.resolve('Proto Property')\n\t    };\n\t  \n\t    let myObject = new MyConstructor();\n\t  \n\t    RSVP.hash(myObject).then(function(hash){\n\t      // protoProperty will not be present, instead you will just have an\n\t      // object that looks like:\n\t      // {\n\t      //   example: 'Example'\n\t      // }\n\t      //\n\t      // hash.hasOwnProperty('protoProperty'); // false\n\t      // 'undefined' === typeof hash.protoProperty\n\t    });\n\t    ```\n\t  \n\t    @method hash\n\t    @static\n\t    @for RSVP\n\t    @param {Object} object\n\t    @param {String} label optional string that describes the promise.\n\t    Useful for tooling.\n\t    @return {Promise} promise that is fulfilled when all properties of `promises`\n\t    have been fulfilled, or rejected if any of them become rejected.\n\t  */\n\t  function hash(object, label) {\n\t    if (!isObject(object)) {\n\t      return Promise.reject(new TypeError(\"Promise.hash must be called with an object\"), label);\n\t    }\n\t\n\t    return new PromiseHash(Promise, object, label).promise;\n\t  }\n\t\n\t  function _possibleConstructorReturn$2(self, call) {\n\t    if (!self) {\n\t      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n\t  }\n\t\n\t  function _inherits$2(subClass, superClass) {\n\t    if (typeof superClass !== \"function\" && superClass !== null) {\n\t      throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n\t    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t  }\n\t\n\t  var HashSettled = function (_PromiseHash) {\n\t    _inherits$2(HashSettled, _PromiseHash);\n\t\n\t    function HashSettled(Constructor, object, label) {\n\t      return _possibleConstructorReturn$2(this, _PromiseHash.call(this, Constructor, object, false, label));\n\t    }\n\t\n\t    return HashSettled;\n\t  }(PromiseHash);\n\t\n\t  HashSettled.prototype._makeResult = makeSettledResult;\n\t\n\t  /**\n\t    `RSVP.hashSettled` is similar to `RSVP.allSettled`, but takes an object\n\t    instead of an array for its `promises` argument.\n\t  \n\t    Unlike `RSVP.all` or `RSVP.hash`, which implement a fail-fast method,\n\t    but like `RSVP.allSettled`, `hashSettled` waits until all the\n\t    constituent promises have returned and then shows you all the results\n\t    with their states and values/reasons. This is useful if you want to\n\t    handle multiple promises' failure states together as a set.\n\t  \n\t    Returns a promise that is fulfilled when all the given promises have been\n\t    settled, or rejected if the passed parameters are invalid.\n\t  \n\t    The returned promise is fulfilled with a hash that has the same key names as\n\t    the `promises` object argument. If any of the values in the object are not\n\t    promises, they will be copied over to the fulfilled object and marked with state\n\t    'fulfilled'.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promises = {\n\t      myPromise: RSVP.Promise.resolve(1),\n\t      yourPromise: RSVP.Promise.resolve(2),\n\t      theirPromise: RSVP.Promise.resolve(3),\n\t      notAPromise: 4\n\t    };\n\t  \n\t    RSVP.hashSettled(promises).then(function(hash){\n\t      // hash here is an object that looks like:\n\t      // {\n\t      //   myPromise: { state: 'fulfilled', value: 1 },\n\t      //   yourPromise: { state: 'fulfilled', value: 2 },\n\t      //   theirPromise: { state: 'fulfilled', value: 3 },\n\t      //   notAPromise: { state: 'fulfilled', value: 4 }\n\t      // }\n\t    });\n\t    ```\n\t  \n\t    If any of the `promises` given to `RSVP.hash` are rejected, the state will\n\t    be set to 'rejected' and the reason for rejection provided.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    let promises = {\n\t      myPromise: RSVP.Promise.resolve(1),\n\t      rejectedPromise: RSVP.Promise.reject(new Error('rejection')),\n\t      anotherRejectedPromise: RSVP.Promise.reject(new Error('more rejection')),\n\t    };\n\t  \n\t    RSVP.hashSettled(promises).then(function(hash){\n\t      // hash here is an object that looks like:\n\t      // {\n\t      //   myPromise:              { state: 'fulfilled', value: 1 },\n\t      //   rejectedPromise:        { state: 'rejected', reason: Error },\n\t      //   anotherRejectedPromise: { state: 'rejected', reason: Error },\n\t      // }\n\t      // Note that for rejectedPromise, reason.message == 'rejection',\n\t      // and for anotherRejectedPromise, reason.message == 'more rejection'.\n\t    });\n\t    ```\n\t  \n\t    An important note: `RSVP.hashSettled` is intended for plain JavaScript objects that\n\t    are just a set of keys and values. `RSVP.hashSettled` will NOT preserve prototype\n\t    chains.\n\t  \n\t    Example:\n\t  \n\t    ```javascript\n\t    function MyConstructor(){\n\t      this.example = RSVP.Promise.resolve('Example');\n\t    }\n\t  \n\t    MyConstructor.prototype = {\n\t      protoProperty: RSVP.Promise.resolve('Proto Property')\n\t    };\n\t  \n\t    let myObject = new MyConstructor();\n\t  \n\t    RSVP.hashSettled(myObject).then(function(hash){\n\t      // protoProperty will not be present, instead you will just have an\n\t      // object that looks like:\n\t      // {\n\t      //   example: { state: 'fulfilled', value: 'Example' }\n\t      // }\n\t      //\n\t      // hash.hasOwnProperty('protoProperty'); // false\n\t      // 'undefined' === typeof hash.protoProperty\n\t    });\n\t    ```\n\t  \n\t    @method hashSettled\n\t    @for RSVP\n\t    @param {Object} object\n\t    @param {String} label optional string that describes the promise.\n\t    Useful for tooling.\n\t    @return {Promise} promise that is fulfilled when when all properties of `promises`\n\t    have been settled.\n\t    @static\n\t  */\n\t\n\t  function hashSettled(object, label) {\n\t    if (!isObject(object)) {\n\t      return Promise.reject(new TypeError(\"RSVP.hashSettled must be called with an object\"), label);\n\t    }\n\t\n\t    return new HashSettled(Promise, object, false, label).promise;\n\t  }\n\t\n\t  /**\n\t    `RSVP.rethrow` will rethrow an error on the next turn of the JavaScript event\n\t    loop in order to aid debugging.\n\t  \n\t    Promises A+ specifies that any exceptions that occur with a promise must be\n\t    caught by the promises implementation and bubbled to the last handler. For\n\t    this reason, it is recommended that you always specify a second rejection\n\t    handler function to `then`. However, `RSVP.rethrow` will throw the exception\n\t    outside of the promise, so it bubbles up to your console if in the browser,\n\t    or domain/cause uncaught exception in Node. `rethrow` will also throw the\n\t    error again so the error can be handled by the promise per the spec.\n\t  \n\t    ```javascript\n\t    function throws(){\n\t      throw new Error('Whoops!');\n\t    }\n\t  \n\t    let promise = new RSVP.Promise(function(resolve, reject){\n\t      throws();\n\t    });\n\t  \n\t    promise.catch(RSVP.rethrow).then(function(){\n\t      // Code here doesn't run because the promise became rejected due to an\n\t      // error!\n\t    }, function (err){\n\t      // handle the error here\n\t    });\n\t    ```\n\t  \n\t    The 'Whoops' error will be thrown on the next turn of the event loop\n\t    and you can watch for it in your console. You can also handle it using a\n\t    rejection handler given to `.then` or `.catch` on the returned promise.\n\t  \n\t    @method rethrow\n\t    @static\n\t    @for RSVP\n\t    @param {Error} reason reason the promise became rejected.\n\t    @throws Error\n\t    @static\n\t  */\n\t  function rethrow(reason) {\n\t    setTimeout(function () {\n\t      throw reason;\n\t    });\n\t    throw reason;\n\t  }\n\t\n\t  /**\n\t    `RSVP.defer` returns an object similar to jQuery's `$.Deferred`.\n\t    `RSVP.defer` should be used when porting over code reliant on `$.Deferred`'s\n\t    interface. New code should use the `RSVP.Promise` constructor instead.\n\t  \n\t    The object returned from `RSVP.defer` is a plain object with three properties:\n\t  \n\t    * promise - an `RSVP.Promise`.\n\t    * reject - a function that causes the `promise` property on this object to\n\t      become rejected\n\t    * resolve - a function that causes the `promise` property on this object to\n\t      become fulfilled.\n\t  \n\t    Example:\n\t  \n\t     ```javascript\n\t     let deferred = RSVP.defer();\n\t  \n\t     deferred.resolve(\"Success!\");\n\t  \n\t     deferred.promise.then(function(value){\n\t       // value here is \"Success!\"\n\t     });\n\t     ```\n\t  \n\t    @method defer\n\t    @static\n\t    @for RSVP\n\t    @param {String} label optional string for labeling the promise.\n\t    Useful for tooling.\n\t    @return {Object}\n\t   */\n\t\n\t  function defer(label) {\n\t    var deferred = { resolve: undefined, reject: undefined };\n\t\n\t    deferred.promise = new Promise(function (resolve, reject) {\n\t      deferred.resolve = resolve;\n\t      deferred.reject = reject;\n\t    }, label);\n\t\n\t    return deferred;\n\t  }\n\t\n\t  /**\n\t   `RSVP.map` is similar to JavaScript's native `map` method, except that it\n\t    waits for all promises to become fulfilled before running the `mapFn` on\n\t    each item in given to `promises`. `RSVP.map` returns a promise that will\n\t    become fulfilled with the result of running `mapFn` on the values the promises\n\t    become fulfilled with.\n\t  \n\t    For example:\n\t  \n\t    ```javascript\n\t  \n\t    let promise1 = RSVP.resolve(1);\n\t    let promise2 = RSVP.resolve(2);\n\t    let promise3 = RSVP.resolve(3);\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    let mapFn = function(item){\n\t      return item + 1;\n\t    };\n\t  \n\t    RSVP.map(promises, mapFn).then(function(result){\n\t      // result is [ 2, 3, 4 ]\n\t    });\n\t    ```\n\t  \n\t    If any of the `promises` given to `RSVP.map` are rejected, the first promise\n\t    that is rejected will be given as an argument to the returned promise's\n\t    rejection handler. For example:\n\t  \n\t    ```javascript\n\t    let promise1 = RSVP.resolve(1);\n\t    let promise2 = RSVP.reject(new Error('2'));\n\t    let promise3 = RSVP.reject(new Error('3'));\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    let mapFn = function(item){\n\t      return item + 1;\n\t    };\n\t  \n\t    RSVP.map(promises, mapFn).then(function(array){\n\t      // Code here never runs because there are rejected promises!\n\t    }, function(reason) {\n\t      // reason.message === '2'\n\t    });\n\t    ```\n\t  \n\t    `RSVP.map` will also wait if a promise is returned from `mapFn`. For example,\n\t    say you want to get all comments from a set of blog posts, but you need\n\t    the blog posts first because they contain a url to those comments.\n\t  \n\t    ```javscript\n\t  \n\t    let mapFn = function(blogPost){\n\t      // getComments does some ajax and returns an RSVP.Promise that is fulfilled\n\t      // with some comments data\n\t      return getComments(blogPost.comments_url);\n\t    };\n\t  \n\t    // getBlogPosts does some ajax and returns an RSVP.Promise that is fulfilled\n\t    // with some blog post data\n\t    RSVP.map(getBlogPosts(), mapFn).then(function(comments){\n\t      // comments is the result of asking the server for the comments\n\t      // of all blog posts returned from getBlogPosts()\n\t    });\n\t    ```\n\t  \n\t    @method map\n\t    @static\n\t    @for RSVP\n\t    @param {Array} promises\n\t    @param {Function} mapFn function to be called on each fulfilled promise.\n\t    @param {String} label optional string for labeling the promise.\n\t    Useful for tooling.\n\t    @return {Promise} promise that is fulfilled with the result of calling\n\t    `mapFn` on each fulfilled promise or value when they become fulfilled.\n\t     The promise will be rejected if any of the given `promises` become rejected.\n\t    @static\n\t  */\n\t  function map(promises, mapFn, label) {\n\t    if (!isArray(promises)) {\n\t      return Promise.reject(new TypeError(\"RSVP.map must be called with an array\"), label);\n\t    }\n\t\n\t    if (!isFunction(mapFn)) {\n\t      return Promise.reject(new TypeError(\"RSVP.map expects a function as a second argument\"), label);\n\t    }\n\t\n\t    return Promise.all(promises, label).then(function (values) {\n\t      var length = values.length;\n\t      var results = new Array(length);\n\t\n\t      for (var i = 0; i < length; i++) {\n\t        results[i] = mapFn(values[i]);\n\t      }\n\t\n\t      return Promise.all(results, label);\n\t    });\n\t  }\n\t\n\t  /**\n\t    This is a convenient alias for `RSVP.Promise.resolve`.\n\t  \n\t    @method resolve\n\t    @static\n\t    @for RSVP\n\t    @param {*} value value that the returned promise will be resolved with\n\t    @param {String} label optional string for identifying the returned promise.\n\t    Useful for tooling.\n\t    @return {Promise} a promise that will become fulfilled with the given\n\t    `value`\n\t  */\n\t  function resolve$2(value, label) {\n\t    return Promise.resolve(value, label);\n\t  }\n\t\n\t  /**\n\t    This is a convenient alias for `RSVP.Promise.reject`.\n\t  \n\t    @method reject\n\t    @static\n\t    @for RSVP\n\t    @param {*} reason value that the returned promise will be rejected with.\n\t    @param {String} label optional string for identifying the returned promise.\n\t    Useful for tooling.\n\t    @return {Promise} a promise rejected with the given `reason`.\n\t  */\n\t  function reject$2(reason, label) {\n\t    return Promise.reject(reason, label);\n\t  }\n\t\n\t  /**\n\t   `RSVP.filter` is similar to JavaScript's native `filter` method, except that it\n\t    waits for all promises to become fulfilled before running the `filterFn` on\n\t    each item in given to `promises`. `RSVP.filter` returns a promise that will\n\t    become fulfilled with the result of running `filterFn` on the values the\n\t    promises become fulfilled with.\n\t  \n\t    For example:\n\t  \n\t    ```javascript\n\t  \n\t    let promise1 = RSVP.resolve(1);\n\t    let promise2 = RSVP.resolve(2);\n\t    let promise3 = RSVP.resolve(3);\n\t  \n\t    let promises = [promise1, promise2, promise3];\n\t  \n\t    let filterFn = function(item){\n\t      return item > 1;\n\t    };\n\t  \n\t    RSVP.filter(promises, filterFn).then(function(result){\n\t      // result is [ 2, 3 ]\n\t    });\n\t    ```\n\t  \n\t    If any of the `promises` given to `RSVP.filter` are rejected, the first promise\n\t    that is rejected will be given as an argument to the returned promise's\n\t    rejection handler. For example:\n\t  \n\t    ```javascript\n\t    let promise1 = RSVP.resolve(1);\n\t    let promise2 = RSVP.reject(new Error('2'));\n\t    let promise3 = RSVP.reject(new Error('3'));\n\t    let promises = [ promise1, promise2, promise3 ];\n\t  \n\t    let filterFn = function(item){\n\t      return item > 1;\n\t    };\n\t  \n\t    RSVP.filter(promises, filterFn).then(function(array){\n\t      // Code here never runs because there are rejected promises!\n\t    }, function(reason) {\n\t      // reason.message === '2'\n\t    });\n\t    ```\n\t  \n\t    `RSVP.filter` will also wait for any promises returned from `filterFn`.\n\t    For instance, you may want to fetch a list of users then return a subset\n\t    of those users based on some asynchronous operation:\n\t  \n\t    ```javascript\n\t  \n\t    let alice = { name: 'alice' };\n\t    let bob   = { name: 'bob' };\n\t    let users = [ alice, bob ];\n\t  \n\t    let promises = users.map(function(user){\n\t      return RSVP.resolve(user);\n\t    });\n\t  \n\t    let filterFn = function(user){\n\t      // Here, Alice has permissions to create a blog post, but Bob does not.\n\t      return getPrivilegesForUser(user).then(function(privs){\n\t        return privs.can_create_blog_post === true;\n\t      });\n\t    };\n\t    RSVP.filter(promises, filterFn).then(function(users){\n\t      // true, because the server told us only Alice can create a blog post.\n\t      users.length === 1;\n\t      // false, because Alice is the only user present in `users`\n\t      users[0] === bob;\n\t    });\n\t    ```\n\t  \n\t    @method filter\n\t    @static\n\t    @for RSVP\n\t    @param {Array} promises\n\t    @param {Function} filterFn - function to be called on each resolved value to\n\t    filter the final results.\n\t    @param {String} label optional string describing the promise. Useful for\n\t    tooling.\n\t    @return {Promise}\n\t  */\n\t\n\t  function resolveAll(promises, label) {\n\t    return Promise.all(promises, label);\n\t  }\n\t\n\t  function resolveSingle(promise, label) {\n\t    return Promise.resolve(promise, label).then(function (promises) {\n\t      return resolveAll(promises, label);\n\t    });\n\t  }\n\t\n\t  function filter(promises, filterFn, label) {\n\t    if (!isArray(promises) && !(isObject(promises) && promises.then !== undefined)) {\n\t      return Promise.reject(new TypeError(\"RSVP.filter must be called with an array or promise\"), label);\n\t    }\n\t\n\t    if (!isFunction(filterFn)) {\n\t      return Promise.reject(new TypeError(\"RSVP.filter expects function as a second argument\"), label);\n\t    }\n\t\n\t    var promise = isArray(promises) ? resolveAll(promises, label) : resolveSingle(promises, label);\n\t    return promise.then(function (values) {\n\t      var length = values.length;\n\t      var filtered = new Array(length);\n\t\n\t      for (var i = 0; i < length; i++) {\n\t        filtered[i] = filterFn(values[i]);\n\t      }\n\t\n\t      return resolveAll(filtered, label).then(function (filtered) {\n\t        var results = new Array(length);\n\t        var newLength = 0;\n\t\n\t        for (var _i = 0; _i < length; _i++) {\n\t          if (filtered[_i]) {\n\t            results[newLength] = values[_i];\n\t            newLength++;\n\t          }\n\t        }\n\t\n\t        results.length = newLength;\n\t\n\t        return results;\n\t      });\n\t    });\n\t  }\n\t\n\t  var len = 0;\n\t  var vertxNext = void 0;\n\t  function asap(callback, arg) {\n\t    queue$1[len] = callback;\n\t    queue$1[len + 1] = arg;\n\t    len += 2;\n\t    if (len === 2) {\n\t      // If len is 1, that means that we need to schedule an async flush.\n\t      // If additional callbacks are queued before the queue is flushed, they\n\t      // will be processed by this flush that we are scheduling.\n\t      scheduleFlush$1();\n\t    }\n\t  }\n\t\n\t  var browserWindow = typeof window !== 'undefined' ? window : undefined;\n\t  var browserGlobal = browserWindow || {};\n\t  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n\t  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\t\n\t  // test for web worker but not in IE10\n\t  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\t\n\t  // node\n\t  function useNextTick() {\n\t    var nextTick = process.nextTick;\n\t    // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n\t    // setImmediate should be used instead instead\n\t    var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n\t    if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n\t      nextTick = setImmediate;\n\t    }\n\t    return function () {\n\t      return nextTick(flush);\n\t    };\n\t  }\n\t\n\t  // vertx\n\t  function useVertxTimer() {\n\t    if (typeof vertxNext !== 'undefined') {\n\t      return function () {\n\t        vertxNext(flush);\n\t      };\n\t    }\n\t    return useSetTimeout();\n\t  }\n\t\n\t  function useMutationObserver() {\n\t    var iterations = 0;\n\t    var observer = new BrowserMutationObserver(flush);\n\t    var node = document.createTextNode('');\n\t    observer.observe(node, { characterData: true });\n\t\n\t    return function () {\n\t      return node.data = iterations = ++iterations % 2;\n\t    };\n\t  }\n\t\n\t  // web worker\n\t  function useMessageChannel() {\n\t    var channel = new MessageChannel();\n\t    channel.port1.onmessage = flush;\n\t    return function () {\n\t      return channel.port2.postMessage(0);\n\t    };\n\t  }\n\t\n\t  function useSetTimeout() {\n\t    return function () {\n\t      return setTimeout(flush, 1);\n\t    };\n\t  }\n\t\n\t  var queue$1 = new Array(1000);\n\t\n\t  function flush() {\n\t    for (var i = 0; i < len; i += 2) {\n\t      var callback = queue$1[i];\n\t      var arg = queue$1[i + 1];\n\t\n\t      callback(arg);\n\t\n\t      queue$1[i] = undefined;\n\t      queue$1[i + 1] = undefined;\n\t    }\n\t\n\t    len = 0;\n\t  }\n\t\n\t  function attemptVertex() {\n\t    try {\n\t      var r = require;\n\t      var vertx = __webpack_require__(10);\n\t      vertxNext = vertx.runOnLoop || vertx.runOnContext;\n\t      return useVertxTimer();\n\t    } catch (e) {\n\t      return useSetTimeout();\n\t    }\n\t  }\n\t\n\t  var scheduleFlush$1 = void 0;\n\t  // Decide what async method to use to triggering processing of queued callbacks:\n\t  if (isNode) {\n\t    scheduleFlush$1 = useNextTick();\n\t  } else if (BrowserMutationObserver) {\n\t    scheduleFlush$1 = useMutationObserver();\n\t  } else if (isWorker) {\n\t    scheduleFlush$1 = useMessageChannel();\n\t  } else if (browserWindow === undefined && \"function\" === 'function') {\n\t    scheduleFlush$1 = attemptVertex();\n\t  } else {\n\t    scheduleFlush$1 = useSetTimeout();\n\t  }\n\t\n\t  var platform = void 0;\n\t\n\t  /* global self */\n\t  if ((typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object') {\n\t    platform = self;\n\t\n\t    /* global global */\n\t  } else if ((typeof global === 'undefined' ? 'undefined' : _typeof(global)) === 'object') {\n\t    platform = global;\n\t  } else {\n\t    throw new Error('no global: `self` or `global` found');\n\t  }\n\t\n\t  var _asap$cast$Promise$Ev;\n\t\n\t  function _defineProperty(obj, key, value) {\n\t    if (key in obj) {\n\t      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n\t    } else {\n\t      obj[key] = value;\n\t    }return obj;\n\t  }\n\t\n\t  // defaults\n\t  config.async = asap;\n\t  config.after = function (cb) {\n\t    return setTimeout(cb, 0);\n\t  };\n\t  var cast = resolve$2;\n\t\n\t  var async = function async(callback, arg) {\n\t    return config.async(callback, arg);\n\t  };\n\t\n\t  function on() {\n\t    config['on'].apply(config, arguments);\n\t  }\n\t\n\t  function off() {\n\t    config['off'].apply(config, arguments);\n\t  }\n\t\n\t  // Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\n\t  if (typeof window !== 'undefined' && _typeof(window['__PROMISE_INSTRUMENTATION__']) === 'object') {\n\t    var callbacks = window['__PROMISE_INSTRUMENTATION__'];\n\t    configure('instrument', true);\n\t    for (var eventName in callbacks) {\n\t      if (callbacks.hasOwnProperty(eventName)) {\n\t        on(eventName, callbacks[eventName]);\n\t      }\n\t    }\n\t  }\n\t\n\t  // the default export here is for backwards compat:\n\t  //   https://github.com/tildeio/rsvp.js/issues/434\n\t  var rsvp = (_asap$cast$Promise$Ev = {\n\t    asap: asap,\n\t    cast: cast,\n\t    Promise: Promise,\n\t    EventTarget: EventTarget,\n\t    all: all$1,\n\t    allSettled: allSettled,\n\t    race: race$1,\n\t    hash: hash,\n\t    hashSettled: hashSettled,\n\t    rethrow: rethrow,\n\t    defer: defer,\n\t    denodeify: denodeify,\n\t    configure: configure,\n\t    on: on,\n\t    off: off,\n\t    resolve: resolve$2,\n\t    reject: reject$2,\n\t    map: map\n\t  }, _defineProperty(_asap$cast$Promise$Ev, 'async', async), _defineProperty(_asap$cast$Promise$Ev, 'filter', filter), _asap$cast$Promise$Ev);\n\t\n\t  exports['default'] = rsvp;\n\t  exports.asap = asap;\n\t  exports.cast = cast;\n\t  exports.Promise = Promise;\n\t  exports.EventTarget = EventTarget;\n\t  exports.all = all$1;\n\t  exports.allSettled = allSettled;\n\t  exports.race = race$1;\n\t  exports.hash = hash;\n\t  exports.hashSettled = hashSettled;\n\t  exports.rethrow = rethrow;\n\t  exports.defer = defer;\n\t  exports.denodeify = denodeify;\n\t  exports.configure = configure;\n\t  exports.on = on;\n\t  exports.off = off;\n\t  exports.resolve = resolve$2;\n\t  exports.reject = reject$2;\n\t  exports.map = map;\n\t  exports.async = async;\n\t  exports.filter = filter;\n\t\n\t  Object.defineProperty(exports, '__esModule', { value: true });\n\t});\n\t\n\t//# sourceMappingURL=rsvp.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(8).setImmediate, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tvar scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function () {\n\t  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n\t};\n\texports.setInterval = function () {\n\t  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n\t};\n\texports.clearTimeout = exports.clearInterval = function (timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\tTimeout.prototype.close = function () {\n\t  this._clearFn.call(scope, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function (item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function (item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function (item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout) item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(9);\n\t// On some exotic environments, it's not clear which object `setimmediate` was\n\t// able to install onto.  Search each possibility in the same order as the\n\t// `setimmediate` library.\n\texports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || undefined && undefined.setImmediate;\n\texports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || undefined && undefined.clearImmediate;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 9:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {\"use strict\";\n\t\n\t(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t        // Callback can either be a function or a string\n\t        if (typeof callback !== \"function\") {\n\t            callback = new Function(\"\" + callback);\n\t        }\n\t        // Copy function arguments\n\t        var args = new Array(arguments.length - 1);\n\t        for (var i = 0; i < args.length; i++) {\n\t            args[i] = arguments[i + 1];\n\t        }\n\t        // Store and register the task\n\t        var task = { callback: callback, args: args };\n\t        tasksByHandle[nextHandle] = task;\n\t        registerImmediate(nextHandle);\n\t        return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t            case 0:\n\t                callback();\n\t                break;\n\t            case 1:\n\t                callback(args[0]);\n\t                break;\n\t            case 2:\n\t                callback(args[0], args[1]);\n\t                break;\n\t            case 3:\n\t                callback(args[0], args[1], args[2]);\n\t                break;\n\t            default:\n\t                callback.apply(undefined, args);\n\t                break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function registerImmediate(handle) {\n\t            process.nextTick(function () {\n\t                runIfPresent(handle);\n\t            });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function () {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function onGlobalMessage(event) {\n\t            if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function registerImmediate(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function (event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function registerImmediate(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function registerImmediate(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function registerImmediate(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? undefined : global : self);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 10:\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\tvar minDoc = __webpack_require__(13);\n\t\n\tvar doccy;\n\t\n\tif (typeof document !== 'undefined') {\n\t    doccy = document;\n\t} else {\n\t    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\t\n\t    if (!doccy) {\n\t        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n\t    }\n\t}\n\t\n\tmodule.exports = doccy;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 13:\n10,\n\n/***/ 15:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _axios = __webpack_require__(16);\n\t\n\tvar _axios2 = _interopRequireDefault(_axios);\n\t\n\tvar _jsCookie = __webpack_require__(41);\n\t\n\tvar _jsCookie2 = _interopRequireDefault(_jsCookie);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction axiosConfig() {\n\t  var callId = _jsCookie2.default.get('_x_call_id');\n\t  if (callId) {\n\t    _axios2.default.defaults.headers.common['X-Call-Id'] = callId;\n\t  }\n\t  return _axios2.default;\n\t}\n\t\n\texports.default = axiosConfig();\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(17);\n\n/***/ }),\n\n/***/ 17:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\tvar bind = __webpack_require__(19);\n\tvar Axios = __webpack_require__(20);\n\tvar defaults = __webpack_require__(21);\n\t\n\t/**\n\t * Create an instance of Axios\n\t *\n\t * @param {Object} defaultConfig The default config for the instance\n\t * @return {Axios} A new instance of Axios\n\t */\n\tfunction createInstance(defaultConfig) {\n\t  var context = new Axios(defaultConfig);\n\t  var instance = bind(Axios.prototype.request, context);\n\t\n\t  // Copy axios.prototype to instance\n\t  utils.extend(instance, Axios.prototype, context);\n\t\n\t  // Copy context to instance\n\t  utils.extend(instance, context);\n\t\n\t  return instance;\n\t}\n\t\n\t// Create the default instance to be exported\n\tvar axios = createInstance(defaults);\n\t\n\t// Expose Axios class to allow class inheritance\n\taxios.Axios = Axios;\n\t\n\t// Factory for creating new instances\n\taxios.create = function create(instanceConfig) {\n\t  return createInstance(utils.merge(defaults, instanceConfig));\n\t};\n\t\n\t// Expose Cancel & CancelToken\n\taxios.Cancel = __webpack_require__(38);\n\taxios.CancelToken = __webpack_require__(39);\n\taxios.isCancel = __webpack_require__(35);\n\t\n\t// Expose all/spread\n\taxios.all = function all(promises) {\n\t  return Promise.all(promises);\n\t};\n\taxios.spread = __webpack_require__(40);\n\t\n\tmodule.exports = axios;\n\t\n\t// Allow use of default import syntax in TypeScript\n\tmodule.exports.default = axios;\n\n/***/ }),\n\n/***/ 18:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar bind = __webpack_require__(19);\n\t\n\t/*global toString:true*/\n\t\n\t// utils is a library of generic helper functions non-specific to axios\n\t\n\tvar toString = Object.prototype.toString;\n\t\n\t/**\n\t * Determine if a value is an Array\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an Array, otherwise false\n\t */\n\tfunction isArray(val) {\n\t  return toString.call(val) === '[object Array]';\n\t}\n\t\n\t/**\n\t * Determine if a value is an ArrayBuffer\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n\t */\n\tfunction isArrayBuffer(val) {\n\t  return toString.call(val) === '[object ArrayBuffer]';\n\t}\n\t\n\t/**\n\t * Determine if a value is a FormData\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an FormData, otherwise false\n\t */\n\tfunction isFormData(val) {\n\t  return typeof FormData !== 'undefined' && val instanceof FormData;\n\t}\n\t\n\t/**\n\t * Determine if a value is a view on an ArrayBuffer\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n\t */\n\tfunction isArrayBufferView(val) {\n\t  var result;\n\t  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n\t    result = ArrayBuffer.isView(val);\n\t  } else {\n\t    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Determine if a value is a String\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a String, otherwise false\n\t */\n\tfunction isString(val) {\n\t  return typeof val === 'string';\n\t}\n\t\n\t/**\n\t * Determine if a value is a Number\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Number, otherwise false\n\t */\n\tfunction isNumber(val) {\n\t  return typeof val === 'number';\n\t}\n\t\n\t/**\n\t * Determine if a value is undefined\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if the value is undefined, otherwise false\n\t */\n\tfunction isUndefined(val) {\n\t  return typeof val === 'undefined';\n\t}\n\t\n\t/**\n\t * Determine if a value is an Object\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is an Object, otherwise false\n\t */\n\tfunction isObject(val) {\n\t  return val !== null && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object';\n\t}\n\t\n\t/**\n\t * Determine if a value is a Date\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Date, otherwise false\n\t */\n\tfunction isDate(val) {\n\t  return toString.call(val) === '[object Date]';\n\t}\n\t\n\t/**\n\t * Determine if a value is a File\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a File, otherwise false\n\t */\n\tfunction isFile(val) {\n\t  return toString.call(val) === '[object File]';\n\t}\n\t\n\t/**\n\t * Determine if a value is a Blob\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Blob, otherwise false\n\t */\n\tfunction isBlob(val) {\n\t  return toString.call(val) === '[object Blob]';\n\t}\n\t\n\t/**\n\t * Determine if a value is a Function\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Function, otherwise false\n\t */\n\tfunction isFunction(val) {\n\t  return toString.call(val) === '[object Function]';\n\t}\n\t\n\t/**\n\t * Determine if a value is a Stream\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a Stream, otherwise false\n\t */\n\tfunction isStream(val) {\n\t  return isObject(val) && isFunction(val.pipe);\n\t}\n\t\n\t/**\n\t * Determine if a value is a URLSearchParams object\n\t *\n\t * @param {Object} val The value to test\n\t * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n\t */\n\tfunction isURLSearchParams(val) {\n\t  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n\t}\n\t\n\t/**\n\t * Trim excess whitespace off the beginning and end of a string\n\t *\n\t * @param {String} str The String to trim\n\t * @returns {String} The String freed of excess whitespace\n\t */\n\tfunction trim(str) {\n\t  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n\t}\n\t\n\t/**\n\t * Determine if we're running in a standard browser environment\n\t *\n\t * This allows axios to run in a web worker, and react-native.\n\t * Both environments support XMLHttpRequest, but not fully standard globals.\n\t *\n\t * web workers:\n\t *  typeof window -> undefined\n\t *  typeof document -> undefined\n\t *\n\t * react-native:\n\t *  typeof document.createElement -> undefined\n\t */\n\tfunction isStandardBrowserEnv() {\n\t  return typeof window !== 'undefined' && typeof document !== 'undefined' && typeof document.createElement === 'function';\n\t}\n\t\n\t/**\n\t * Iterate over an Array or an Object invoking a function for each item.\n\t *\n\t * If `obj` is an Array callback will be called passing\n\t * the value, index, and complete array for each item.\n\t *\n\t * If 'obj' is an Object callback will be called passing\n\t * the value, key, and complete object for each property.\n\t *\n\t * @param {Object|Array} obj The object to iterate\n\t * @param {Function} fn The callback to invoke for each item\n\t */\n\tfunction forEach(obj, fn) {\n\t  // Don't bother if no value provided\n\t  if (obj === null || typeof obj === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  // Force an array if not already something iterable\n\t  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && !isArray(obj)) {\n\t    /*eslint no-param-reassign:0*/\n\t    obj = [obj];\n\t  }\n\t\n\t  if (isArray(obj)) {\n\t    // Iterate over array values\n\t    for (var i = 0, l = obj.length; i < l; i++) {\n\t      fn.call(null, obj[i], i, obj);\n\t    }\n\t  } else {\n\t    // Iterate over object keys\n\t    for (var key in obj) {\n\t      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t        fn.call(null, obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Accepts varargs expecting each argument to be an object, then\n\t * immutably merges the properties of each object and returns result.\n\t *\n\t * When multiple objects contain the same key the later object in\n\t * the arguments list will take precedence.\n\t *\n\t * Example:\n\t *\n\t * ```js\n\t * var result = merge({foo: 123}, {foo: 456});\n\t * console.log(result.foo); // outputs 456\n\t * ```\n\t *\n\t * @param {Object} obj1 Object to merge\n\t * @returns {Object} Result of all merge properties\n\t */\n\tfunction merge() /* obj1, obj2, obj3, ... */{\n\t  var result = {};\n\t  function assignValue(val, key) {\n\t    if (_typeof(result[key]) === 'object' && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n\t      result[key] = merge(result[key], val);\n\t    } else {\n\t      result[key] = val;\n\t    }\n\t  }\n\t\n\t  for (var i = 0, l = arguments.length; i < l; i++) {\n\t    forEach(arguments[i], assignValue);\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Extends object a by mutably adding to it the properties of object b.\n\t *\n\t * @param {Object} a The object to be extended\n\t * @param {Object} b The object to copy properties from\n\t * @param {Object} thisArg The object to bind function to\n\t * @return {Object} The resulting value of object a\n\t */\n\tfunction extend(a, b, thisArg) {\n\t  forEach(b, function assignValue(val, key) {\n\t    if (thisArg && typeof val === 'function') {\n\t      a[key] = bind(val, thisArg);\n\t    } else {\n\t      a[key] = val;\n\t    }\n\t  });\n\t  return a;\n\t}\n\t\n\tmodule.exports = {\n\t  isArray: isArray,\n\t  isArrayBuffer: isArrayBuffer,\n\t  isFormData: isFormData,\n\t  isArrayBufferView: isArrayBufferView,\n\t  isString: isString,\n\t  isNumber: isNumber,\n\t  isObject: isObject,\n\t  isUndefined: isUndefined,\n\t  isDate: isDate,\n\t  isFile: isFile,\n\t  isBlob: isBlob,\n\t  isFunction: isFunction,\n\t  isStream: isStream,\n\t  isURLSearchParams: isURLSearchParams,\n\t  isStandardBrowserEnv: isStandardBrowserEnv,\n\t  forEach: forEach,\n\t  merge: merge,\n\t  extend: extend,\n\t  trim: trim\n\t};\n\n/***/ }),\n\n/***/ 19:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function bind(fn, thisArg) {\n\t  return function wrap() {\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t    return fn.apply(thisArg, args);\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar defaults = __webpack_require__(21);\n\tvar utils = __webpack_require__(18);\n\tvar InterceptorManager = __webpack_require__(32);\n\tvar dispatchRequest = __webpack_require__(33);\n\tvar isAbsoluteURL = __webpack_require__(36);\n\tvar combineURLs = __webpack_require__(37);\n\t\n\t/**\n\t * Create a new instance of Axios\n\t *\n\t * @param {Object} instanceConfig The default config for the instance\n\t */\n\tfunction Axios(instanceConfig) {\n\t  this.defaults = instanceConfig;\n\t  this.interceptors = {\n\t    request: new InterceptorManager(),\n\t    response: new InterceptorManager()\n\t  };\n\t}\n\t\n\t/**\n\t * Dispatch a request\n\t *\n\t * @param {Object} config The config specific for this request (merged with this.defaults)\n\t */\n\tAxios.prototype.request = function request(config) {\n\t  /*eslint no-param-reassign:0*/\n\t  // Allow for axios('example/url'[, config]) a la fetch API\n\t  if (typeof config === 'string') {\n\t    config = utils.merge({\n\t      url: arguments[0]\n\t    }, arguments[1]);\n\t  }\n\t\n\t  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\t\n\t  // Support baseURL config\n\t  if (config.baseURL && !isAbsoluteURL(config.url)) {\n\t    config.url = combineURLs(config.baseURL, config.url);\n\t  }\n\t\n\t  // Hook up interceptors middleware\n\t  var chain = [dispatchRequest, undefined];\n\t  var promise = Promise.resolve(config);\n\t\n\t  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n\t    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n\t  });\n\t\n\t  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n\t    chain.push(interceptor.fulfilled, interceptor.rejected);\n\t  });\n\t\n\t  while (chain.length) {\n\t    promise = promise.then(chain.shift(), chain.shift());\n\t  }\n\t\n\t  return promise;\n\t};\n\t\n\t// Provide aliases for supported request methods\n\tutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n\t  /*eslint func-names:0*/\n\t  Axios.prototype[method] = function (url, config) {\n\t    return this.request(utils.merge(config || {}, {\n\t      method: method,\n\t      url: url\n\t    }));\n\t  };\n\t});\n\t\n\tutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n\t  /*eslint func-names:0*/\n\t  Axios.prototype[method] = function (url, data, config) {\n\t    return this.request(utils.merge(config || {}, {\n\t      method: method,\n\t      url: url,\n\t      data: data\n\t    }));\n\t  };\n\t});\n\t\n\tmodule.exports = Axios;\n\n/***/ }),\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\tvar normalizeHeaderName = __webpack_require__(22);\n\t\n\tvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\n\tvar DEFAULT_CONTENT_TYPE = {\n\t  'Content-Type': 'application/x-www-form-urlencoded'\n\t};\n\t\n\tfunction setContentTypeIfUnset(headers, value) {\n\t  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n\t    headers['Content-Type'] = value;\n\t  }\n\t}\n\t\n\tfunction getDefaultAdapter() {\n\t  var adapter;\n\t  if (typeof XMLHttpRequest !== 'undefined') {\n\t    // For browsers use XHR adapter\n\t    adapter = __webpack_require__(23);\n\t  } else if (typeof process !== 'undefined') {\n\t    // For node use HTTP adapter\n\t    adapter = __webpack_require__(23);\n\t  }\n\t  return adapter;\n\t}\n\t\n\tvar defaults = {\n\t  adapter: getDefaultAdapter(),\n\t\n\t  transformRequest: [function transformRequest(data, headers) {\n\t    normalizeHeaderName(headers, 'Content-Type');\n\t    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n\t      return data;\n\t    }\n\t    if (utils.isArrayBufferView(data)) {\n\t      return data.buffer;\n\t    }\n\t    if (utils.isURLSearchParams(data)) {\n\t      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n\t      return data.toString();\n\t    }\n\t    if (utils.isObject(data)) {\n\t      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n\t      return JSON.stringify(data);\n\t    }\n\t    return data;\n\t  }],\n\t\n\t  transformResponse: [function transformResponse(data) {\n\t    /*eslint no-param-reassign:0*/\n\t    if (typeof data === 'string') {\n\t      data = data.replace(PROTECTION_PREFIX, '');\n\t      try {\n\t        data = JSON.parse(data);\n\t      } catch (e) {/* Ignore */}\n\t    }\n\t    return data;\n\t  }],\n\t\n\t  timeout: 0,\n\t\n\t  xsrfCookieName: 'XSRF-TOKEN',\n\t  xsrfHeaderName: 'X-XSRF-TOKEN',\n\t\n\t  maxContentLength: -1,\n\t\n\t  validateStatus: function validateStatus(status) {\n\t    return status >= 200 && status < 300;\n\t  }\n\t};\n\t\n\tdefaults.headers = {\n\t  common: {\n\t    'Accept': 'application/json, text/plain, */*'\n\t  }\n\t};\n\t\n\tutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n\t  defaults.headers[method] = {};\n\t});\n\t\n\tutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n\t  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n\t});\n\t\n\tmodule.exports = defaults;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\tmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n\t  utils.forEach(headers, function processHeader(value, name) {\n\t    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n\t      headers[normalizedName] = value;\n\t      delete headers[name];\n\t    }\n\t  });\n\t};\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\tvar settle = __webpack_require__(24);\n\tvar buildURL = __webpack_require__(27);\n\tvar parseHeaders = __webpack_require__(28);\n\tvar isURLSameOrigin = __webpack_require__(29);\n\tvar createError = __webpack_require__(25);\n\tvar btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || __webpack_require__(30);\n\t\n\tmodule.exports = function xhrAdapter(config) {\n\t  return new Promise(function dispatchXhrRequest(resolve, reject) {\n\t    var requestData = config.data;\n\t    var requestHeaders = config.headers;\n\t\n\t    if (utils.isFormData(requestData)) {\n\t      delete requestHeaders['Content-Type']; // Let the browser set it\n\t    }\n\t\n\t    var request = new XMLHttpRequest();\n\t    var loadEvent = 'onreadystatechange';\n\t    var xDomain = false;\n\t\n\t    // For IE 8/9 CORS support\n\t    // Only supports POST and GET calls and doesn't returns the response headers.\n\t    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n\t    if ((\"production\") !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n\t      request = new window.XDomainRequest();\n\t      loadEvent = 'onload';\n\t      xDomain = true;\n\t      request.onprogress = function handleProgress() {};\n\t      request.ontimeout = function handleTimeout() {};\n\t    }\n\t\n\t    // HTTP basic authentication\n\t    if (config.auth) {\n\t      var username = config.auth.username || '';\n\t      var password = config.auth.password || '';\n\t      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n\t    }\n\t\n\t    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\t\n\t    // Set the request timeout in MS\n\t    request.timeout = config.timeout;\n\t\n\t    // Listen for ready state\n\t    request[loadEvent] = function handleLoad() {\n\t      if (!request || request.readyState !== 4 && !xDomain) {\n\t        return;\n\t      }\n\t\n\t      // The request errored out and we didn't get a response, this will be\n\t      // handled by onerror instead\n\t      // With one exception: request that using file: protocol, most browsers\n\t      // will return status as 0 even though it's a successful request\n\t      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n\t        return;\n\t      }\n\t\n\t      // Prepare the response\n\t      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n\t      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n\t      var response = {\n\t        data: responseData,\n\t        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n\t        status: request.status === 1223 ? 204 : request.status,\n\t        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n\t        headers: responseHeaders,\n\t        config: config,\n\t        request: request\n\t      };\n\t\n\t      settle(resolve, reject, response);\n\t\n\t      // Clean up request\n\t      request = null;\n\t    };\n\t\n\t    // Handle low level network errors\n\t    request.onerror = function handleError() {\n\t      // Real errors are hidden from us by the browser\n\t      // onerror should only fire if it's a network error\n\t      reject(createError('Network Error', config));\n\t\n\t      // Clean up request\n\t      request = null;\n\t    };\n\t\n\t    // Handle timeout\n\t    request.ontimeout = function handleTimeout() {\n\t      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\t\n\t      // Clean up request\n\t      request = null;\n\t    };\n\t\n\t    // Add xsrf header\n\t    // This is only done if running in a standard browser environment.\n\t    // Specifically not if we're in a web worker, or react-native.\n\t    if (utils.isStandardBrowserEnv()) {\n\t      var cookies = __webpack_require__(31);\n\t\n\t      // Add xsrf header\n\t      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\t\n\t      if (xsrfValue) {\n\t        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n\t      }\n\t    }\n\t\n\t    // Add headers to the request\n\t    if ('setRequestHeader' in request) {\n\t      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n\t        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n\t          // Remove Content-Type if data is undefined\n\t          delete requestHeaders[key];\n\t        } else {\n\t          // Otherwise add header to the request\n\t          request.setRequestHeader(key, val);\n\t        }\n\t      });\n\t    }\n\t\n\t    // Add withCredentials to request if needed\n\t    if (config.withCredentials) {\n\t      request.withCredentials = true;\n\t    }\n\t\n\t    // Add responseType to request if needed\n\t    if (config.responseType) {\n\t      try {\n\t        request.responseType = config.responseType;\n\t      } catch (e) {\n\t        if (request.responseType !== 'json') {\n\t          throw e;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Handle progress if needed\n\t    if (typeof config.onDownloadProgress === 'function') {\n\t      request.addEventListener('progress', config.onDownloadProgress);\n\t    }\n\t\n\t    // Not all browsers support upload events\n\t    if (typeof config.onUploadProgress === 'function' && request.upload) {\n\t      request.upload.addEventListener('progress', config.onUploadProgress);\n\t    }\n\t\n\t    if (config.cancelToken) {\n\t      // Handle cancellation\n\t      config.cancelToken.promise.then(function onCanceled(cancel) {\n\t        if (!request) {\n\t          return;\n\t        }\n\t\n\t        request.abort();\n\t        reject(cancel);\n\t        // Clean up request\n\t        request = null;\n\t      });\n\t    }\n\t\n\t    if (requestData === undefined) {\n\t      requestData = null;\n\t    }\n\t\n\t    // Send the request\n\t    request.send(requestData);\n\t  });\n\t};\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar createError = __webpack_require__(25);\n\t\n\t/**\n\t * Resolve or reject a Promise based on response status.\n\t *\n\t * @param {Function} resolve A function that resolves the promise.\n\t * @param {Function} reject A function that rejects the promise.\n\t * @param {object} response The response.\n\t */\n\tmodule.exports = function settle(resolve, reject, response) {\n\t  var validateStatus = response.config.validateStatus;\n\t  // Note: status is not exposed by XDomainRequest\n\t  if (!response.status || !validateStatus || validateStatus(response.status)) {\n\t    resolve(response);\n\t  } else {\n\t    reject(createError('Request failed with status code ' + response.status, response.config, null, response));\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar enhanceError = __webpack_require__(26);\n\t\n\t/**\n\t * Create an Error with the specified message, config, error code, and response.\n\t *\n\t * @param {string} message The error message.\n\t * @param {Object} config The config.\n\t * @param {string} [code] The error code (for example, 'ECONNABORTED').\n\t @ @param {Object} [response] The response.\n\t * @returns {Error} The created error.\n\t */\n\tmodule.exports = function createError(message, config, code, response) {\n\t  var error = new Error(message);\n\t  return enhanceError(error, config, code, response);\n\t};\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Update an Error with the specified config, error code, and response.\n\t *\n\t * @param {Error} error The error to update.\n\t * @param {Object} config The config.\n\t * @param {string} [code] The error code (for example, 'ECONNABORTED').\n\t @ @param {Object} [response] The response.\n\t * @returns {Error} The error.\n\t */\n\t\n\tmodule.exports = function enhanceError(error, config, code, response) {\n\t  error.config = config;\n\t  if (code) {\n\t    error.code = code;\n\t  }\n\t  error.response = response;\n\t  return error;\n\t};\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\tfunction encode(val) {\n\t  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\t}\n\t\n\t/**\n\t * Build a URL by appending params to the end\n\t *\n\t * @param {string} url The base of the url (e.g., http://www.google.com)\n\t * @param {object} [params] The params to be appended\n\t * @returns {string} The formatted url\n\t */\n\tmodule.exports = function buildURL(url, params, paramsSerializer) {\n\t  /*eslint no-param-reassign:0*/\n\t  if (!params) {\n\t    return url;\n\t  }\n\t\n\t  var serializedParams;\n\t  if (paramsSerializer) {\n\t    serializedParams = paramsSerializer(params);\n\t  } else if (utils.isURLSearchParams(params)) {\n\t    serializedParams = params.toString();\n\t  } else {\n\t    var parts = [];\n\t\n\t    utils.forEach(params, function serialize(val, key) {\n\t      if (val === null || typeof val === 'undefined') {\n\t        return;\n\t      }\n\t\n\t      if (utils.isArray(val)) {\n\t        key = key + '[]';\n\t      }\n\t\n\t      if (!utils.isArray(val)) {\n\t        val = [val];\n\t      }\n\t\n\t      utils.forEach(val, function parseValue(v) {\n\t        if (utils.isDate(v)) {\n\t          v = v.toISOString();\n\t        } else if (utils.isObject(v)) {\n\t          v = JSON.stringify(v);\n\t        }\n\t        parts.push(encode(key) + '=' + encode(v));\n\t      });\n\t    });\n\t\n\t    serializedParams = parts.join('&');\n\t  }\n\t\n\t  if (serializedParams) {\n\t    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n\t  }\n\t\n\t  return url;\n\t};\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\t/**\n\t * Parse headers into an object\n\t *\n\t * ```\n\t * Date: Wed, 27 Aug 2014 08:58:49 GMT\n\t * Content-Type: application/json\n\t * Connection: keep-alive\n\t * Transfer-Encoding: chunked\n\t * ```\n\t *\n\t * @param {String} headers Headers needing to be parsed\n\t * @returns {Object} Headers parsed into an object\n\t */\n\tmodule.exports = function parseHeaders(headers) {\n\t  var parsed = {};\n\t  var key;\n\t  var val;\n\t  var i;\n\t\n\t  if (!headers) {\n\t    return parsed;\n\t  }\n\t\n\t  utils.forEach(headers.split('\\n'), function parser(line) {\n\t    i = line.indexOf(':');\n\t    key = utils.trim(line.substr(0, i)).toLowerCase();\n\t    val = utils.trim(line.substr(i + 1));\n\t\n\t    if (key) {\n\t      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t    }\n\t  });\n\t\n\t  return parsed;\n\t};\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\tmodule.exports = utils.isStandardBrowserEnv() ?\n\t\n\t// Standard browser envs have full support of the APIs needed to test\n\t// whether the request URL is of the same origin as current location.\n\tfunction standardBrowserEnv() {\n\t  var msie = /(msie|trident)/i.test(navigator.userAgent);\n\t  var urlParsingNode = document.createElement('a');\n\t  var originURL;\n\t\n\t  /**\n\t  * Parse a URL to discover it's components\n\t  *\n\t  * @param {String} url The URL to be parsed\n\t  * @returns {Object}\n\t  */\n\t  function resolveURL(url) {\n\t    var href = url;\n\t\n\t    if (msie) {\n\t      // IE needs attribute set twice to normalize properties\n\t      urlParsingNode.setAttribute('href', href);\n\t      href = urlParsingNode.href;\n\t    }\n\t\n\t    urlParsingNode.setAttribute('href', href);\n\t\n\t    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\t    return {\n\t      href: urlParsingNode.href,\n\t      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n\t      host: urlParsingNode.host,\n\t      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n\t      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n\t      hostname: urlParsingNode.hostname,\n\t      port: urlParsingNode.port,\n\t      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n\t    };\n\t  }\n\t\n\t  originURL = resolveURL(window.location.href);\n\t\n\t  /**\n\t  * Determine if a URL shares the same origin as the current location\n\t  *\n\t  * @param {String} requestURL The URL to test\n\t  * @returns {boolean} True if URL shares the same origin, otherwise false\n\t  */\n\t  return function isURLSameOrigin(requestURL) {\n\t    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n\t    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n\t  };\n\t}() :\n\t\n\t// Non standard browser envs (web workers, react-native) lack needed support.\n\tfunction nonStandardBrowserEnv() {\n\t  return function isURLSameOrigin() {\n\t    return true;\n\t  };\n\t}();\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\t\n\tvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\tfunction E() {\n\t  this.message = 'String contains an invalid character';\n\t}\n\tE.prototype = new Error();\n\tE.prototype.code = 5;\n\tE.prototype.name = 'InvalidCharacterError';\n\t\n\tfunction btoa(input) {\n\t  var str = String(input);\n\t  var output = '';\n\t  for (\n\t  // initialize result and counter\n\t  var block, charCode, idx = 0, map = chars;\n\t  // if the next str index does not exist:\n\t  //   change the mapping table to \"=\"\n\t  //   check if d has no fractional digits\n\t  str.charAt(idx | 0) || (map = '=', idx % 1);\n\t  // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t  output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n\t    charCode = str.charCodeAt(idx += 3 / 4);\n\t    if (charCode > 0xFF) {\n\t      throw new E();\n\t    }\n\t    block = block << 8 | charCode;\n\t  }\n\t  return output;\n\t}\n\t\n\tmodule.exports = btoa;\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\tmodule.exports = utils.isStandardBrowserEnv() ?\n\t\n\t// Standard browser envs support document.cookie\n\tfunction standardBrowserEnv() {\n\t  return {\n\t    write: function write(name, value, expires, path, domain, secure) {\n\t      var cookie = [];\n\t      cookie.push(name + '=' + encodeURIComponent(value));\n\t\n\t      if (utils.isNumber(expires)) {\n\t        cookie.push('expires=' + new Date(expires).toGMTString());\n\t      }\n\t\n\t      if (utils.isString(path)) {\n\t        cookie.push('path=' + path);\n\t      }\n\t\n\t      if (utils.isString(domain)) {\n\t        cookie.push('domain=' + domain);\n\t      }\n\t\n\t      if (secure === true) {\n\t        cookie.push('secure');\n\t      }\n\t\n\t      document.cookie = cookie.join('; ');\n\t    },\n\t\n\t    read: function read(name) {\n\t      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n\t      return match ? decodeURIComponent(match[3]) : null;\n\t    },\n\t\n\t    remove: function remove(name) {\n\t      this.write(name, '', Date.now() - 86400000);\n\t    }\n\t  };\n\t}() :\n\t\n\t// Non standard browser env (web workers, react-native) lack needed support.\n\tfunction nonStandardBrowserEnv() {\n\t  return {\n\t    write: function write() {},\n\t    read: function read() {\n\t      return null;\n\t    },\n\t    remove: function remove() {}\n\t  };\n\t}();\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\tfunction InterceptorManager() {\n\t  this.handlers = [];\n\t}\n\t\n\t/**\n\t * Add a new interceptor to the stack\n\t *\n\t * @param {Function} fulfilled The function to handle `then` for a `Promise`\n\t * @param {Function} rejected The function to handle `reject` for a `Promise`\n\t *\n\t * @return {Number} An ID used to remove interceptor later\n\t */\n\tInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n\t  this.handlers.push({\n\t    fulfilled: fulfilled,\n\t    rejected: rejected\n\t  });\n\t  return this.handlers.length - 1;\n\t};\n\t\n\t/**\n\t * Remove an interceptor from the stack\n\t *\n\t * @param {Number} id The ID that was returned by `use`\n\t */\n\tInterceptorManager.prototype.eject = function eject(id) {\n\t  if (this.handlers[id]) {\n\t    this.handlers[id] = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Iterate over all the registered interceptors\n\t *\n\t * This method is particularly useful for skipping over any\n\t * interceptors that may have become `null` calling `eject`.\n\t *\n\t * @param {Function} fn The function to call for each interceptor\n\t */\n\tInterceptorManager.prototype.forEach = function forEach(fn) {\n\t  utils.forEach(this.handlers, function forEachHandler(h) {\n\t    if (h !== null) {\n\t      fn(h);\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = InterceptorManager;\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\tvar transformData = __webpack_require__(34);\n\tvar isCancel = __webpack_require__(35);\n\tvar defaults = __webpack_require__(21);\n\t\n\t/**\n\t * Throws a `Cancel` if cancellation has been requested.\n\t */\n\tfunction throwIfCancellationRequested(config) {\n\t  if (config.cancelToken) {\n\t    config.cancelToken.throwIfRequested();\n\t  }\n\t}\n\t\n\t/**\n\t * Dispatch a request to the server using the configured adapter.\n\t *\n\t * @param {object} config The config that is to be used for the request\n\t * @returns {Promise} The Promise to be fulfilled\n\t */\n\tmodule.exports = function dispatchRequest(config) {\n\t  throwIfCancellationRequested(config);\n\t\n\t  // Ensure headers exist\n\t  config.headers = config.headers || {};\n\t\n\t  // Transform request data\n\t  config.data = transformData(config.data, config.headers, config.transformRequest);\n\t\n\t  // Flatten headers\n\t  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n\t\n\t  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n\t    delete config.headers[method];\n\t  });\n\t\n\t  var adapter = config.adapter || defaults.adapter;\n\t\n\t  return adapter(config).then(function onAdapterResolution(response) {\n\t    throwIfCancellationRequested(config);\n\t\n\t    // Transform response data\n\t    response.data = transformData(response.data, response.headers, config.transformResponse);\n\t\n\t    return response;\n\t  }, function onAdapterRejection(reason) {\n\t    if (!isCancel(reason)) {\n\t      throwIfCancellationRequested(config);\n\t\n\t      // Transform response data\n\t      if (reason && reason.response) {\n\t        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n\t      }\n\t    }\n\t\n\t    return Promise.reject(reason);\n\t  });\n\t};\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(18);\n\t\n\t/**\n\t * Transform the data for a request or a response\n\t *\n\t * @param {Object|String} data The data to be transformed\n\t * @param {Array} headers The headers for the request or response\n\t * @param {Array|Function} fns A single function or Array of functions\n\t * @returns {*} The resulting transformed data\n\t */\n\tmodule.exports = function transformData(data, headers, fns) {\n\t  /*eslint no-param-reassign:0*/\n\t  utils.forEach(fns, function transform(fn) {\n\t    data = fn(data, headers);\n\t  });\n\t\n\t  return data;\n\t};\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function isCancel(value) {\n\t  return !!(value && value.__CANCEL__);\n\t};\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Determines whether the specified URL is absolute\n\t *\n\t * @param {string} url The URL to test\n\t * @returns {boolean} True if the specified URL is absolute, otherwise false\n\t */\n\t\n\tmodule.exports = function isAbsoluteURL(url) {\n\t  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n\t  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n\t  // by any combination of letters, digits, plus, period, or hyphen.\n\t  return (/^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n\t  );\n\t};\n\n/***/ }),\n\n/***/ 37:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Creates a new URL by combining the specified URLs\n\t *\n\t * @param {string} baseURL The base URL\n\t * @param {string} relativeURL The relative URL\n\t * @returns {string} The combined URL\n\t */\n\t\n\tmodule.exports = function combineURLs(baseURL, relativeURL) {\n\t  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n\t};\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * A `Cancel` is an object that is thrown when an operation is canceled.\n\t *\n\t * @class\n\t * @param {string=} message The message.\n\t */\n\t\n\tfunction Cancel(message) {\n\t  this.message = message;\n\t}\n\t\n\tCancel.prototype.toString = function toString() {\n\t  return 'Cancel' + (this.message ? ': ' + this.message : '');\n\t};\n\t\n\tCancel.prototype.__CANCEL__ = true;\n\t\n\tmodule.exports = Cancel;\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Cancel = __webpack_require__(38);\n\t\n\t/**\n\t * A `CancelToken` is an object that can be used to request cancellation of an operation.\n\t *\n\t * @class\n\t * @param {Function} executor The executor function.\n\t */\n\tfunction CancelToken(executor) {\n\t  if (typeof executor !== 'function') {\n\t    throw new TypeError('executor must be a function.');\n\t  }\n\t\n\t  var resolvePromise;\n\t  this.promise = new Promise(function promiseExecutor(resolve) {\n\t    resolvePromise = resolve;\n\t  });\n\t\n\t  var token = this;\n\t  executor(function cancel(message) {\n\t    if (token.reason) {\n\t      // Cancellation has already been requested\n\t      return;\n\t    }\n\t\n\t    token.reason = new Cancel(message);\n\t    resolvePromise(token.reason);\n\t  });\n\t}\n\t\n\t/**\n\t * Throws a `Cancel` if cancellation has been requested.\n\t */\n\tCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n\t  if (this.reason) {\n\t    throw this.reason;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns an object that contains a new `CancelToken` and a function that, when called,\n\t * cancels the `CancelToken`.\n\t */\n\tCancelToken.source = function source() {\n\t  var cancel;\n\t  var token = new CancelToken(function executor(c) {\n\t    cancel = c;\n\t  });\n\t  return {\n\t    token: token,\n\t    cancel: cancel\n\t  };\n\t};\n\t\n\tmodule.exports = CancelToken;\n\n/***/ }),\n\n/***/ 40:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Syntactic sugar for invoking a function and expanding an array for arguments.\n\t *\n\t * Common use case would be to use `Function.prototype.apply`.\n\t *\n\t *  ```js\n\t *  function f(x, y, z) {}\n\t *  var args = [1, 2, 3];\n\t *  f.apply(null, args);\n\t *  ```\n\t *\n\t * With `spread` this example can be re-written.\n\t *\n\t *  ```js\n\t *  spread(function(x, y, z) {})([1, 2, 3]);\n\t *  ```\n\t *\n\t * @param {Function} callback\n\t * @returns {Function}\n\t */\n\t\n\tmodule.exports = function spread(callback) {\n\t  return function wrap(arr) {\n\t    return callback.apply(null, arr);\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 41:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t * JavaScript Cookie v2.2.0\n\t * https://github.com/js-cookie/js-cookie\n\t *\n\t * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n\t * Released under the MIT license\n\t */\n\t;(function (factory) {\n\t\tvar registeredInModuleLoader = false;\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\tregisteredInModuleLoader = true;\n\t\t}\n\t\tif (( false ? 'undefined' : _typeof(exports)) === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t\tregisteredInModuleLoader = true;\n\t\t}\n\t\tif (!registeredInModuleLoader) {\n\t\t\tvar OldCookies = window.Cookies;\n\t\t\tvar api = window.Cookies = factory();\n\t\t\tapi.noConflict = function () {\n\t\t\t\twindow.Cookies = OldCookies;\n\t\t\t\treturn api;\n\t\t\t};\n\t\t}\n\t})(function () {\n\t\tfunction extend() {\n\t\t\tvar i = 0;\n\t\t\tvar result = {};\n\t\t\tfor (; i < arguments.length; i++) {\n\t\t\t\tvar attributes = arguments[i];\n\t\t\t\tfor (var key in attributes) {\n\t\t\t\t\tresult[key] = attributes[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction init(converter) {\n\t\t\tfunction api(key, value, attributes) {\n\t\t\t\tvar result;\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Write\n\t\n\t\t\t\tif (arguments.length > 1) {\n\t\t\t\t\tattributes = extend({\n\t\t\t\t\t\tpath: '/'\n\t\t\t\t\t}, api.defaults, attributes);\n\t\n\t\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\n\t\t\t\t\tif (!converter.write) {\n\t\t\t\t\t\tvalue = encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\t\n\t\t\t\t\tvar stringifiedAttributes = '';\n\t\n\t\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t\t}\n\t\t\t\t\treturn document.cookie = key + '=' + value + stringifiedAttributes;\n\t\t\t\t}\n\t\n\t\t\t\t// Read\n\t\n\t\t\t\tif (!key) {\n\t\t\t\t\tresult = {};\n\t\t\t\t}\n\t\n\t\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t\t// calling \"get()\"\n\t\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\t\tvar cookie = parts.slice(1).join('=');\n\t\n\t\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\t\tcookie = converter.read ? converter.read(cookie, name) : converter(cookie, name) || cookie.replace(rdecode, decodeURIComponent);\n\t\n\t\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (!key) {\n\t\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\n\t\t\tapi.set = api;\n\t\t\tapi.get = function (key) {\n\t\t\t\treturn api.call(api, key);\n\t\t\t};\n\t\t\tapi.getJSON = function () {\n\t\t\t\treturn api.apply({\n\t\t\t\t\tjson: true\n\t\t\t\t}, [].slice.call(arguments));\n\t\t\t};\n\t\t\tapi.defaults = {};\n\t\n\t\t\tapi.remove = function (key, attributes) {\n\t\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\t\texpires: -1\n\t\t\t\t}));\n\t\t\t};\n\t\n\t\t\tapi.withConverter = init;\n\t\n\t\t\treturn api;\n\t\t}\n\t\n\t\treturn init(function () {});\n\t});\n\n/***/ }),\n\n/***/ 281:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _document = __webpack_require__(12);\n\t\n\tvar _document2 = _interopRequireDefault(_document);\n\t\n\tvar _axios = __webpack_require__(15);\n\t\n\tvar _axios2 = _interopRequireDefault(_axios);\n\t\n\tvar _rsvp = __webpack_require__(7);\n\t\n\tvar _es6Promise = __webpack_require__(3);\n\t\n\tvar _es6Promise2 = _interopRequireDefault(_es6Promise);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Svg4EveryBody = function Svg4EveryBody() {\n\t  var _this = this;\n\t\n\t  _classCallCheck(this, Svg4EveryBody);\n\t\n\t  this.init = function () {\n\t    _es6Promise2.default.polyfill();\n\t\n\t    if (_this.polyDetect()) {\n\t      _this.polyFill();\n\t\n\t      setInterval(function () {\n\t        _this.polyFill();\n\t      }, 5000);\n\t    }\n\t  };\n\t\n\t  this.polyDetect = function () {\n\t    var userAgent = navigator.userAgent;\n\t    var olderIEUA = /\\bMSIE [1-8]\\.0\\b/;\n\t    var newerIeua = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/;\n\t    var webkitUa = /\\bAppleWebKit\\/(\\d+)\\b/;\n\t    var olderEdgeUa = /\\bEdge\\/12\\.(\\d+)\\b/;\n\t    var edgeUa = /\\bEdge\\/.(\\d+)\\b/;\n\t    var inIFrame = window.top !== window.self;\n\t    var huaWeiBrowser = /\\bHUAWEI\\b/;\n\t\n\t    return olderIEUA.test(userAgent) || newerIeua.test(userAgent) || (userAgent.match(olderEdgeUa) || [])[1] < 10547 || (userAgent.match(webkitUa) || [])[1] < 537 || edgeUa.test(userAgent) && inIFrame || (userAgent.match(webkitUa) || [])[1] < 538 && huaWeiBrowser.test(userAgent);\n\t  };\n\t\n\t  this.polyFill = function () {\n\t    var files = _document2.default.querySelectorAll('use');\n\t\n\t    if (!files) {\n\t      return false;\n\t    }\n\t\n\t    [].slice.call(files).map(function (file) {\n\t      var fullPosition = file.getAttribute('xlink:href');\n\t      var url = fullPosition.split('#')[0];\n\t      var svgName = fullPosition.split('#')[1];\n\t\n\t      if (url && Object.keys(_this.state.list).indexOf(url) === -1) {\n\t        _this.state.list[url] = [svgName];\n\t      } else if (url && svgName && _this.state.list[url].indexOf(svgName) === -1) {\n\t        _this.state.list[url].push(svgName);\n\t      }\n\t\n\t      return true;\n\t    });\n\t\n\t    if (!_this.state.updating && Object.keys(_this.state.list).length > 0) {\n\t      _this.updateState();\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  this.updateState = function () {\n\t    var fileNames = Object.keys(_this.state.list);\n\t    var svgLoad = [];\n\t\n\t    _this.state.updating = true;\n\t\n\t    fileNames.map(function (svg) {\n\t      var promise = new _rsvp.Promise(function (resolve) {\n\t        _axios2.default.get(svg, {\n\t          timeout: 2000\n\t        }).then(function (response) {\n\t          var container = _document2.default.implementation.createHTMLDocument('');\n\t          container.body.innerHTML = response.data;\n\t\n\t          if (!_this.state.data[svg]) {\n\t            _this.state.data[svg] = {};\n\t          }\n\t\n\t          _this.state.list[svg].map(function (id) {\n\t            var element = container.getElementById(id);\n\t\n\t            if (element && !_this.state.data[svg][id]) {\n\t              _this.state.data[svg][id] = element;\n\t            }\n\t\n\t            return true;\n\t          });\n\t          resolve();\n\t        }).catch(function () {\n\t          resolve();\n\t        });\n\t      });\n\t      svgLoad.push(promise);\n\t\n\t      return true;\n\t    });\n\t\n\t    (0, _rsvp.all)(svgLoad).then(function () {\n\t      _this.updateDom();\n\t    });\n\t  };\n\t\n\t  this.updateDom = function () {\n\t    var nodes = _document2.default.querySelectorAll('use');\n\t    [].slice.call(nodes).map(function (node) {\n\t      var position = node.getAttribute('xlink:href');\n\t\n\t      if (!position) {\n\t        return false;\n\t      }\n\t      var url = position.split('#')[0];\n\t      var name = position.split('#')[1];\n\t\n\t      var data = _this.state.data[url] ? _this.state.data[url][name] : null;\n\t      if (data) {\n\t        _this.embed(node.parentNode, node, data);\n\t      }\n\t\n\t      return true;\n\t    });\n\t\n\t    _this.state = {\n\t      list: {},\n\t      data: {},\n\t      updating: false\n\t    };\n\t  };\n\t\n\t  this.embed = function (parent, svg, target) {\n\t    if (target) {\n\t      var fragment = _document2.default.createDocumentFragment();\n\t      var viewBox = !svg.hasAttribute('viewBox') && target.getAttribute('viewBox');\n\t\n\t      if (viewBox) {\n\t        parent.setAttribute('viewBox', viewBox);\n\t      }\n\t\n\t      for (var clone = target.cloneNode(!0); clone.childNodes.length;) {\n\t        fragment.appendChild(clone.firstChild);\n\t      }\n\t      parent.removeChild(svg);\n\t      parent.appendChild(fragment);\n\t    }\n\t  };\n\t\n\t  this.state = {\n\t    list: {},\n\t    data: {},\n\t    updating: false\n\t  };\n\t};\n\t\n\texports.default = Svg4EveryBody;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n/******/ })))\n});\n;\n\n\n// WEBPACK FOOTER //\n// svg4everybody/svg4everybody.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7475bff11b25f6b898b5","import Svg4everybody from '~components/svg4everybody/js/svg4everybody';\n\nconst svg4everybody = new Svg4everybody();\nsvg4everybody.init();\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/svg4everybody/index.js","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.6+9869a4bc\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n\n\n// WEBPACK FOOTER //\n// ./~/es6-promise/dist/es6-promise.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n// WEBPACK FOOTER //\n// ./~/node-libs-browser/~/process/browser.js","/*!\n * @overview RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2016 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.6.2\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.RSVP = global.RSVP || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction indexOf(callbacks, callback) {\n  for (var i = 0, l = callbacks.length; i < l; i++) {\n    if (callbacks[i] === callback) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction callbacksFor(object) {\n  var callbacks = object._promiseCallbacks;\n\n  if (!callbacks) {\n    callbacks = object._promiseCallbacks = {};\n  }\n\n  return callbacks;\n}\n\n/**\n  @class RSVP.EventTarget\n*/\nvar EventTarget = {\n\n  /**\n    `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n    Example:\n     ```javascript\n    let object = {};\n     RSVP.EventTarget.mixin(object);\n     object.on('finished', function(event) {\n      // handle event\n    });\n     object.trigger('finished', { detail: value });\n    ```\n     `EventTarget.mixin` also works with prototypes:\n     ```javascript\n    let Person = function() {};\n    RSVP.EventTarget.mixin(Person.prototype);\n     let yehuda = new Person();\n    let tom = new Person();\n     yehuda.on('poke', function(event) {\n\n    });\n     tom.on('poke', function(event) {\n\n    });\n     yehuda.trigger('poke');\n    tom.trigger('poke');\n    ```\n     @method mixin\n    @for RSVP.EventTarget\n    @private\n    @param {Object} object object to extend with EventTarget methods\n  */\n  mixin: function (object) {\n    object['on'] = this['on'];\n    object['off'] = this['off'];\n    object['trigger'] = this['trigger'];\n    object._promiseCallbacks = undefined;\n    return object;\n  },\n\n\n  /**\n    Registers a callback to be executed when `eventName` is triggered\n     ```javascript\n    object.on('event', function(eventInfo){\n      // handle the event\n    });\n     object.trigger('event');\n    ```\n     @method on\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName name of the event to listen for\n    @param {Function} callback function to be called when the event is triggered.\n  */\n  on: function (eventName, callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n\n    var allCallbacks = callbacksFor(this),\n        callbacks = void 0;\n\n    callbacks = allCallbacks[eventName];\n\n    if (!callbacks) {\n      callbacks = allCallbacks[eventName] = [];\n    }\n\n    if (indexOf(callbacks, callback) === -1) {\n      callbacks.push(callback);\n    }\n  },\n\n\n  /**\n    You can use `off` to stop firing a particular callback for an event:\n     ```javascript\n    function doStuff() { // do stuff! }\n    object.on('stuff', doStuff);\n     object.trigger('stuff'); // doStuff will be called\n     // Unregister ONLY the doStuff callback\n    object.off('stuff', doStuff);\n    object.trigger('stuff'); // doStuff will NOT be called\n    ```\n     If you don't pass a `callback` argument to `off`, ALL callbacks for the\n    event will not be executed when the event fires. For example:\n     ```javascript\n    let callback1 = function(){};\n    let callback2 = function(){};\n     object.on('stuff', callback1);\n    object.on('stuff', callback2);\n     object.trigger('stuff'); // callback1 and callback2 will be executed.\n     object.off('stuff');\n    object.trigger('stuff'); // callback1 and callback2 will not be executed!\n    ```\n     @method off\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName event to stop listening to\n    @param {Function} callback optional argument. If given, only the function\n    given will be removed from the event's callback queue. If no `callback`\n    argument is given, all callbacks will be removed from the event's callback\n    queue.\n  */\n  off: function (eventName, callback) {\n    var allCallbacks = callbacksFor(this),\n        callbacks = void 0,\n        index = void 0;\n\n    if (!callback) {\n      allCallbacks[eventName] = [];\n      return;\n    }\n\n    callbacks = allCallbacks[eventName];\n\n    index = indexOf(callbacks, callback);\n\n    if (index !== -1) {\n      callbacks.splice(index, 1);\n    }\n  },\n\n\n  /**\n    Use `trigger` to fire custom events. For example:\n     ```javascript\n    object.on('foo', function(){\n\n    });\n    object.trigger('foo');\n    // 'foo event happened!' logged to the console\n    ```\n     You can also pass a value as a second argument to `trigger` that will be\n    passed as an argument to all event listeners for the event:\n     ```javascript\n    object.on('foo', function(value){\n\n    });\n     object.trigger('foo', { name: 'bar' });\n    // 'bar' logged to the console\n    ```\n     @method trigger\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName name of the event to be triggered\n    @param {*} options optional value to be passed to any event handlers for\n    the given `eventName`\n  */\n  trigger: function (eventName, options, label) {\n    var allCallbacks = callbacksFor(this),\n        callbacks = void 0,\n        callback = void 0;\n\n    if (callbacks = allCallbacks[eventName]) {\n      // Don't cache the callbacks.length since it may grow\n      for (var i = 0; i < callbacks.length; i++) {\n        callback = callbacks[i];\n\n        callback(options, label);\n      }\n    }\n  }\n};\n\nvar config = {\n  instrument: false\n};\n\nEventTarget['mixin'](config);\n\nfunction configure(name, value) {\n  if (arguments.length === 2) {\n    config[name] = value;\n  } else {\n    return config[name];\n  }\n}\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isObject(x) {\n  return x !== null && typeof x === 'object';\n}\n\nfunction isMaybeThenable(x) {\n  return x !== null && typeof x === 'object';\n}\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\n// Date.now is not available in browsers < IE9\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\nvar now = Date.now || function () {\n  return new Date().getTime();\n};\n\nvar queue = [];\n\nfunction scheduleFlush() {\n  setTimeout(function () {\n    for (var i = 0; i < queue.length; i++) {\n      var entry = queue[i];\n\n      var payload = entry.payload;\n\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n\n      config['trigger'](entry.name, entry.payload);\n    }\n    queue.length = 0;\n  }, 50);\n}\n\nfunction instrument(eventName, promise, child) {\n  if (1 === queue.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id: promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    } })) {\n    scheduleFlush();\n  }\n}\n\n/**\n  `RSVP.Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new RSVP.Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = RSVP.Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {*} object value that the returned promise will be resolved with\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop, label);\n  resolve(promise, object);\n  return promise;\n}\n\nfunction withOwnPromise() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  config.async(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value, undefined);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    thenable._onError = null;\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      if (thenable !== value) {\n        resolve(promise, value, undefined);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  var isOwnThenable = maybeThenable.constructor === promise.constructor && then$$1 === then && promise.constructor.resolve === resolve$1;\n\n  if (isOwnThenable) {\n    handleOwnThenable(promise, maybeThenable);\n  } else if (then$$1 === GET_THEN_ERROR) {\n    reject(promise, GET_THEN_ERROR.error);\n    GET_THEN_ERROR.error = null;\n  } else if (isFunction(then$$1)) {\n    handleForeignThenable(promise, maybeThenable, then$$1);\n  } else {\n    fulfill(promise, maybeThenable);\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    fulfill(promise, value);\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onError) {\n    promise._onError(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length === 0) {\n    if (config.instrument) {\n      instrument('fulfilled', promise);\n    }\n  } else {\n    config.async(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n  config.async(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var subscribers = parent._subscribers;\n  var length = subscribers.length;\n\n  parent._onError = null;\n\n  subscribers[length] = child;\n  subscribers[length + FULFILLED] = onFulfillment;\n  subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    config.async(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (config.instrument) {\n    instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);\n  }\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      result = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, result);\n    } else {\n      callback(result);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, result) {\n  try {\n    return callback(result);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(state, promise, callback, result) {\n  var hasCallback = isFunction(callback);\n  var value = void 0,\n      error = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, result);\n\n    if (value === TRY_CATCH_ERROR) {\n      error = value.error;\n      value.error = null; // release\n    } else if (value === promise) {\n      reject(promise, withOwnPromise());\n      return;\n    }\n  } else {\n    value = result;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && error === undefined) {\n    resolve(promise, value);\n  } else if (error !== undefined) {\n    reject(promise, error);\n  } else if (state === FULFILLED) {\n    fulfill(promise, value);\n  } else if (state === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  var resolved = false;\n  try {\n    resolver(function (value) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      resolve(promise, value);\n    }, function (reason) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nfunction then(onFulfillment, onRejection, label) {\n  var parent = this;\n  var state = parent._state;\n\n  if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {\n    config.instrument && instrument('chained', parent, parent);\n    return parent;\n  }\n\n  parent._onError = null;\n\n  var child = new parent.constructor(noop, label);\n  var result = parent._result;\n\n  config.instrument && instrument('chained', parent, child);\n\n  if (state === PENDING) {\n    subscribe(parent, child, onFulfillment, onRejection);\n  } else {\n    var callback = state === FULFILLED ? onFulfillment : onRejection;\n    config.async(function () {\n      return invokeCallback(state, child, callback, result);\n    });\n  }\n\n  return child;\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input, abortOnReject, label) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop, label);\n    this._abortOnReject = abortOnReject;\n\n    this._init.apply(this, arguments);\n  }\n\n  Enumerator.prototype._init = function _init(Constructor, input) {\n    var len = input.length || 0;\n    this.length = len;\n    this._remaining = len;\n    this._result = new Array(len);\n\n    this._enumerate(input);\n    if (this._remaining === 0) {\n      fulfill(this.promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    var length = this.length;\n    var promise = this.promise;\n\n    for (var i = 0; promise._state === PENDING && i < length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._settleMaybeThenable = function _settleMaybeThenable(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n    if (resolve$$1 === resolve$1) {\n      var then$$1 = getThen(entry);\n\n      if (then$$1 === then && entry._state !== PENDING) {\n        entry._onError = null;\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof then$$1 !== 'function') {\n        this._remaining--;\n        this._result[i] = this._makeResult(FULFILLED, i, entry);\n      } else if (c === Promise) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, then$$1);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    if (isMaybeThenable(entry)) {\n      this._settleMaybeThenable(entry, i);\n    } else {\n      this._remaining--;\n      this._result[i] = this._makeResult(FULFILLED, i, entry);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n    if (promise._state === PENDING) {\n      if (this._abortOnReject && state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult(state, i, value);\n        if (this._remaining === 0) {\n          fulfill(promise, this._result);\n        }\n      }\n    }\n  };\n\n  Enumerator.prototype._makeResult = function _makeResult(state, i, value) {\n    return value;\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\nfunction makeSettledResult(state, position, value) {\n  if (state === FULFILLED) {\n    return {\n      state: 'fulfilled',\n      value: value\n    };\n  } else {\n    return {\n      state: 'rejected',\n      reason: value\n    };\n  }\n}\n\n/**\n  `RSVP.Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error(\"2\"));\n  let promise3 = RSVP.reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries, label) {\n  if (!isArray(entries)) {\n    return this.reject(new TypeError(\"Promise.all must be called with an array\"), label);\n  }\n  return new Enumerator(this, entries, true /* abort on reject */, label).promise;\n}\n\n/**\n  `RSVP.Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  RSVP.Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `RSVP.Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  RSVP.Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  RSVP.Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} entries array of promises to observe\n  @param {String} label optional string for describing the promise returned.\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  var promise = new Constructor(noop, label);\n\n  if (!isArray(entries)) {\n    reject(promise, new TypeError('Promise.race must be called with an array'));\n    return promise;\n  }\n\n  for (var i = 0; promise._state === PENDING && i < entries.length; i++) {\n    subscribe(Constructor.resolve(entries[i]), undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n\n  return promise;\n}\n\n/**\n  `RSVP.Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new RSVP.Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = RSVP.Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop, label);\n  reject(promise, reason);\n  return promise;\n}\n\nvar guidKey = 'rsvp_' + now() + '-';\nvar counter = 0;\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise’s eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class RSVP.Promise\n  @param {function} resolver\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise = function () {\n  function Promise(resolver, label) {\n    this._id = counter++;\n    this._label = label;\n    this._state = undefined;\n    this._result = undefined;\n    this._subscribers = [];\n\n    config.instrument && instrument('created', this);\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  Promise.prototype._onError = function _onError(reason) {\n    var _this = this;\n\n    config.after(function () {\n      if (_this._onError) {\n        config.trigger('error', reason, _this._label);\n      }\n    });\n  };\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn\\'t find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection, label) {\n    return this.then(undefined, onRejection, label);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuthor();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuthor();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @param {String} label optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback, label) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    }, label);\n  };\n\n  return Promise;\n}();\n\n\n\nPromise.cast = resolve$1; // deprecated\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve$1;\nPromise.reject = reject$1;\n\nPromise.prototype._guidKey = guidKey;\n\n/**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n\n  ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n\n  Chaining\n  --------\n\n  The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n\n  ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n\n  findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we\\'re unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we\\'re unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n  ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n\n  Assimilation\n  ------------\n\n  Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n\n  If the assimliated promise rejects, then the downstream promise will also reject.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n\n  Simple Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let result;\n\n  try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n\n  Advanced Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let author, books;\n\n  try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n\n  function foundBooks(books) {\n\n  }\n\n  function failure(reason) {\n\n  }\n\n  findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n\n  @method then\n  @param {Function} onFulfillment\n  @param {Function} onRejection\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise}\n*/\nPromise.prototype.then = then;\n\nfunction Result() {\n  this.value = undefined;\n}\n\nvar ERROR = new Result();\nvar GET_THEN_ERROR$1 = new Result();\n\nfunction getThen$1(obj) {\n  try {\n    return obj.then;\n  } catch (error) {\n    ERROR.value = error;\n    return ERROR;\n  }\n}\n\nfunction tryApply(f, s, a) {\n  try {\n    f.apply(s, a);\n  } catch (error) {\n    ERROR.value = error;\n    return ERROR;\n  }\n}\n\nfunction makeObject(_, argumentNames) {\n  var obj = {};\n  var length = _.length;\n  var args = new Array(length);\n\n  for (var x = 0; x < length; x++) {\n    args[x] = _[x];\n  }\n\n  for (var i = 0; i < argumentNames.length; i++) {\n    var name = argumentNames[i];\n    obj[name] = args[i + 1];\n  }\n\n  return obj;\n}\n\nfunction arrayResult(_) {\n  var length = _.length;\n  var args = new Array(length - 1);\n\n  for (var i = 1; i < length; i++) {\n    args[i - 1] = _[i];\n  }\n\n  return args;\n}\n\nfunction wrapThenable(then, promise) {\n  return {\n    then: function (onFulFillment, onRejection) {\n      return then.call(promise, onFulFillment, onRejection);\n    }\n  };\n}\n\n/**\n  `RSVP.denodeify` takes a 'node-style' function and returns a function that\n  will return an `RSVP.Promise`. You can use `denodeify` in Node.js or the\n  browser when you'd prefer to use promises over using callbacks. For example,\n  `denodeify` transforms the following:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) return handleError(err);\n    handleData(data);\n  });\n  ```\n\n  into:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = RSVP.denodeify(fs.readFile);\n\n  readFile('myfile.txt').then(handleData, handleError);\n  ```\n\n  If the node function has multiple success parameters, then `denodeify`\n  just returns the first one:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'));\n\n  request('http://example.com').then(function(res) {\n    // ...\n  });\n  ```\n\n  However, if you need all success parameters, setting `denodeify`'s\n  second parameter to `true` causes it to return all success parameters\n  as an array:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'), true);\n\n  request('http://example.com').then(function(result) {\n    // result[0] -> res\n    // result[1] -> body\n  });\n  ```\n\n  Or if you pass it an array with names it returns the parameters as a hash:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'), ['res', 'body']);\n\n  request('http://example.com').then(function(result) {\n    // result.res\n    // result.body\n  });\n  ```\n\n  Sometimes you need to retain the `this`:\n\n  ```javascript\n  let app = require('express')();\n  let render = RSVP.denodeify(app.render.bind(app));\n  ```\n\n  The denodified function inherits from the original function. It works in all\n  environments, except IE 10 and below. Consequently all properties of the original\n  function are available to you. However, any properties you change on the\n  denodeified function won't be changed on the original function. Example:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request')),\n      cookieJar = request.jar(); // <- Inheritance is used here\n\n  request('http://example.com', {jar: cookieJar}).then(function(res) {\n    // cookieJar.cookies holds now the cookies returned by example.com\n  });\n  ```\n\n  Using `denodeify` makes it easier to compose asynchronous operations instead\n  of using callbacks. For example, instead of:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) { ... } // Handle error\n    fs.writeFile('myfile2.txt', data, function(err){\n      if (err) { ... } // Handle error\n    });\n  });\n  ```\n\n  you can chain the operations together using `then` from the returned promise:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = RSVP.denodeify(fs.readFile);\n  let writeFile = RSVP.denodeify(fs.writeFile);\n\n  readFile('myfile.txt').then(function(data){\n    return writeFile('myfile2.txt', data);\n  }).then(function(){\n  }).catch(function(error){\n    // Handle error\n  });\n  ```\n\n  @method denodeify\n  @static\n  @for RSVP\n  @param {Function} nodeFunc a 'node-style' function that takes a callback as\n  its last argument. The callback expects an error to be passed as its first\n  argument (if an error occurred, otherwise null), and the value from the\n  operation as its second argument ('function(err, value){ }').\n  @param {Boolean|Array} [options] An optional paramter that if set\n  to `true` causes the promise to fulfill with the callback's success arguments\n  as an array. This is useful if the node function has multiple success\n  paramters. If you set this paramter to an array with names, the promise will\n  fulfill with a hash with these names as keys and the success parameters as\n  values.\n  @return {Function} a function that wraps `nodeFunc` to return an\n  `RSVP.Promise`\n  @static\n*/\nfunction denodeify(nodeFunc, options) {\n  var fn = function () {\n    var self = this;\n    var l = arguments.length;\n    var args = new Array(l + 1);\n    var promiseInput = false;\n\n    for (var i = 0; i < l; ++i) {\n      var arg = arguments[i];\n\n      if (!promiseInput) {\n        // TODO: clean this up\n        promiseInput = needsPromiseInput(arg);\n        if (promiseInput === GET_THEN_ERROR$1) {\n          var p = new Promise(noop);\n          reject(p, GET_THEN_ERROR$1.value);\n          return p;\n        } else if (promiseInput && promiseInput !== true) {\n          arg = wrapThenable(promiseInput, arg);\n        }\n      }\n      args[i] = arg;\n    }\n\n    var promise = new Promise(noop);\n\n    args[l] = function (err, val) {\n      if (err) reject(promise, err);else if (options === undefined) resolve(promise, val);else if (options === true) resolve(promise, arrayResult(arguments));else if (isArray(options)) resolve(promise, makeObject(arguments, options));else resolve(promise, val);\n    };\n\n    if (promiseInput) {\n      return handlePromiseInput(promise, args, nodeFunc, self);\n    } else {\n      return handleValueInput(promise, args, nodeFunc, self);\n    }\n  };\n\n  fn.__proto__ = nodeFunc;\n\n  return fn;\n}\n\nfunction handleValueInput(promise, args, nodeFunc, self) {\n  var result = tryApply(nodeFunc, self, args);\n  if (result === ERROR) {\n    reject(promise, result.value);\n  }\n  return promise;\n}\n\nfunction handlePromiseInput(promise, args, nodeFunc, self) {\n  return Promise.all(args).then(function (args) {\n    var result = tryApply(nodeFunc, self, args);\n    if (result === ERROR) {\n      reject(promise, result.value);\n    }\n    return promise;\n  });\n}\n\nfunction needsPromiseInput(arg) {\n  if (arg && typeof arg === 'object') {\n    if (arg.constructor === Promise) {\n      return true;\n    } else {\n      return getThen$1(arg);\n    }\n  } else {\n    return false;\n  }\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.all`.\n\n  @method all\n  @static\n  @for RSVP\n  @param {Array} array Array of promises.\n  @param {String} label An optional label. This is useful\n  for tooling.\n*/\nfunction all$1(array, label) {\n  return Promise.all(array, label);\n}\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AllSettled = function (_Enumerator) {\n  _inherits(AllSettled, _Enumerator);\n\n  function AllSettled(Constructor, entries, label) {\n    return _possibleConstructorReturn(this, _Enumerator.call(this, Constructor, entries, false /* don't abort on reject */, label));\n  }\n\n  return AllSettled;\n}(Enumerator);\n\nAllSettled.prototype._makeResult = makeSettledResult;\n\n/**\n`RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\na fail-fast method, it waits until all the promises have returned and\nshows you all the results. This is useful if you want to handle multiple\npromises' failure states together as a set.\n Returns a promise that is fulfilled when all the given promises have been\nsettled. The return promise is fulfilled with an array of the states of\nthe promises passed into the `promises` array argument.\n Each state object will either indicate fulfillment or rejection, and\nprovide the corresponding value or reason. The states will take one of\nthe following formats:\n ```javascript\n{ state: 'fulfilled', value: value }\n  or\n{ state: 'rejected', reason: reason }\n```\n Example:\n ```javascript\nlet promise1 = RSVP.Promise.resolve(1);\nlet promise2 = RSVP.Promise.reject(new Error('2'));\nlet promise3 = RSVP.Promise.reject(new Error('3'));\nlet promises = [ promise1, promise2, promise3 ];\n RSVP.allSettled(promises).then(function(array){\n  // array == [\n  //   { state: 'fulfilled', value: 1 },\n  //   { state: 'rejected', reason: Error },\n  //   { state: 'rejected', reason: Error }\n  // ]\n  // Note that for the second item, reason.message will be '2', and for the\n  // third item, reason.message will be '3'.\n}, function(error) {\n  // Not run. (This block would only be called if allSettled had failed,\n  // for instance if passed an incorrect argument type.)\n});\n```\n @method allSettled\n@static\n@for RSVP\n@param {Array} entries\n@param {String} label - optional string that describes the promise.\nUseful for tooling.\n@return {Promise} promise that is fulfilled with an array of the settled\nstates of the constituent promises.\n*/\n\nfunction allSettled(entries, label) {\n  if (!isArray(entries)) {\n    return Promise.reject(new TypeError(\"Promise.allSettled must be called with an array\"), label);\n  }\n\n  return new AllSettled(Promise, entries, label).promise;\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.race`.\n\n  @method race\n  @static\n  @for RSVP\n  @param {Array} array Array of promises.\n  @param {String} label An optional label. This is useful\n  for tooling.\n */\nfunction race$1(array, label) {\n  return Promise.race(array, label);\n}\n\nfunction _possibleConstructorReturn$1(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits$1(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar PromiseHash = function (_Enumerator) {\n  _inherits$1(PromiseHash, _Enumerator);\n\n  function PromiseHash(Constructor, object) {\n    var abortOnReject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var label = arguments[3];\n    return _possibleConstructorReturn$1(this, _Enumerator.call(this, Constructor, object, abortOnReject, label));\n  }\n\n  PromiseHash.prototype._init = function _init(Constructor, object) {\n    this._result = {};\n\n    this._enumerate(object);\n    if (this._remaining === 0) {\n      fulfill(this.promise, this._result);\n    }\n  };\n\n  PromiseHash.prototype._enumerate = function _enumerate(input) {\n    var promise = this.promise;\n    var results = [];\n\n    for (var key in input) {\n      if (hasOwnProperty.call(input, key)) {\n        results.push({\n          position: key,\n          entry: input[key]\n        });\n      }\n    }\n\n    var length = results.length;\n    this._remaining = length;\n    var result = void 0;\n\n    for (var i = 0; promise._state === PENDING && i < length; i++) {\n      result = results[i];\n      this._eachEntry(result.entry, result.position);\n    }\n  };\n\n  return PromiseHash;\n}(Enumerator);\n\n/**\n  `RSVP.hash` is similar to `RSVP.all`, but takes an object instead of an array\n  for its `promises` argument.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  fulfilled, or rejected if any of them become rejected. The returned promise\n  is fulfilled with a hash that has the same key names as the `promises` object\n  argument. If any of the values in the object are not promises, they will\n  simply be copied over to the fulfilled object.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.resolve(1),\n    yourPromise: RSVP.resolve(2),\n    theirPromise: RSVP.resolve(3),\n    notAPromise: 4\n  };\n\n  RSVP.hash(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: 1,\n    //   yourPromise: 2,\n    //   theirPromise: 3,\n    //   notAPromise: 4\n    // }\n  });\n  ````\n\n  If any of the `promises` given to `RSVP.hash` are rejected, the first promise\n  that is rejected will be given as the reason to the rejection handler.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.resolve(1),\n    rejectedPromise: RSVP.reject(new Error('rejectedPromise')),\n    anotherRejectedPromise: RSVP.reject(new Error('anotherRejectedPromise')),\n  };\n\n  RSVP.hash(promises).then(function(hash){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === 'rejectedPromise'\n  });\n  ```\n\n  An important note: `RSVP.hash` is intended for plain JavaScript objects that\n  are just a set of keys and values. `RSVP.hash` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  function MyConstructor(){\n    this.example = RSVP.resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: RSVP.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  RSVP.hash(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: 'Example'\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hash\n  @static\n  @for RSVP\n  @param {Object} object\n  @param {String} label optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all properties of `promises`\n  have been fulfilled, or rejected if any of them become rejected.\n*/\nfunction hash(object, label) {\n  if (!isObject(object)) {\n    return Promise.reject(new TypeError(\"Promise.hash must be called with an object\"), label);\n  }\n\n  return new PromiseHash(Promise, object, label).promise;\n}\n\nfunction _possibleConstructorReturn$2(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits$2(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HashSettled = function (_PromiseHash) {\n  _inherits$2(HashSettled, _PromiseHash);\n\n  function HashSettled(Constructor, object, label) {\n    return _possibleConstructorReturn$2(this, _PromiseHash.call(this, Constructor, object, false, label));\n  }\n\n  return HashSettled;\n}(PromiseHash);\n\nHashSettled.prototype._makeResult = makeSettledResult;\n\n/**\n  `RSVP.hashSettled` is similar to `RSVP.allSettled`, but takes an object\n  instead of an array for its `promises` argument.\n\n  Unlike `RSVP.all` or `RSVP.hash`, which implement a fail-fast method,\n  but like `RSVP.allSettled`, `hashSettled` waits until all the\n  constituent promises have returned and then shows you all the results\n  with their states and values/reasons. This is useful if you want to\n  handle multiple promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled, or rejected if the passed parameters are invalid.\n\n  The returned promise is fulfilled with a hash that has the same key names as\n  the `promises` object argument. If any of the values in the object are not\n  promises, they will be copied over to the fulfilled object and marked with state\n  'fulfilled'.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.Promise.resolve(1),\n    yourPromise: RSVP.Promise.resolve(2),\n    theirPromise: RSVP.Promise.resolve(3),\n    notAPromise: 4\n  };\n\n  RSVP.hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: { state: 'fulfilled', value: 1 },\n    //   yourPromise: { state: 'fulfilled', value: 2 },\n    //   theirPromise: { state: 'fulfilled', value: 3 },\n    //   notAPromise: { state: 'fulfilled', value: 4 }\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.hash` are rejected, the state will\n  be set to 'rejected' and the reason for rejection provided.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.Promise.resolve(1),\n    rejectedPromise: RSVP.Promise.reject(new Error('rejection')),\n    anotherRejectedPromise: RSVP.Promise.reject(new Error('more rejection')),\n  };\n\n  RSVP.hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise:              { state: 'fulfilled', value: 1 },\n    //   rejectedPromise:        { state: 'rejected', reason: Error },\n    //   anotherRejectedPromise: { state: 'rejected', reason: Error },\n    // }\n    // Note that for rejectedPromise, reason.message == 'rejection',\n    // and for anotherRejectedPromise, reason.message == 'more rejection'.\n  });\n  ```\n\n  An important note: `RSVP.hashSettled` is intended for plain JavaScript objects that\n  are just a set of keys and values. `RSVP.hashSettled` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  function MyConstructor(){\n    this.example = RSVP.Promise.resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: RSVP.Promise.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  RSVP.hashSettled(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: { state: 'fulfilled', value: 'Example' }\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hashSettled\n  @for RSVP\n  @param {Object} object\n  @param {String} label optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when when all properties of `promises`\n  have been settled.\n  @static\n*/\n\nfunction hashSettled(object, label) {\n  if (!isObject(object)) {\n    return Promise.reject(new TypeError(\"RSVP.hashSettled must be called with an object\"), label);\n  }\n\n  return new HashSettled(Promise, object, false, label).promise;\n}\n\n/**\n  `RSVP.rethrow` will rethrow an error on the next turn of the JavaScript event\n  loop in order to aid debugging.\n\n  Promises A+ specifies that any exceptions that occur with a promise must be\n  caught by the promises implementation and bubbled to the last handler. For\n  this reason, it is recommended that you always specify a second rejection\n  handler function to `then`. However, `RSVP.rethrow` will throw the exception\n  outside of the promise, so it bubbles up to your console if in the browser,\n  or domain/cause uncaught exception in Node. `rethrow` will also throw the\n  error again so the error can be handled by the promise per the spec.\n\n  ```javascript\n  function throws(){\n    throw new Error('Whoops!');\n  }\n\n  let promise = new RSVP.Promise(function(resolve, reject){\n    throws();\n  });\n\n  promise.catch(RSVP.rethrow).then(function(){\n    // Code here doesn't run because the promise became rejected due to an\n    // error!\n  }, function (err){\n    // handle the error here\n  });\n  ```\n\n  The 'Whoops' error will be thrown on the next turn of the event loop\n  and you can watch for it in your console. You can also handle it using a\n  rejection handler given to `.then` or `.catch` on the returned promise.\n\n  @method rethrow\n  @static\n  @for RSVP\n  @param {Error} reason reason the promise became rejected.\n  @throws Error\n  @static\n*/\nfunction rethrow(reason) {\n  setTimeout(function () {\n    throw reason;\n  });\n  throw reason;\n}\n\n/**\n  `RSVP.defer` returns an object similar to jQuery's `$.Deferred`.\n  `RSVP.defer` should be used when porting over code reliant on `$.Deferred`'s\n  interface. New code should use the `RSVP.Promise` constructor instead.\n\n  The object returned from `RSVP.defer` is a plain object with three properties:\n\n  * promise - an `RSVP.Promise`.\n  * reject - a function that causes the `promise` property on this object to\n    become rejected\n  * resolve - a function that causes the `promise` property on this object to\n    become fulfilled.\n\n  Example:\n\n   ```javascript\n   let deferred = RSVP.defer();\n\n   deferred.resolve(\"Success!\");\n\n   deferred.promise.then(function(value){\n     // value here is \"Success!\"\n   });\n   ```\n\n  @method defer\n  @static\n  @for RSVP\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Object}\n */\n\nfunction defer(label) {\n  var deferred = { resolve: undefined, reject: undefined };\n\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  }, label);\n\n  return deferred;\n}\n\n/**\n `RSVP.map` is similar to JavaScript's native `map` method, except that it\n  waits for all promises to become fulfilled before running the `mapFn` on\n  each item in given to `promises`. `RSVP.map` returns a promise that will\n  become fulfilled with the result of running `mapFn` on the values the promises\n  become fulfilled with.\n\n  For example:\n\n  ```javascript\n\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  RSVP.map(promises, mapFn).then(function(result){\n    // result is [ 2, 3, 4 ]\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.map` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error('2'));\n  let promise3 = RSVP.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  RSVP.map(promises, mapFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `RSVP.map` will also wait if a promise is returned from `mapFn`. For example,\n  say you want to get all comments from a set of blog posts, but you need\n  the blog posts first because they contain a url to those comments.\n\n  ```javscript\n\n  let mapFn = function(blogPost){\n    // getComments does some ajax and returns an RSVP.Promise that is fulfilled\n    // with some comments data\n    return getComments(blogPost.comments_url);\n  };\n\n  // getBlogPosts does some ajax and returns an RSVP.Promise that is fulfilled\n  // with some blog post data\n  RSVP.map(getBlogPosts(), mapFn).then(function(comments){\n    // comments is the result of asking the server for the comments\n    // of all blog posts returned from getBlogPosts()\n  });\n  ```\n\n  @method map\n  @static\n  @for RSVP\n  @param {Array} promises\n  @param {Function} mapFn function to be called on each fulfilled promise.\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with the result of calling\n  `mapFn` on each fulfilled promise or value when they become fulfilled.\n   The promise will be rejected if any of the given `promises` become rejected.\n  @static\n*/\nfunction map(promises, mapFn, label) {\n  if (!isArray(promises)) {\n    return Promise.reject(new TypeError(\"RSVP.map must be called with an array\"), label);\n  }\n\n  if (!isFunction(mapFn)) {\n    return Promise.reject(new TypeError(\"RSVP.map expects a function as a second argument\"), label);\n  }\n\n  return Promise.all(promises, label).then(function (values) {\n    var length = values.length;\n    var results = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      results[i] = mapFn(values[i]);\n    }\n\n    return Promise.all(results, label);\n  });\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.resolve`.\n\n  @method resolve\n  @static\n  @for RSVP\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$2(value, label) {\n  return Promise.resolve(value, label);\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.reject`.\n\n  @method reject\n  @static\n  @for RSVP\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$2(reason, label) {\n  return Promise.reject(reason, label);\n}\n\n/**\n `RSVP.filter` is similar to JavaScript's native `filter` method, except that it\n  waits for all promises to become fulfilled before running the `filterFn` on\n  each item in given to `promises`. `RSVP.filter` returns a promise that will\n  become fulfilled with the result of running `filterFn` on the values the\n  promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n\n  let promises = [promise1, promise2, promise3];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  RSVP.filter(promises, filterFn).then(function(result){\n    // result is [ 2, 3 ]\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.filter` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error('2'));\n  let promise3 = RSVP.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  RSVP.filter(promises, filterFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `RSVP.filter` will also wait for any promises returned from `filterFn`.\n  For instance, you may want to fetch a list of users then return a subset\n  of those users based on some asynchronous operation:\n\n  ```javascript\n\n  let alice = { name: 'alice' };\n  let bob   = { name: 'bob' };\n  let users = [ alice, bob ];\n\n  let promises = users.map(function(user){\n    return RSVP.resolve(user);\n  });\n\n  let filterFn = function(user){\n    // Here, Alice has permissions to create a blog post, but Bob does not.\n    return getPrivilegesForUser(user).then(function(privs){\n      return privs.can_create_blog_post === true;\n    });\n  };\n  RSVP.filter(promises, filterFn).then(function(users){\n    // true, because the server told us only Alice can create a blog post.\n    users.length === 1;\n    // false, because Alice is the only user present in `users`\n    users[0] === bob;\n  });\n  ```\n\n  @method filter\n  @static\n  @for RSVP\n  @param {Array} promises\n  @param {Function} filterFn - function to be called on each resolved value to\n  filter the final results.\n  @param {String} label optional string describing the promise. Useful for\n  tooling.\n  @return {Promise}\n*/\n\nfunction resolveAll(promises, label) {\n  return Promise.all(promises, label);\n}\n\nfunction resolveSingle(promise, label) {\n  return Promise.resolve(promise, label).then(function (promises) {\n    return resolveAll(promises, label);\n  });\n}\n\nfunction filter(promises, filterFn, label) {\n  if (!isArray(promises) && !(isObject(promises) && promises.then !== undefined)) {\n    return Promise.reject(new TypeError(\"RSVP.filter must be called with an array or promise\"), label);\n  }\n\n  if (!isFunction(filterFn)) {\n    return Promise.reject(new TypeError(\"RSVP.filter expects function as a second argument\"), label);\n  }\n\n  var promise = isArray(promises) ? resolveAll(promises, label) : resolveSingle(promises, label);\n  return promise.then(function (values) {\n    var length = values.length;\n    var filtered = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      filtered[i] = filterFn(values[i]);\n    }\n\n    return resolveAll(filtered, label).then(function (filtered) {\n      var results = new Array(length);\n      var newLength = 0;\n\n      for (var _i = 0; _i < length; _i++) {\n        if (filtered[_i]) {\n          results[newLength] = values[_i];\n          newLength++;\n        }\n      }\n\n      results.length = newLength;\n\n      return results;\n    });\n  });\n}\n\nvar len = 0;\nvar vertxNext = void 0;\nfunction asap(callback, arg) {\n  queue$1[len] = callback;\n  queue$1[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 1, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    scheduleFlush$1();\n  }\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  var nextTick = process.nextTick;\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // setImmediate should be used instead instead\n  var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n  if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n    nextTick = setImmediate;\n  }\n  return function () {\n    return nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    return node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  return function () {\n    return setTimeout(flush, 1);\n  };\n}\n\nvar queue$1 = new Array(1000);\n\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue$1[i];\n    var arg = queue$1[i + 1];\n\n    callback(arg);\n\n    queue$1[i] = undefined;\n    queue$1[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertex() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush$1 = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush$1 = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush$1 = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush$1 = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush$1 = attemptVertex();\n} else {\n  scheduleFlush$1 = useSetTimeout();\n}\n\nvar platform = void 0;\n\n/* global self */\nif (typeof self === 'object') {\n  platform = self;\n\n  /* global global */\n} else if (typeof global === 'object') {\n  platform = global;\n} else {\n  throw new Error('no global: `self` or `global` found');\n}\n\nvar _asap$cast$Promise$Ev;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// defaults\nconfig.async = asap;\nconfig.after = function (cb) {\n  return setTimeout(cb, 0);\n};\nvar cast = resolve$2;\n\nvar async = function (callback, arg) {\n  return config.async(callback, arg);\n};\n\nfunction on() {\n  config['on'].apply(config, arguments);\n}\n\nfunction off() {\n  config['off'].apply(config, arguments);\n}\n\n// Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\nif (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n  var callbacks = window['__PROMISE_INSTRUMENTATION__'];\n  configure('instrument', true);\n  for (var eventName in callbacks) {\n    if (callbacks.hasOwnProperty(eventName)) {\n      on(eventName, callbacks[eventName]);\n    }\n  }\n}\n\n// the default export here is for backwards compat:\n//   https://github.com/tildeio/rsvp.js/issues/434\nvar rsvp = (_asap$cast$Promise$Ev = {\n  asap: asap,\n  cast: cast,\n  Promise: Promise,\n  EventTarget: EventTarget,\n  all: all$1,\n  allSettled: allSettled,\n  race: race$1,\n  hash: hash,\n  hashSettled: hashSettled,\n  rethrow: rethrow,\n  defer: defer,\n  denodeify: denodeify,\n  configure: configure,\n  on: on,\n  off: off,\n  resolve: resolve$2,\n  reject: reject$2,\n  map: map\n}, _defineProperty(_asap$cast$Promise$Ev, 'async', async), _defineProperty(_asap$cast$Promise$Ev, 'filter', filter), _asap$cast$Promise$Ev);\n\nexports['default'] = rsvp;\nexports.asap = asap;\nexports.cast = cast;\nexports.Promise = Promise;\nexports.EventTarget = EventTarget;\nexports.all = all$1;\nexports.allSettled = allSettled;\nexports.race = race$1;\nexports.hash = hash;\nexports.hashSettled = hashSettled;\nexports.rethrow = rethrow;\nexports.defer = defer;\nexports.denodeify = denodeify;\nexports.configure = configure;\nexports.on = on;\nexports.off = off;\nexports.resolve = resolve$2;\nexports.reject = reject$2;\nexports.map = map;\nexports.async = async;\nexports.filter = filter;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n//# sourceMappingURL=rsvp.map\n\n\n\n// WEBPACK FOOTER //\n// ./~/rsvp/dist/rsvp.js","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n// WEBPACK FOOTER //\n// ./~/timers-browserify/main.js","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n// WEBPACK FOOTER //\n// ./~/setimmediate/setImmediate.js","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n// WEBPACK FOOTER //\n// ./~/global/document.js","import axios from 'axios';\nimport cookies from 'js-cookie';\n\nfunction axiosConfig() {\n  const callId = cookies.get('_x_call_id');\n  if (callId) {\n    axios.defaults.headers.common['X-Call-Id'] = callId;\n  }\n  return axios;\n}\n\nexport default axiosConfig();\n\n\n\n// WEBPACK FOOTER //\n// ./src/global/js/helpers/axios.js","module.exports = require('./lib/axios');\n\n\n// WEBPACK FOOTER //\n// ./~/axios/index.js","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/axios.js","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  typeof document.createElement -> undefined\n */\nfunction isStandardBrowserEnv() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined' &&\n    typeof document.createElement === 'function'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/utils.js","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/bind.js","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/Axios.js","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/defaults.js","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/normalizeHeaderName.js","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        if (request.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/adapters/xhr.js","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response\n    ));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/settle.js","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, response);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/createError.js","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.response = response;\n  return error;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/enhanceError.js","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/buildURL.js","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/parseHeaders.js","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/isURLSameOrigin.js","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/btoa.js","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/cookies.js","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/InterceptorManager.js","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/dispatchRequest.js","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/core/transformData.js","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/cancel/isCancel.js","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/isAbsoluteURL.js","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/combineURLs.js","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/cancel/Cancel.js","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/cancel/CancelToken.js","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/axios/lib/helpers/spread.js","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./~/js-cookie/src/js.cookie.js","import document from 'global/document';\nimport axios from '~global-js/helpers/axios';\nimport { Promise, all } from 'rsvp';\nimport es6Promise from 'es6-promise';\n\nexport default class Svg4EveryBody {\n  constructor() {\n    this.state = {\n      list: {},\n      data: {},\n      updating: false,\n    };\n  }\n\n  init = () => {\n    es6Promise.polyfill();\n\n    if (this.polyDetect()) {\n      this.polyFill();\n\n      setInterval(() => {\n        this.polyFill();\n      }, 5000);\n    }\n  };\n\n  polyDetect = () => {\n    const userAgent = navigator.userAgent;\n    const olderIEUA = /\\bMSIE [1-8]\\.0\\b/;\n    const newerIeua = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/;\n    const webkitUa = /\\bAppleWebKit\\/(\\d+)\\b/;\n    const olderEdgeUa = /\\bEdge\\/12\\.(\\d+)\\b/;\n    const edgeUa = /\\bEdge\\/.(\\d+)\\b/;\n    const inIFrame = window.top !== window.self;\n    const huaWeiBrowser = /\\bHUAWEI\\b/;\n\n    return olderIEUA.test(userAgent)\n      || newerIeua.test(userAgent)\n      || (userAgent.match(olderEdgeUa) || [])[1] < 10547\n      || (userAgent.match(webkitUa) || [])[1] < 537\n      || (edgeUa.test(userAgent) && inIFrame)\n      || ((userAgent.match(webkitUa) || [])[1] < 538 && huaWeiBrowser.test(userAgent));\n  };\n\n  polyFill = () => {\n    const files = document.querySelectorAll('use');\n\n    if (!files) {\n      return false;\n    }\n\n    [].slice.call(files).map((file) => {\n      const fullPosition = file.getAttribute('xlink:href');\n      const url = fullPosition.split('#')[0];\n      const svgName = fullPosition.split('#')[1];\n\n      if (url && Object.keys(this.state.list).indexOf(url) === -1) {\n        this.state.list[url] = [svgName];\n      } else if (url && svgName && this.state.list[url].indexOf(svgName) === -1) {\n        this.state.list[url].push(svgName);\n      }\n\n      return true;\n    });\n\n    if (!this.state.updating && Object.keys(this.state.list).length > 0) {\n      this.updateState();\n    }\n\n    return true;\n  };\n\n  updateState = () => {\n    const fileNames = Object.keys(this.state.list);\n    const svgLoad = [];\n\n    this.state.updating = true;\n\n    fileNames.map((svg) => {\n      const promise = new Promise((resolve) => {\n        axios.get(svg, {\n          timeout: 2000,\n        })\n          .then((response) => {\n            const container = document.implementation.createHTMLDocument('');\n            container.body.innerHTML = response.data;\n\n            if (!this.state.data[svg]) {\n              this.state.data[svg] = {};\n            }\n\n            this.state.list[svg].map((id) => {\n              const element = container.getElementById(id);\n\n              if (element && !this.state.data[svg][id]) {\n                this.state.data[svg][id] = element;\n              }\n\n              return true;\n            });\n            resolve();\n          })\n          .catch(() => {\n            resolve();\n          });\n      });\n      svgLoad.push(promise);\n\n      return true;\n    });\n\n    all(svgLoad).then(() => {\n      this.updateDom();\n    });\n  };\n\n  updateDom = () => {\n    const nodes = document.querySelectorAll('use');\n    [].slice.call(nodes).map((node) => {\n      const position = node.getAttribute('xlink:href');\n\n      if (!position) {\n        return false;\n      }\n      const url = position.split('#')[0];\n      const name = position.split('#')[1];\n\n      const data = this.state.data[url] ? this.state.data[url][name] : null;\n      if (data) {\n        this.embed(node.parentNode, node, data);\n      }\n\n      return true;\n    });\n\n    this.state = {\n      list: {},\n      data: {},\n      updating: false,\n    };\n  };\n\n  embed = (parent, svg, target) => {\n    if (target) {\n      const fragment = document.createDocumentFragment();\n      const viewBox = !svg.hasAttribute('viewBox') && target.getAttribute('viewBox');\n\n      if (viewBox) {\n        parent.setAttribute('viewBox', viewBox);\n      }\n\n      for (let clone = target.cloneNode(!0); clone.childNodes.length;) {\n        fragment.appendChild(clone.firstChild);\n      }\n      parent.removeChild(svg);\n      parent.appendChild(fragment);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/svg4everybody/js/svg4everybody.js"],"sourceRoot":""}